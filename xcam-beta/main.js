// main.js
// Arquivo principal de bootstrap do XCam Beta App V3.0.
// Respons√°vel por iniciar os m√≥dulos visuais, funcionais e de dados da aplica√ß√£o.

// =====================
// IMPORTA√á√ïES DE M√ìDULOS
// =====================

// Carrossel de destaques no topo da p√°gina
import { setupCarousel } from "./carousel.js";

// Menu de navega√ß√£o responsivo (desktop + mobile)
import { setupMenu } from "./menu.js";

// Modal universal que exibe a transmiss√£o e detalhes do usu√°rio ao clicar em um card
import { setupModal } from "./modal.js";

// L√≥gica e eventos de filtro (g√™nero, pa√≠s, orienta√ß√£o etc)
import { setupFilters } from "./filters.js";

// Inicializa√ß√£o da grade de transmiss√µes (grid principal de cards)
import { setupBroadcasts } from "./broadcasts.js";

// Popula dinamicamente os selects dos filtros com dados da API (pa√≠ses, g√™neros etc)
import { populateFilterOptions } from "./filters-populate.js";

// =====================
// FUN√á√ÉO P√öBLICA PARA REINICIALIZAR O APP
// =====================
export function initApp() {
  // Esta fun√ß√£o pode ser reutilizada para reinicializar o estado da aplica√ß√£o
  // Exemplo de uso: ap√≥s login, logout ou atualiza√ß√£o de permiss√µes
  setupBroadcasts();
}

// =====================
// INICIALIZA√á√ÉO DO APP AO CARREGAR O DOM
// =====================
document.addEventListener("DOMContentLoaded", () => {
  // Etapa 1 ‚Äî Componentes de estrutura base
  setupCarousel(); // Inicializa o carrossel superior de destaques
  setupMenu(); // Menu de navega√ß√£o responsivo
  setupModal(); // Modal de exibi√ß√£o detalhada de transmiss√µes

  // Etapa 2 ‚Äî Prepara√ß√£o dos filtros
  // populateFilterOptions() deve rodar antes para garantir que os selects estejam populados
  populateFilterOptions();

  // Etapa 3 ‚Äî Configura√ß√£o de l√≥gica dos filtros
  setupFilters();

  // Etapa 4 ‚Äî Inicializa grade de transmiss√µes
  // Esta fun√ß√£o cuida do carregamento inicial da API, renderiza os cards e configura pagina√ß√£o
  setupBroadcasts();

  // Observa√ß√£o: N√ÉO √© necess√°rio chamar refreshBroadcasts aqui, pois setupBroadcasts j√° realiza o primeiro fetch.
});

/*
üîç Descri√ß√£o dos m√≥dulos integrados:

- carousel.js:
  Controla o carrossel de slides de destaque com rota√ß√£o autom√°tica e controles manuais.

- menu.js:
  Gerencia o menu principal e a vers√£o mobile (hamb√∫rguer), incluindo toggle e responsividade.

- modal.js:
  Abre um modal detalhado ao clicar em um card, carregando dados do usu√°rio e exibindo o XCam Player integrado.

- filters.js:
  Aplica filtros ao conjunto de transmiss√µes com base nos selects (g√™nero, pa√≠s, etc).

- filters-populate.js:
  Realiza fetch din√¢mico dos valores dos filtros dispon√≠veis via API e injeta nos selects.

- broadcasts.js:
  Respons√°vel por carregar as transmiss√µes da API, renderizar os cards, aplicar filtros e pagina√ß√£o.

‚úÖ Benef√≠cios desta arquitetura:
- Cada m√≥dulo tem responsabilidade √∫nica e bem definida.
- Inicializa√ß√£o em ordem l√≥gica e funcional.
- Escal√°vel: novos m√≥dulos podem ser adicionados sem reescrever a base.
- Clareza e facilidade de manuten√ß√£o com coment√°rios descritivos.

üì¶ Vers√£o de refer√™ncia: XCam Beta App V3.0
*/
