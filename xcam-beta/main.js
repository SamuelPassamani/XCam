// main.js
// Bootstrap principal do XCam Beta App V3.3
// Respons√°vel por inicializar todos os m√≥dulos visuais, funcionais e de dados da aplica√ß√£o.
// Estrategicamente alinhado ao novo fluxo otimizado de carregamento, filtragem e renderiza√ß√£o da grade de transmiss√µes.
// Cada m√≥dulo √© inicializado em ordem l√≥gica e funcional, garantindo performance, UX e manuten√ß√£o facilitada.

// =====================
// IMPORTA√á√ïES DE M√ìDULOS
// =====================

// Carrossel de destaques (topo)
import { setupCarousel } from "https://xcam.gay/carousel.js";

// Menu responsivo (desktop/mobile)
import { setupMenu } from "https://xcam.gay/menu.js";

// Modal universal para transmiss√µes ao clicar em um card
import { setupModal } from "https://xcam.gay/modal.js";

// L√≥gica e eventos de filtro (g√™nero, pa√≠s, orienta√ß√£o, etc)
import { setupFilters } from "https://xcam.gay/filters.js";

// Inicializa√ß√£o da grade de transmiss√µes (grid principal)
// Agora utiliza fluxo de placeholders, atualiza√ß√£o incremental e fetch √∫nico da API principal
import { setupBroadcasts } from "https://xcam.gay/broadcasts.js";

// Popula√ß√£o din√¢mica dos selects dos filtros (valores em ingl√™s/c√≥digo)
import { populateFilterOptions } from "https://xcam.gay/filters-populate.js";

// =====================
// FUN√á√ÉO P√öBLICA PARA REINICIALIZAR O APP
// =====================
/**
 * Reinicializa o estado da aplica√ß√£o.
 * √ötil ap√≥s login, logout ou atualiza√ß√£o de permiss√µes.
 * Sempre respeita a ordem ideal: popula filtros, configura listeners e recarrega grid.
 */
export function initApp() {
  populateFilterOptions();
  setupFilters();
  setupBroadcasts();
}

// =====================
// INICIALIZA√á√ÉO DO APP AO CARREGAR O DOM
// =====================
document.addEventListener("DOMContentLoaded", () => {
  /*
    Ordem estrat√©gica para funcionamento otimizado dos filtros e grade:
    1. Inicializa componentes visuais independentes da grade/filtros.
    2. Preenche selects dos filtros com valores corretos (API-ready).
    3. Configura listeners dos filtros.
    4. Inicializa a grid de transmiss√µes, que j√° renderiza placeholders imediatamente.
    Observa√ß√£o: N√£o √© necess√°rio chamar refreshBroadcasts, pois setupBroadcasts j√° realiza o fetch inicial.
  */

  // M√≥dulos visuais independentes
  setupCarousel();
  setupMenu();
  setupModal();

  // Filtros: popula op√ß√µes e configura listeners ANTES da grid para garantir valores corretos
  populateFilterOptions();
  setupFilters();

  // Inicializa a grade de transmiss√µes com placeholders e atualiza√ß√£o incremental
  setupBroadcasts();
});

/*
üîç M√≥dulos integrados (revisado, 2025):

- carousel.js:
  Carrossel de destaques, rota√ß√£o autom√°tica e controles manuais.

- menu.js:
  Menu principal e mobile, com toggle e responsividade.

- modal.js:
  Modal detalhado ao clicar em um card, carregando player XCam.

- filters.js:
  Aplica filtros robustos, enviando apenas valores v√°lidos √† API (nunca "all" ou em portugu√™s).

- filters-populate.js:
  Preenche selects dos filtros com valores API-ready, labels amig√°veis.

- broadcasts.js:
  Carrega transmiss√µes da API √∫nica, renderiza placeholders (loading.gif), atualiza cards incrementalmente, nunca faz fetch individual, garante performance m√°xima e UX suave.

‚úÖ Benef√≠cios:
- Responsabilidade √∫nica por m√≥dulo.
- Inicializa√ß√£o em ordem l√≥gica, evitando bugs de filtro e valores inv√°lidos.
- Escal√°vel para novos m√≥dulos e features.
- Estrutura robusta para manuten√ß√£o, performance e clareza.

üì¶ Vers√£o de refer√™ncia: XCam Beta App V3.3 (grade otimizada, fetch √∫nico, placeholders, filtros robustos)
*/
