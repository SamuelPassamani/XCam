{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/SamuelPassamani/XCam/blob/main/xcam-colab/XCam_REC_V3.8.2ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Célula 1: Configurações Auxiliares, Parâmetros Globais e Log Centralizado\n",
        "\n",
        "**Objetivo:**  \n",
        "Esta célula inicializa e centraliza todas as variáveis globais, parâmetros essenciais e agora também fornece um utilitário robusto para o log único do notebook XCam.  \n",
        "Permite ajuste rápido e seguro do comportamento do notebook, incluindo limites de processamento, controle de gravação, commit automático e mecanismos de resiliência contra transmissões problemáticas.\n",
        "\n",
        "## Principais pontos e melhorias implementadas\n",
        "\n",
        "- **Centralização dos parâmetros globais:**  \n",
        "  Todos os valores críticos (limites, thresholds, caminhos) são definidos e propagados como globais pelo notebook.\n",
        "- **Log único modular e estruturado (`xcam_master.log`):**  \n",
        "  Todas as operações relevantes (busca, gravação, blacklist, commit, erros, etc.) agora são registradas em um único arquivo JSON Lines.  \n",
        "  Cada entrada inclui sessão, evento, id, username, timestamps, status e detalhes.\n",
        "- **Funções utilitárias para o log:**  \n",
        "  Adição, busca, remoção e atualização de eventos são facilitadas por funções modulares (CRUD), promovendo robustez, rastreabilidade e fácil manutenção.\n",
        "- **Blacklist, falhas e processamento padronizados por `id`:**  \n",
        "  Toda lógica de controle é feita via identificador único, com `username` para exibição, garantindo unicidade e eliminando inconsistências.\n",
        "- **Função interativa para seleção de transmissões específicas:**  \n",
        "  Permite ao usuário informar nomes de usuários para filtrar transmissões antes do processamento.\n",
        "- **Comentários detalhados:**  \n",
        "  Cada etapa do código está documentada para orientar ajustes, manutenção e integração por toda a equipe.\n",
        "\n",
        "---\n",
        "\n",
        "## Parâmetros globais controlados nesta célula\n",
        "\n",
        "- **`LIMIT_DEFAULT`**: Quantidade máxima de transmissões processadas em paralelo/lote.\n",
        "- **`PAGE_DEFAULT`**: Página inicial para busca na API.\n",
        "- **`RECORD_SECONDS`**: Tempo máximo de gravação de cada vídeo (em segundos).\n",
        "- **`RECORD_SECONDS_MIN`**: Tempo mínimo exigido para considerar o vídeo válido (em segundos).\n",
        "- **`API_SEARCH_LIMIT`**: Limite de transmissões retornadas ao buscar usuários específicos.\n",
        "- **`COMMIT_PUSH_THRESHOLD`**: Quantidade de transmissões processadas até realizar commit/push automático (0 = commit imediato a cada gravação).\n",
        "- **`LOG_PATH`**: Caminho do arquivo único de log (JSONL).\n",
        "- **`BLACKLIST_TIMEOUT`**: Tempo de expiração da blacklist (em segundos).\n",
        "- **`BLACKLIST_MAX_FAILURES`**: Quantidade de falhas consecutivas antes de banir temporariamente o usuário.\n",
        "\n",
        "---\n",
        "\n",
        "## Estrutura do log único (`xcam_master.log`)\n",
        "\n",
        "Cada entrada segue o modelo:\n",
        "```json\n",
        "{\n",
        "  \"timestamp\": \"2025-06-06T06:15:00Z\",\n",
        "  \"sessao\": \"busca|gravação|blacklist|commit|erro|...\",\n",
        "  \"evento\": \"...\",\n",
        "  \"id\": \"...\",         // identificador único (primário)\n",
        "  \"username\": \"...\",   // nome do usuário para exibição\n",
        "  \"status\": \"...\",     // ok|erro|blacklisted|expirado|...\n",
        "  \"detalhes\": \"...\",   // informações adicionais\n",
        "}\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Funções utilitárias para o log\n",
        "\n",
        "- **`append_log(entry, log_path=LOG_PATH)`**: Adiciona uma nova entrada ao log central.\n",
        "- **`read_logs(log_path=LOG_PATH)`**: Lê todas as entradas do log.\n",
        "- **`query_logs(...)`**: Consulta entradas do log por filtros opcionais (sessão, id, status, etc).\n",
        "- **`remove_logs(condition_fn, log_path=LOG_PATH)`**: Remove todas as entradas que satisfaçam a condição.\n",
        "- **`update_log_entry(match_fn, update_fn, log_path=LOG_PATH)`**: Atualiza entradas do log conforme regra.\n",
        "\n",
        "---\n",
        "\n",
        "## Exemplo de uso das funções (a serem aplicadas nas próximas células)\n",
        "\n",
        "```python\n",
        "append_log({\n",
        "    \"sessao\": \"busca\",\n",
        "    \"evento\": \"encontrado\",\n",
        "    \"id\": \"abc123\",\n",
        "    \"username\": \"Manugic_\",\n",
        "    \"status\": \"ok\",\n",
        "    \"detalhes\": \"URL válida\"\n",
        "})\n",
        "\n",
        "# Consultar blacklist:\n",
        "logs_blacklist = query_logs(sessao=\"blacklist\", status=\"blacklisted\")\n",
        "\n",
        "# Remover registros expirados:\n",
        "remove_logs(lambda entry: entry[\"sessao\"] == \"processing\" and expirou(entry), log_path=LOG_PATH)\n",
        "\n",
        "# Atualizar status:\n",
        "update_log_entry(lambda e: e[\"id\"]==\"abc123\", lambda e: e.update({\"status\":\"ok\"}))\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Função interativa\n",
        "\n",
        "Permite ao usuário informar transmissões específicas a serem gravadas antes de iniciar o processamento.\n",
        "\n",
        "---\n",
        "\n",
        "## Segurança, rastreabilidade e manutenção\n",
        "\n",
        "- Todos os parâmetros globais são definidos no início e propagados para todo o notebook, garantindo consistência.\n",
        "- O log único fornece rastreabilidade detalhada e elimina arquivos dispersos (blacklist, falha, etc).\n",
        "- Ajuste qualquer valor diretamente nesta célula para alterar o comportamento global do notebook de forma segura.\n",
        "- Comentários detalhados auxiliam a compreensão, integração e manutenção por toda a equipe.\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "c9hve1ySGVAs"
      },
      "id": "c9hve1ySGVAs"
    },
    {
      "cell_type": "code",
      "source": [
        "# ================================================================\n",
        "# Célula 1: Configuração Global, Parâmetros e Utilitário de Log Único\n",
        "# ================================================================\n",
        "# Objetivo:\n",
        "# - Centralizar configurações globais e thresholds\n",
        "# - Definir e montar caminhos do notebook\n",
        "# - Fornecer utilitário robusto para LOG ÚNICO MODULAR (JSONL)\n",
        "#   => Todas as células e funções usarão este log para registrar, consultar e manipular eventos\n",
        "# - Garantir padronização, rastreabilidade e fácil manutenção futura\n",
        "#\n",
        "# Estratégia aplicada (conforme plano):\n",
        "# - Log único estruturado (JSONL): sessão, evento, id, username, timestamps, status, detalhes\n",
        "# - Funções CRUD para log: adicionar, buscar, atualizar, remover (para blacklist, processing, falhas, auditoria)\n",
        "# - Blacklist e controles baseados em id (com username apenas para exibição)\n",
        "# - Parâmetros globais facilmente editáveis e propagados via globals()\n",
        "# ================================================================\n",
        "\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "import os\n",
        "import json\n",
        "import time\n",
        "from datetime import datetime\n",
        "\n",
        "# ============================\n",
        "# PARÂMETROS GLOBAIS EDITÁVEIS\n",
        "# ============================\n",
        "# Modifique abaixo conforme necessidade do ambiente ou processamento\n",
        "\n",
        "# Limites e thresholds principais de processamento\n",
        "LIMIT_DEFAULT = 50             # Máximo de transmissões processadas por rodada\n",
        "PAGE_DEFAULT = 1               # Página padrão para busca na API\n",
        "RECORD_SECONDS = 12780         # Duração máxima da gravação (em segundos)\n",
        "RECORD_SECONDS_MIN = 660       # Duração mínima válida (em segundos)\n",
        "API_SEARCH_LIMIT = 1500        # Limite ao buscar usuários específicos\n",
        "COMMIT_PUSH_THRESHOLD = 25     # Quantidade de transmissões até commit/push automático (0 = commit imediato)\n",
        "\n",
        "# Caminhos de arquivos principais\n",
        "BASE_PATH = '/content/drive/MyDrive/XCam.Drive/src'\n",
        "LOG_PATH = f\"{BASE_PATH}/logs/xcam_master.log\"          # Arquivo único de log central\n",
        "BLACKLIST_TIMEOUT = 15 * 60                        # Blacklist: tempo de expiração (segundos)\n",
        "BLACKLIST_MAX_FAILURES = 3                         # Blacklist: falhas para banimento temporário\n",
        "\n",
        "# Caminho base do Drive (ajuste se necessário)\n",
        "DRIVE_USER_BASE = \"/content/drive/MyDrive/XCam.Drive/user\"\n",
        "\n",
        "# ============================\n",
        "# ATUALIZAÇÃO GLOBAL DOS PARÂMETROS\n",
        "# ============================\n",
        "# Propaga parâmetros como globais do notebook\n",
        "globals().update({\n",
        "    'LIMIT_DEFAULT': LIMIT_DEFAULT,\n",
        "    'PAGE_DEFAULT': PAGE_DEFAULT,\n",
        "    'RECORD_SECONDS': RECORD_SECONDS,\n",
        "    'RECORD_SECONDS_MIN': RECORD_SECONDS_MIN,\n",
        "    'API_SEARCH_LIMIT': API_SEARCH_LIMIT,\n",
        "    'COMMIT_PUSH_THRESHOLD': COMMIT_PUSH_THRESHOLD,\n",
        "    'LOG_PATH': LOG_PATH,\n",
        "    'BLACKLIST_TIMEOUT': BLACKLIST_TIMEOUT,\n",
        "    'BLACKLIST_MAX_FAILURES': BLACKLIST_MAX_FAILURES\n",
        "})\n",
        "\n",
        "# =============================================================================\n",
        "# UTILITÁRIO DE LOG ÚNICO MODULAR (JSONL)\n",
        "# -----------------------------------------------------------------------------\n",
        "# Cada entrada: {\n",
        "#   \"timestamp\": \"2025-06-06T06:15:00Z\",\n",
        "#   \"sessao\": \"busca|gravação|blacklist|commit|erro|...\",\n",
        "#   \"evento\": \"...\",\n",
        "#   \"id\": \"...\",         # sempre o identificador primário!\n",
        "#   \"username\": \"...\",   # para exibição/auditoria\n",
        "#   \"status\": \"...\",     # ok|erro|blacklisted|expirado|...\n",
        "#   \"detalhes\": \"...\",   # info extra (motivo, paths, etc)\n",
        "# }\n",
        "# =============================================================================\n",
        "\n",
        "def now_iso():\n",
        "    \"\"\"Retorna timestamp UTC em formato ISO.\"\"\"\n",
        "    from datetime import datetime\n",
        "    return datetime.utcnow().isoformat() + \"Z\"\n",
        "\n",
        "def append_log(entry, log_path=LOG_PATH):\n",
        "    \"\"\"\n",
        "    Adiciona uma nova entrada ao log central (JSONL).\n",
        "    Campos obrigatórios: sessao, evento, id, username, status.\n",
        "    \"\"\"\n",
        "    entry.setdefault(\"timestamp\", now_iso())\n",
        "    # Garante campos essenciais para rastreabilidade\n",
        "    for field in [\"sessao\", \"evento\", \"id\", \"username\", \"status\"]:\n",
        "        entry.setdefault(field, \"\")\n",
        "    try:\n",
        "        with open(log_path, \"a\", encoding=\"utf-8\") as f:\n",
        "            f.write(json.dumps(entry, ensure_ascii=False) + \"\\n\")\n",
        "    except Exception as e:\n",
        "        print(f\"❌ ERRO ao escrever no log {log_path}: {e}\")\n",
        "\n",
        "\n",
        "def read_logs(log_path=LOG_PATH):\n",
        "    \"\"\"Lê todas as entradas do log central.\"\"\"\n",
        "    if not os.path.exists(log_path):\n",
        "        return []\n",
        "    logs = []\n",
        "    try:\n",
        "        with open(log_path, \"r\", encoding=\"utf-8\") as f:\n",
        "            for line in f:\n",
        "                line = line.strip()\n",
        "                if line:\n",
        "                    try:\n",
        "                        logs.append(json.loads(line))\n",
        "                    except json.JSONDecodeError as e:\n",
        "                        print(f\"⚠️ Ignorando linha inválida no log {log_path}: {line[:100]}... Erro: {e}\")\n",
        "                        continue\n",
        "    except Exception as e:\n",
        "        print(f\"❌ ERRO ao ler o log {log_path}: {e}\")\n",
        "        return []\n",
        "    return logs\n",
        "\n",
        "\n",
        "def query_logs(sessao=None, id=None, username=None, evento=None, status=None, after=None, before=None, log_path=LOG_PATH):\n",
        "    \"\"\"\n",
        "    Consulta entradas do log por filtros opcionais.\n",
        "    - after/before: string ISO ou datetime\n",
        "    \"\"\"\n",
        "    logs = read_logs(log_path)\n",
        "    result = []\n",
        "    for entry in logs:\n",
        "        if sessao is not None and entry.get(\"sessao\") != sessao:\n",
        "            continue\n",
        "        if id is not None and entry.get(\"id\") != id:\n",
        "            continue\n",
        "        if username is not None and entry.get(\"username\") != username:\n",
        "            continue\n",
        "        if evento is not None and entry.get(\"evento\") != evento:\n",
        "            continue\n",
        "        if status is not None and entry.get(\"status\") != status:\n",
        "            continue\n",
        "        ts_str = entry.get(\"timestamp\")\n",
        "        if ts_str:\n",
        "            try:\n",
        "                ts = datetime.fromisoformat(ts_str.replace(\"Z\", \"+00:00\"))\n",
        "            except ValueError:\n",
        "                continue # Ignora logs com timestamp inválido\n",
        "            if after:\n",
        "                after_dt = after if isinstance(after, datetime) else datetime.fromisoformat(after.replace(\"Z\", \"+00:00\"))\n",
        "                if ts < after_dt:\n",
        "                    continue\n",
        "            if before:\n",
        "                before_dt = before if isinstance(before, datetime) else datetime.fromisoformat(before.replace(\"Z\", \"+00:00\"))\n",
        "                if ts > before_dt:\n",
        "                    continue\n",
        "        result.append(entry)\n",
        "    return result\n",
        "\n",
        "def remove_logs(condition_fn, log_path=LOG_PATH):\n",
        "    \"\"\"\n",
        "    Remove do log central todas as entradas que satisfaçam condition_fn(entry).\n",
        "    Útil para expurgar logs expirados, blacklists vencidas, eventos processados, etc.\n",
        "    \"\"\"\n",
        "    logs = read_logs(log_path)\n",
        "    kept = [entry for entry in logs if not condition_fn(entry)]\n",
        "    try:\n",
        "        with open(log_path, \"w\", encoding=\"utf-8\") as f:\n",
        "            for entry in kept:\n",
        "                f.write(json.dumps(entry, ensure_ascii=False) + \"\\n\")\n",
        "    except Exception as e:\n",
        "        print(f\"❌ ERRO ao reescrever o log {log_path} após remoção: {e}\")\n",
        "        return 0 # Não conseguimos confirmar a remoção\n",
        "    return len(logs) - len(kept)\n",
        "\n",
        "def update_log_entry(match_fn, update_fn, log_path=LOG_PATH):\n",
        "    \"\"\"\n",
        "    Atualiza entradas do log central: se match_fn(entry)==True, aplica update_fn(entry).\n",
        "    Exemplo: promover status de \"pending\" para \"ok\".\n",
        "    Retorna o número de entradas atualizadas.\n",
        "    \"\"\"\n",
        "    logs = read_logs(log_path)\n",
        "    updated_count = 0\n",
        "    modified_logs = []\n",
        "    for entry in logs:\n",
        "        original_entry = entry.copy() # Cópia para comparação\n",
        "        if match_fn(entry):\n",
        "            try:\n",
        "                update_fn(entry)\n",
        "                if entry != original_entry: # Verifica se a atualização realmente mudou a entrada\n",
        "                    updated_count += 1\n",
        "            except Exception as e:\n",
        "                print(f\"⚠️ ERRO ao aplicar update_fn na entrada: {entry}. Erro: {e}\")\n",
        "                # Se a atualização falhar, mantemos a entrada original para evitar perda de dados\n",
        "                entry = original_entry\n",
        "        modified_logs.append(entry)\n",
        "\n",
        "    if updated_count > 0:\n",
        "        try:\n",
        "            with open(log_path, \"w\", encoding=\"utf-8\") as f:\n",
        "                for entry in modified_logs:\n",
        "                    f.write(json.dumps(entry, ensure_ascii=False) + \"\\n\")\n",
        "        except Exception as e:\n",
        "            print(f\"❌ ERRO ao reescrever o log {log_path} após atualização: {e}\")\n",
        "            return 0 # Não conseguimos confirmar a atualização\n",
        "\n",
        "    return updated_count\n",
        "\n",
        "\n",
        "# Exemplo de uso (para as próximas células):\n",
        "# append_log({\"sessao\":\"busca\", \"evento\":\"encontrado\", \"id\":\"abc123\", \"username\":\"Manugic_\", \"status\":\"ok\", \"detalhes\":\"URL válida\"})\n",
        "# logs_blacklist = query_logs(sessao=\"blacklist\", status=\"blacklisted\")\n",
        "# remove_logs(lambda entry: entry[\"sessao\"]==\"processing\" and expirou(entry), log_path=LOG_PATH)\n",
        "\n",
        "# =============================================================================\n",
        "# FUNÇÃO INTERATIVA (opcional) PARA ESCOLHA DE TRANSMISSÕES ESPECÍFICAS\n",
        "# =============================================================================\n",
        "def perguntar_transmissoes_especificas():\n",
        "    \"\"\"\n",
        "    Pergunta ao usuário se deseja informar transmissões específicas para gravar,\n",
        "    recebendo nomes de usuário separados por vírgula e retornando lista limpa.\n",
        "    Retorna lista vazia caso não deseje selecionar usuários.\n",
        "    \"\"\"\n",
        "    resp = input('Deseja gravar alguma transmissão específica? (sim/não): ').strip().lower()\n",
        "    if resp.startswith('s'):\n",
        "        usuarios = input('Informe o(s) nome(s) de usuário, separados por vírgula (ex: userNovo234, jovemPT): ')\n",
        "        usuarios_lista = [u.strip() for u in usuarios.split(',') if u.strip()]\n",
        "        return usuarios_lista\n",
        "    return []\n",
        "\n",
        "# =============================================================================\n",
        "# DICA DE USO EM OUTRAS CÉLULAS:\n",
        "# - Para registrar evento: append_log({...})\n",
        "# - Para consultar blacklist: query_logs(sessao=\"blacklist\", status=\"blacklisted\")\n",
        "# - Para remover registros expirados: remove_logs(lambda e: ...)\n",
        "# - Para atualizar status: update_log_entry(lambda e: ..., lambda e: ...)\n",
        "# =============================================================================\n",
        "\n",
        "# ============================\n",
        "# FIM DA CÉLULA 1\n",
        "# ============================"
      ],
      "metadata": {
        "id": "j5pPh353GLMD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c5b62d36-c257-44d3-db40-6b233fb043f9"
      },
      "id": "j5pPh353GLMD",
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Célula 2: Instalação e Validação do ffmpeg\n",
        "\n",
        "**Objetivo:**  \n",
        "Esta célula garante que o utilitário `ffmpeg` esteja instalado e disponível no ambiente Google Colab. O ffmpeg é indispensável para a gravação dos vídeos das transmissões e para o processamento de mídia ao longo do pipeline do notebook XCam.\n",
        "\n",
        "## Pontos principais e melhorias implementadas\n",
        "\n",
        "- **Verificação pré-instalação:**  \n",
        "  Antes de instalar, verifica se o ffmpeg já está disponível no ambiente, tornando o processo idempotente e eficiente.\n",
        "- **Instalação automatizada:**  \n",
        "  Efetua a instalação via `apt-get` apenas se necessário, reduzindo o tempo de setup em execuções futuras.\n",
        "- **Validação pós-instalação:**  \n",
        "  Exibe a versão instalada do ffmpeg, garantindo transparência e rastreabilidade.\n",
        "- **Mensagens detalhadas:**  \n",
        "  O usuário recebe logs informativos sobre cada etapa, facilitando o diagnóstico em caso de erros.\n",
        "- **Design modular:**  \n",
        "  Estrutura pronta para ser utilizada em outros ambientes (Colab, local, server) com pequenas adaptações.\n",
        "\n",
        "---\n",
        "\n",
        "## Como funciona a célula\n",
        "\n",
        "- **Verifica se o ffmpeg está instalado (no PATH do sistema).**\n",
        "- **Se não estiver, instala automaticamente via apt-get.**\n",
        "- **Valida e exibe a versão instalada após o processo.**\n",
        "- **Em caso de falha, exibe erro detalhado e interrompe o fluxo para evitar inconsistências futuras.**\n",
        "\n",
        "---\n",
        "\n",
        "## Exemplo de uso das funções nesta célula\n",
        "\n",
        "```python\n",
        "if not is_ffmpeg_installed():\n",
        "    install_ffmpeg()\n",
        "show_ffmpeg_version()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Segurança, rastreabilidade e manutenção\n",
        "\n",
        "- A célula torna o setup do ambiente mais robusto, impedindo falhas silenciosas relacionadas à ausência de ffmpeg.\n",
        "- Mensagens e validações ajudam a equipe a identificar rapidamente problemas de ambiente ou permissões.\n",
        "- O padrão modular facilita a reutilização do código em diferentes notebooks ou pipelines do projeto XCam.\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "WXs0o6OPHXbi"
      },
      "id": "WXs0o6OPHXbi"
    },
    {
      "cell_type": "code",
      "source": [
        "# ================================================================\n",
        "# Célula 2: Instalação e Validação do FFMPEG no Colab\n",
        "# ================================================================\n",
        "# Objetivo:\n",
        "# - Garantir que o utilitário ffmpeg está instalado e disponível no ambiente\n",
        "# - Validar a instalação e exibir a versão instalada\n",
        "# - Tornar a etapa idempotente, evitando instalações desnecessárias\n",
        "# - Fornecer feedback claro e orientações em caso de erro\n",
        "#\n",
        "# Estratégia aplicada:\n",
        "# - Instalação via apt-get apenas se ffmpeg não estiver disponível\n",
        "# - Validação pós-instalação\n",
        "# - Logs claros e comentários detalhados para rastreabilidade\n",
        "# ================================================================\n",
        "\n",
        "import subprocess\n",
        "\n",
        "def is_ffmpeg_installed():\n",
        "    \"\"\"\n",
        "    Verifica se o ffmpeg está instalado e disponível no PATH do sistema.\n",
        "    Retorna True se estiver, False caso contrário.\n",
        "    \"\"\"\n",
        "    try:\n",
        "        result = subprocess.run([\"ffmpeg\", \"-version\"], capture_output=True, text=True)\n",
        "        return result.returncode == 0\n",
        "    except FileNotFoundError:\n",
        "        return False\n",
        "\n",
        "def install_ffmpeg():\n",
        "    \"\"\"\n",
        "    Instala o ffmpeg via apt-get caso não esteja presente.\n",
        "    \"\"\"\n",
        "    print(\"[INFO] Instalando ffmpeg via apt-get...\")\n",
        "    # Atualiza pacotes e instala ffmpeg silenciosamente\n",
        "    !apt-get update -y > /dev/null\n",
        "    !apt-get install -y ffmpeg > /dev/null\n",
        "    print(\"[INFO] ffmpeg instalado com sucesso.\")\n",
        "\n",
        "def show_ffmpeg_version():\n",
        "    \"\"\"\n",
        "    Exibe a versão instalada do ffmpeg.\n",
        "    \"\"\"\n",
        "    print(\"[INFO] Versão do ffmpeg instalada:\")\n",
        "    !ffmpeg -version | head -n 2\n",
        "\n",
        "# ============================\n",
        "# EXECUÇÃO DA ETAPA DE SETUP\n",
        "# ============================\n",
        "\n",
        "if not is_ffmpeg_installed():\n",
        "    print(\"[WARN] ffmpeg não encontrado no ambiente.\")\n",
        "    install_ffmpeg()\n",
        "    if not is_ffmpeg_installed():\n",
        "        raise RuntimeError(\"[ERRO] Falha ao instalar o ffmpeg. Verifique permissões ou tente novamente.\")\n",
        "else:\n",
        "    print(\"[OK] ffmpeg já está instalado no ambiente.\")\n",
        "\n",
        "# Validação final e exibição da versão\n",
        "show_ffmpeg_version()\n",
        "\n",
        "# ============================\n",
        "# FIM DA CÉLULA 2\n",
        "# ============================\n",
        "\n",
        "# Dica: ffmpeg deve estar disponível para todas as células subsequentes.\n",
        "# Se precisar de um caminho específico, utilize `which ffmpeg` para obter o path absoluto."
      ],
      "metadata": {
        "id": "vIODn0c2HiHz",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0a0a44cf-3607-4e4f-8899-061a1028bcf2"
      },
      "id": "vIODn0c2HiHz",
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[OK] ffmpeg já está instalado no ambiente.\n",
            "[INFO] Versão do ffmpeg instalada:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Célula 3: Imports Essenciais, Utilitários e Preparação do Ambiente\n",
        "\n",
        "**Objetivo:**  \n",
        "Importa todas as bibliotecas essenciais do Python necessárias para o funcionamento do notebook, incluindo módulos para requisições HTTP, processamento paralelo, manipulação de datas, controle de subprocessos e exibição interativa.  \n",
        "Centraliza funções utilitárias robustas e padronizadas para processamento, download de poster, geração automática de poster com ffmpeg e exibição de progresso.  \n",
        "\n",
        "## Principais pontos e melhorias implementadas\n",
        "\n",
        "- **Centralização de imports essenciais:**  \n",
        "  Todos os módulos fundamentais (os, requests, multiprocessing, datetime, json, time, subprocess, math, re, IPython) estão disponíveis e prontos para uso global.\n",
        "- **Funções utilitárias padronizadas:**  \n",
        "  Funções para formatação de segundos, exibição de progresso, download e validação de poster e geração de poster via ffmpeg foram refatoradas e documentadas, seguindo arquitetura modular e Clean Architecture.\n",
        "- **Remoção de logs temporários dispersos:**  \n",
        "  O antigo arquivo de log de processamento temporário foi descontinuado em favor do log único centralizado definido na Célula 1, promovendo rastreabilidade e controle total.\n",
        "- **Robustez e clareza:**  \n",
        "  Todas as funções possuem tratamento de erros, mensagens amigáveis e são preparadas para uso concorrente e integração com as próximas etapas do pipeline.\n",
        "- **Pronto para uso em todo o notebook:**  \n",
        "  As funções aqui definidas são utilizadas em toda a automação, garantindo reuso, legibilidade e manutenção facilitada.\n",
        "\n",
        "---\n",
        "\n",
        "## Funções utilitárias disponíveis nesta célula\n",
        "\n",
        "- **`format_seconds(seconds)`**: Formata um valor em segundos para string legível (ex: \"1h23m45s\").\n",
        "- **`log_progress(username, elapsed_seconds, total_seconds)`**: Exibe o progresso da gravação de cada transmissão.\n",
        "- **`download_and_save_poster(poster_url, username, temp_folder)`**: Baixa e salva o poster da transmissão a partir de uma URL remota ou retorna se for um caminho local.\n",
        "- **`generate_poster_with_ffmpeg(m3u8_url, username, temp_folder, frame_time=7, timeout=20)`**: Gera automaticamente um poster usando ffmpeg, após validar a disponibilidade do stream.\n",
        "- **`is_poster_valid(poster_path)`**: Verifica se o arquivo de poster é válido (existe e não está vazio).\n",
        "\n",
        "---\n",
        "\n",
        "## Exemplo de uso das funções\n",
        "\n",
        "```python\n",
        "# Formatar segundos em string legível\n",
        "tempo = format_seconds(385)\n",
        "# Exibir progresso\n",
        "log_progress(\"userNovo234\", 385, 12780)\n",
        "# Download do poster\n",
        "poster_path = download_and_save_poster(url_poster, \"userNovo234\", \"/content/temp\")\n",
        "# Geração automática de poster via ffmpeg (se necessário)\n",
        "if not is_poster_valid(poster_path):\n",
        "    poster_path = generate_poster_with_ffmpeg(m3u8_url, \"userNovo234\", \"/content/temp\")\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Segurança, rastreabilidade e manutenção\n",
        "\n",
        "- Todas as funções são preparadas para tratamento de erros e integração com processos concorrentes.\n",
        "- O log temporário de processamento foi removido, garantindo que todo o rastreio e auditoria sejam feitos via log único centralizado da Célula 1.\n",
        "- Comentários detalhados facilitam manutenção, entendimento e evolução do notebook.\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "90qvXC0rHtWb"
      },
      "id": "90qvXC0rHtWb"
    },
    {
      "cell_type": "code",
      "source": [
        "# ================================================================\n",
        "# Célula 3: Imports Essenciais, Utilitários e Preparação do Ambiente\n",
        "# ================================================================\n",
        "# Objetivo:\n",
        "# - Importar bibliotecas essenciais e utilitários para todo o notebook\n",
        "# - Centralizar funções auxiliares de formatação, download e geração de poster\n",
        "# - Remover dependências de logs temporários dispersos, integrando ao log único do sistema (conforme novo padrão)\n",
        "# - Garantir robustez, clareza e modularidade para as próximas células\n",
        "#\n",
        "# Estratégia aplicada:\n",
        "# - Apenas os imports necessários para o funcionamento do notebook\n",
        "# - Funções auxiliares adaptadas para Clean Architecture e integração com o log centralizado\n",
        "# - Função de geração de poster com ffmpeg robusta (checagem HTTP HEAD antes de rodar)\n",
        "# - Modularidade: funções isoladas, prontos para reuso e testes\n",
        "# ================================================================\n",
        "\n",
        "import os\n",
        "import requests\n",
        "from multiprocessing import Manager, Process\n",
        "from datetime import datetime\n",
        "import json\n",
        "import time\n",
        "import subprocess\n",
        "import math\n",
        "import re\n",
        "import shutil\n",
        "import threading\n",
        "\n",
        "from IPython import get_ipython\n",
        "from IPython.display import display\n",
        "\n",
        "# ============================\n",
        "# UTILITÁRIOS DE FORMATAÇÃO E PROGRESSO\n",
        "# ============================\n",
        "\n",
        "def format_seconds(seconds):\n",
        "    \"\"\"\n",
        "    Formata segundos em string legível (e.g., 1h23m45s).\n",
        "    \"\"\"\n",
        "    total_seconds = int(seconds)\n",
        "    hours = total_seconds // 3600\n",
        "    minutes = (total_seconds % 3600) // 60\n",
        "    seconds = total_seconds % 60\n",
        "    parts = []\n",
        "    if hours > 0:\n",
        "        parts.append(f\"{hours}h\")\n",
        "    if minutes > 0 or (hours == 0 and seconds > 0):\n",
        "        parts.append(f\"{minutes}m\")\n",
        "    if seconds > 0 or total_seconds == 0:\n",
        "        parts.append(f\"{seconds}s\")\n",
        "    return \"\".join(parts) if parts else \"0s\"\n",
        "\n",
        "def log_progress(username, elapsed_seconds, total_seconds):\n",
        "    \"\"\"\n",
        "    Exibe progresso da gravação de cada transmissão em tempo real.\n",
        "    \"\"\"\n",
        "    percent = min((elapsed_seconds / total_seconds) * 100, 100)\n",
        "    tempo = format_seconds(elapsed_seconds)\n",
        "    minutos_gravados = math.floor(elapsed_seconds / 60)\n",
        "    minutos_restantes = max(0, math.ceil((total_seconds - elapsed_seconds) / 60))\n",
        "    print(f\"⏱️ [{username}] Gravados: {minutos_gravados} min | Restantes: {minutos_restantes} min | Tempo total: {tempo} — 📊 {percent:.1f}% concluído\")\n",
        "\n",
        "# ============================\n",
        "# UTILITÁRIO PARA DOWNLOAD DE POSTER\n",
        "# ============================\n",
        "\n",
        "def download_and_save_poster(poster_url, username, temp_folder):\n",
        "    \"\"\"\n",
        "    Baixa e salva o poster (thumbnail) a partir de uma URL HTTP/HTTPS.\n",
        "    Se for um caminho local existente, retorna esse caminho.\n",
        "    Retorna o caminho do arquivo salvo, ou None em caso de erro.\n",
        "    \"\"\"\n",
        "    # Uso de caminho local\n",
        "    if os.path.exists(poster_url):\n",
        "        return poster_url\n",
        "    # Download de URL HTTP/HTTPS\n",
        "    if isinstance(poster_url, str) and (poster_url.startswith(\"http://\") or poster_url.startswith(\"https://\")):\n",
        "        try:\n",
        "            response = requests.get(poster_url, timeout=15)\n",
        "            response.raise_for_status()\n",
        "            ext = os.path.splitext(poster_url)[1].lower()\n",
        "            if ext not in [\".jpg\", \".jpeg\", \".png\"]:\n",
        "                ext = \".jpg\"\n",
        "            poster_temp_path = os.path.join(temp_folder, f\"{username}_poster_temp{ext}\")\n",
        "            with open(poster_temp_path, \"wb\") as f:\n",
        "                f.write(response.content)\n",
        "            print(f\"🖼️ Poster baixado em: {poster_temp_path}\")\n",
        "            return poster_temp_path\n",
        "        except Exception as e:\n",
        "            print(f\"❌ Erro ao baixar poster {poster_url}: {e}\")\n",
        "            return None\n",
        "    else:\n",
        "        print(f\"❌ poster_url inválido ou não encontrado: {poster_url}\")\n",
        "        return None\n",
        "\n",
        "# ============================\n",
        "# UTILITÁRIO PARA GERAR POSTER COM FFMPEG\n",
        "# ============================\n",
        "\n",
        "def generate_poster_with_ffmpeg(m3u8_url, username, temp_folder, frame_time=7, timeout=20):\n",
        "    \"\"\"\n",
        "    Gera um poster (screenshot) usando ffmpeg a partir da URL .m3u8 da transmissão.\n",
        "    Retorna o caminho do arquivo gerado ou None em caso de erro.\n",
        "    Antes de rodar o ffmpeg, faz uma checagem HTTP HEAD para saber se a URL do stream está ativa.\n",
        "    \"\"\"\n",
        "    # Checa se a URL está acessível antes de rodar ffmpeg\n",
        "    try:\n",
        "        head_resp = requests.head(m3u8_url, timeout=5)\n",
        "        if not head_resp.ok:\n",
        "            print(f\"⚠️ Stream offline ou não disponível para {username} (status {head_resp.status_code})\")\n",
        "            return None\n",
        "    except Exception as e:\n",
        "        print(f\"⚠️ Erro de conexão ao acessar stream de {username}: {e}\")\n",
        "        return None\n",
        "\n",
        "    poster_ffmpeg_path = os.path.join(temp_folder, f\"{username}_poster_ffmpeg.jpg\")\n",
        "    # Comando ffmpeg: captura 1 frame após frame_time segundos de vídeo\n",
        "    command = [\n",
        "        \"ffmpeg\",\n",
        "        \"-y\",  # sobrescreve arquivo se já existir\n",
        "        \"-ss\", str(frame_time),  # avança para frame_time segundos antes de capturar\n",
        "        \"-i\", m3u8_url,\n",
        "        \"-vframes\", \"1\",\n",
        "        \"-q:v\", \"2\",  # qualidade alta\n",
        "        poster_ffmpeg_path\n",
        "    ]\n",
        "    try:\n",
        "        print(f\"🎬 Gerando poster com ffmpeg para {username} no segundo {frame_time}...\")\n",
        "        # subprocess.run com timeout para evitar travamento caso a URL esteja offline/inválida\n",
        "        result = subprocess.run(\n",
        "            command,\n",
        "            stdout=subprocess.PIPE,\n",
        "            stderr=subprocess.PIPE,\n",
        "            timeout=timeout\n",
        "        )\n",
        "        if result.returncode == 0 and os.path.exists(poster_ffmpeg_path):\n",
        "            print(f\"🖼️ Poster gerado via ffmpeg: {poster_ffmpeg_path}\")\n",
        "            return poster_ffmpeg_path\n",
        "        else:\n",
        "            print(f\"❌ ffmpeg não conseguiu gerar poster para {username}.\\nSTDOUT:\\n{result.stdout.decode(errors='ignore')}\\nSTDERR:\\n{result.stderr.decode(errors='ignore')}\")\n",
        "            return None\n",
        "    except subprocess.TimeoutExpired:\n",
        "        print(f\"⏰ Tempo excedido ao tentar gerar poster para {username} via ffmpeg.\")\n",
        "        return None\n",
        "    except Exception as e:\n",
        "        print(f\"❌ Erro inesperado ao gerar poster via ffmpeg: {e}\")\n",
        "        return None\n",
        "\n",
        "# ============================\n",
        "# VALIDAÇÃO DE POSTER\n",
        "# ============================\n",
        "\n",
        "def is_poster_valid(poster_path):\n",
        "    \"\"\"\n",
        "    Verifica se o poster existe e não está vazio.\n",
        "    \"\"\"\n",
        "    return poster_path and os.path.exists(poster_path) and os.path.getsize(poster_path) > 0\n",
        "\n",
        "# ============================\n",
        "# FIM DA CÉLULA 3\n",
        "# ============================\n",
        "\n",
        "# Observação:\n",
        "# - LOG_PROCESSAMENTO_PATH e logs temporários antigos NÃO são mais necessários a partir da adoção do log único centralizado (LOG_PATH).\n",
        "# - Todas as operações de logging, blacklist, falha e auditoria devem ser feitas apenas via utilitário de log (Célula 1).\n",
        "# - Siga o padrão modular e Clean Architecture para máxima rastreabilidade e reuso."
      ],
      "metadata": {
        "id": "hOetz0nGICkz"
      },
      "id": "hOetz0nGICkz",
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Célula 4: Clonagem do Repositório GitHub no Colab e Google Drive\n",
        "\n",
        "**Objetivo:**  \n",
        "Esta célula garante que o repositório do projeto XCam seja sempre clonado de forma limpa e sincronizada no ambiente local do Colab e, se disponível, também no Google Drive para persistência.  \n",
        "Assegura ambiente pronto, atualizado, seguro para gravações e processamento, e prepara diretórios padronizados para integração com o restante do pipeline.\n",
        "\n",
        "## Principais pontos e melhorias implementadas\n",
        "\n",
        "- **Clonagem idempotente e limpa:**  \n",
        "  Remove repositórios antigos antes de clonar para evitar conflitos, arquivos órfãos ou problemas de sincronização.\n",
        "- **Clonagem para ambiente temporário e persistente:**  \n",
        "  O repositório é clonado tanto para `/content` (Colab) quanto para o Drive (`/content/drive/MyDrive/XCam.Drive`) se o Drive estiver montado.\n",
        "- **Preparação de diretórios de gravação e processamento:**  \n",
        "  Estrutura de diretórios temporários criada automaticamente, garantindo organização dos dados.\n",
        "- **Exportação de variáveis globais:**  \n",
        "  Todos os caminhos, URLs e configurações relevantes são disponibilizados via `globals().update()` para uso em todo o notebook.\n",
        "- **Mensagens e validações detalhadas:**  \n",
        "  Feedback informativo sobre o status de cada etapa, facilitando o diagnóstico e a manutenção.\n",
        "- **Pronto para CI/CD e integrações futuras:**  \n",
        "  Token e URLs preparados para automações, integrações externas e uploads (Abyss.to, etc).\n",
        "\n",
        "---\n",
        "\n",
        "## Parâmetros globais definidos nesta célula\n",
        "\n",
        "- **`GITHUB_USER`**, **`GITHUB_REPO`**, **`GITHUB_BRANCH`**, **`GITHUB_TOKEN`**: Configurações do repositório e autenticação.\n",
        "- **`repo_url`**: URL do repositório autenticada para clone/push.\n",
        "- **`TEMP_OUTPUT_FOLDER`**: Pasta para gravações temporárias.\n",
        "- **`BASE_REPO_FOLDER`**: Localização do repositório no ambiente Colab.\n",
        "- **`DRIVE_MOUNT`**, **`DRIVE_REPO_FOLDER`**: Caminhos no Google Drive para persistência (se montado).\n",
        "- **`ABYSS_UPLOAD_URL`**: URL de upload para integração com sistemas externos.\n",
        "\n",
        "---\n",
        "\n",
        "## Como funciona a célula\n",
        "\n",
        "- **Remove repositórios antigos e diretórios temporários**, evitando resíduos de execuções anteriores.\n",
        "- **Clona o repositório do GitHub** para `/content` (Colab).\n",
        "- **Se o Google Drive estiver montado**, faz o mesmo clone no diretório persistente do Drive.\n",
        "- **Cria diretórios temporários necessários** para gravações e arquivos intermediários.\n",
        "- **Exporta todas as variáveis configuradas** para uso global no notebook.\n",
        "- **Exibe mensagens informativas** sobre cada etapa e alerta caso o Drive não esteja disponível.\n",
        "\n",
        "---\n",
        "\n",
        "## Exemplo de uso das variáveis globais\n",
        "\n",
        "```python\n",
        "print(BASE_REPO_FOLDER)        # Caminho do repositório clonado no Colab\n",
        "print(DRIVE_REPO_FOLDER)      # Caminho do repositório no Drive (se montado)\n",
        "print(TEMP_OUTPUT_FOLDER)     # Pasta temporária para gravações\n",
        "print(ABYSS_UPLOAD_URL)       # URL de upload para integração externa\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Segurança, rastreabilidade e manutenção\n",
        "\n",
        "- Garantia de ambiente limpo a cada execução, evitando conflitos de arquivos e branches.\n",
        "- Persistência dos dados no Drive (se montado), evitando perda de gravações em caso de reinicialização do Colab.\n",
        "- Comentários detalhados e estrutura modular facilitam a manutenção, integração com CI/CD e futuras expansões no pipeline do XCam.\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "hpRIMtyFIY0q"
      },
      "id": "hpRIMtyFIY0q"
    },
    {
      "cell_type": "code",
      "source": [
        "# ================================================================\n",
        "# Célula 4: Clonagem do Repositório GitHub no Colab e no Google Drive\n",
        "# ================================================================\n",
        "# Objetivo:\n",
        "# - Garantir ambiente limpo e sincronizado para o repositório XCam em todas as execuções\n",
        "# - Clonar o repositório tanto para o ambiente efêmero do Colab quanto para o Google Drive (persistência)\n",
        "# - Preparar diretórios de trabalho para gravações e processamento temporário\n",
        "# - Fornecer feedback claro sobre o status da operação\n",
        "#\n",
        "# Estratégia aplicada:\n",
        "# - Remove repositórios antigos antes de clonar (evita conflitos e arquivos órfãos)\n",
        "# - Utiliza token pessoal para autenticação segura e push futuro (CI/CD)\n",
        "# - Cria estrutura de diretórios padronizada (módulos, gravações, cache, etc.)\n",
        "# - Valida se o Drive está montado antes de tentar operações persistentes\n",
        "# - Comentários detalhados para fácil manutenção e evolução\n",
        "# ================================================================\n",
        "\n",
        "# ============================\n",
        "# CONFIGURAÇÕES DO GITHUB\n",
        "# ============================\n",
        "GITHUB_USER = \"SamuelPassamani\"\n",
        "GITHUB_REPO = \"XCam\"\n",
        "GITHUB_BRANCH = \"main\"\n",
        "GITHUB_TOKEN = \"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\"\n",
        "\n",
        "repo_url = f\"https://{GITHUB_USER}:{GITHUB_TOKEN}@github.com/{GITHUB_USER}/{GITHUB_REPO}.git\"\n",
        "\n",
        "# ============================\n",
        "# CLONAGEM PARA O COLAB\n",
        "# ============================\n",
        "print(f\"⏳ Limpando ambiente e clonando '{GITHUB_REPO}' para o Colab...\")\n",
        "!rm -rf {GITHUB_REPO}\n",
        "!git clone -b {GITHUB_BRANCH} {repo_url}\n",
        "print(f\"✅ Repositório clonado em /content/{GITHUB_REPO}\")\n",
        "\n",
        "# ============================\n",
        "# ESTRUTURA DE DIRETÓRIOS TEMPORÁRIOS\n",
        "# ============================\n",
        "TEMP_OUTPUT_FOLDER = \"/content/drive/MyDrive/XCam.Drive/src/temp/records\"  # Para gravações temporárias\n",
        "os.makedirs(TEMP_OUTPUT_FOLDER, exist_ok=True)\n",
        "BASE_REPO_FOLDER = f\"/content/{GITHUB_REPO}\"\n",
        "\n",
        "# ============================\n",
        "# CLONAGEM PARA O GOOGLE DRIVE (PERSISTÊNCIA)\n",
        "# ============================\n",
        "DRIVE_MOUNT = \"/content/drive/MyDrive/XCam.Drive\"\n",
        "DRIVE_REPO_FOLDER = f\"{DRIVE_MOUNT}/{GITHUB_REPO}\"\n",
        "\n",
        "import os\n",
        "\n",
        "if os.path.exists(DRIVE_MOUNT):\n",
        "    print(f\"⏳ Limpando repositório antigo no Drive (se existir)...\")\n",
        "    !rm -rf \"{DRIVE_REPO_FOLDER}\"\n",
        "    print(f\"⏳ Clonando '{GITHUB_REPO}' para o Drive em {DRIVE_REPO_FOLDER} ...\")\n",
        "    !git clone -b {GITHUB_BRANCH} {repo_url} \"{DRIVE_REPO_FOLDER}\"\n",
        "    print(f\"✅ Repositório também clonado no Drive: {DRIVE_REPO_FOLDER}\")\n",
        "else:\n",
        "    print(f\"⚠️ Google Drive não está montado em {DRIVE_MOUNT}.\\nℹ️ Use a célula de montagem antes de prosseguir para garantir persistência.\")\n",
        "\n",
        "# ============================\n",
        "# CONFIGURAÇÃO DE ENDPOINTS DE UPLOAD/INTEGRAÇÃO\n",
        "# ============================\n",
        "ABYSS_UPLOAD_URL = 'http://up.hydrax.net/0128263f78f0b426d617bb61c2a8ff43'\n",
        "globals().update({\n",
        "    'GITHUB_USER': GITHUB_USER,\n",
        "    'GITHUB_REPO': GITHUB_REPO,\n",
        "    'GITHUB_BRANCH': GITHUB_BRANCH,\n",
        "    'GITHUB_TOKEN': GITHUB_TOKEN,\n",
        "    'repo_url': repo_url,\n",
        "    'TEMP_OUTPUT_FOLDER': TEMP_OUTPUT_FOLDER,\n",
        "    'BASE_REPO_FOLDER': BASE_REPO_FOLDER,\n",
        "    'DRIVE_MOUNT': DRIVE_MOUNT,\n",
        "    'DRIVE_REPO_FOLDER': DRIVE_REPO_FOLDER,\n",
        "    'ABYSS_UPLOAD_URL': ABYSS_UPLOAD_URL\n",
        "})\n",
        "\n",
        "# ============================\n",
        "# FIM DA CÉLULA 4\n",
        "# ============================\n",
        "\n",
        "# Observações:\n",
        "# - Os caminhos globais são exportados via globals().update() para uso em todo o notebook.\n",
        "# - Recomenda-se sempre rodar esta célula após alterar tokens ou trocar branches para garantir ambiente limpo e sincronizado.\n",
        "# - O endpoint ABYSS_UPLOAD_URL pode ser atualizado conforme integrações futuras."
      ],
      "metadata": {
        "id": "Uof_0QCrIlf7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f33669b8-653a-41c7-c231-353b0092c9f1"
      },
      "id": "Uof_0QCrIlf7",
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "⏳ Limpando ambiente e clonando 'XCam' para o Colab...\n",
            "Cloning into 'XCam'...\n",
            "remote: Enumerating objects: 10561, done.\u001b[K\n",
            "remote: Counting objects: 100% (445/445), done.\u001b[K\n",
            "remote: Compressing objects: 100% (217/217), done.\u001b[K\n",
            "remote: Total 10561 (delta 357), reused 229 (delta 228), pack-reused 10116 (from 3)\u001b[K\n",
            "Receiving objects: 100% (10561/10561), 34.87 MiB | 33.53 MiB/s, done.\n",
            "Resolving deltas: 100% (6673/6673), done.\n",
            "✅ Repositório clonado em /content/XCam\n",
            "⏳ Limpando repositório antigo no Drive (se existir)...\n",
            "⏳ Clonando 'XCam' para o Drive em /content/drive/MyDrive/XCam.Drive/XCam ...\n",
            "Cloning into '/content/drive/MyDrive/XCam.Drive/XCam'...\n",
            "remote: Enumerating objects: 10561, done.\u001b[K\n",
            "remote: Counting objects: 100% (445/445), done.\u001b[K\n",
            "remote: Compressing objects: 100% (217/217), done.\u001b[K\n",
            "remote: Total 10561 (delta 357), reused 229 (delta 228), pack-reused 10116 (from 3)\u001b[K\n",
            "Receiving objects: 100% (10561/10561), 34.89 MiB | 22.47 MiB/s, done.\n",
            "Resolving deltas: 100% (6670/6670), done.\n",
            "Updating files: 100% (678/678), done.\n",
            "✅ Repositório também clonado no Drive: /content/drive/MyDrive/XCam.Drive/XCam\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Célula 5: Commit e Push Automáticos (rec.json, posters, etc.)\n",
        "\n",
        "**Objetivo:**  \n",
        "Automatiza o processo de commit e push dos arquivos modificados (ex: rec.json, posters e demais artefatos importantes) para o repositório GitHub, garantindo rastreabilidade, atomicidade e integração contínua (CI/CD) do pipeline XCam.\n",
        "\n",
        "## Principais pontos e melhorias implementadas\n",
        "\n",
        "- **Função robusta e modular:**  \n",
        "  A função `git_commit_and_push()` aceita um caminho único (string) ou uma lista de arquivos, permitindo commit em lote e integração com estratégias de batch commit (threshold).\n",
        "- **Configuração automatizada de usuário e e-mail do git:**  \n",
        "  Garante commits válidos para rastreabilidade, auditoria e integração com pipelines automáticos.\n",
        "- **Validação de caminhos e mensagens informativas:**  \n",
        "  Apenas arquivos existentes são adicionados. Mensagens de sucesso, erro ou aviso detalhadas facilitam troubleshooting e manutenção.\n",
        "- **Compatível com commit vazio:**  \n",
        "  Permite o uso do parâmetro `--allow-empty` para garantir que o pipeline siga mesmo sem alterações detectadas, útil para sincronização e CI/CD.\n",
        "- **Push autenticado via token:**  \n",
        "  Utiliza o token pessoal fornecido nas variáveis globais para garantir push seguro e sem intervenção manual.\n",
        "- **Design pronto para integração com logs centralizados:**  \n",
        "  Recomenda-se registrar todas as ações relevantes de commit/push utilizando o log único modular definido na Célula 1.\n",
        "\n",
        "---\n",
        "\n",
        "## Parâmetros e variáveis globais utilizados\n",
        "\n",
        "- **`GITHUB_USER`**, **`GITHUB_REPO`**, **`GITHUB_TOKEN`**: Definidos nas células anteriores para autenticação e configuração do repositório.\n",
        "- **`repo_dir`**: Caminho absoluto do repositório clonado no ambiente Colab.\n",
        "- **`file_paths`**: String ou lista de arquivos a serem commitados e enviados.\n",
        "- **`commit_message`**: Mensagem do commit, customizável conforme a operação realizada.\n",
        "\n",
        "---\n",
        "\n",
        "## Como funciona a função principal\n",
        "\n",
        "- **Valida a existência do repositório local** antes de prosseguir.\n",
        "- **Aceita arquivos únicos ou múltiplos** para commit (string ou lista).\n",
        "- **Adiciona apenas arquivos existentes** ao staging, com avisos para arquivos não encontrados.\n",
        "- **Realiza commit (mesmo vazio) e push autenticado** para o repositório remoto.\n",
        "- **Emite mensagens claras** de sucesso, erro ou aviso ao longo do processo.\n",
        "\n",
        "---\n",
        "\n",
        "## Exemplo de uso típico\n",
        "\n",
        "```python\n",
        "# Commit e push de um único arquivo\n",
        "git_commit_and_push(\"data/rec.json\", \"Atualiza rec.json de gravação\")\n",
        "\n",
        "# Commit e push em lote (lista de arquivos)\n",
        "git_commit_and_push([\n",
        "    \"data/rec.json\",\n",
        "    \"posters/user1_poster.jpg\",\n",
        "    \"posters/user2_poster.jpg\"\n",
        "], \"Batch commit de múltiplos arquivos\")\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Segurança, rastreabilidade e manutenção\n",
        "\n",
        "- **Rastreabilidade garantida** por mensagens de commit claras e integração recomendada com o log modular (Célula 1).\n",
        "- **Atomicidade** em operações batch, evitando inconsistências de dados no repositório.\n",
        "- **Pronto para integração com pipelines CI/CD**, webhooks e controles de auditoria.\n",
        "- **Mensagens e tratamento de erros detalhados** facilitam o diagnóstico e a evolução do sistema.\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "M5iL_9BoIoj7"
      },
      "id": "M5iL_9BoIoj7"
    },
    {
      "cell_type": "code",
      "source": [
        "# ================================================================\n",
        "# Célula 5: Commit e Push Automáticos (rec.json, posters, etc.)\n",
        "# ================================================================\n",
        "# Objetivo:\n",
        "# - Automatizar o processo de commit e push dos arquivos modificados (rec.json, posters, etc.) para o repositório GitHub\n",
        "# - Suportar tanto commit de arquivo único como em lote, permitindo estratégia de batch commit baseada em thresholds\n",
        "# - Garantir rastreabilidade, atomicidade e integração segura (CI/CD)\n",
        "#\n",
        "# Estratégia aplicada:\n",
        "# - Função modular e robusta, preparada para integração com logs e auditoria\n",
        "# - Permite commit vazio por segurança, evitando falhas em pipelines sincronizados\n",
        "# - Mensagens e tratamento de erros detalhados para facilitar troubleshooting\n",
        "# - Utilização de variáveis globais para caminhos, usuário e token definidos nas células anteriores\n",
        "# - Design pronto para evolução, reuso e integração com ferramentas externas (ex: webhooks, jobs, etc.)\n",
        "# ================================================================\n",
        "\n",
        "import os\n",
        "import subprocess\n",
        "\n",
        "def git_commit_and_push(file_paths, commit_message=\"Atualiza rec.json\"):\n",
        "    \"\"\"\n",
        "    Realiza git add, commit e push dos arquivos especificados.\n",
        "    - file_paths pode ser uma string (arquivo único) ou uma lista de arquivos.\n",
        "    - commit_message é a mensagem de commit utilizada.\n",
        "\n",
        "    Estratégia:\n",
        "    - Ajusta diretório para o repositório local clonado no Colab\n",
        "    - Configura usuário e e-mail do git (necessários para CI/CD)\n",
        "    - Adiciona arquivos ao staging (aceita múltiplos arquivos)\n",
        "    - Realiza commit (permite commit vazio)\n",
        "    - Realiza push autenticado via token\n",
        "    \"\"\"\n",
        "    # ============================\n",
        "    # VALIDAÇÃO E AJUSTE DE ENTRADAS\n",
        "    # ============================\n",
        "    repo_dir = f\"/content/{GITHUB_REPO}\"\n",
        "    if not os.path.exists(repo_dir):\n",
        "        raise FileNotFoundError(f\"Repositório '{repo_dir}' não encontrado. Verifique se a célula de clonagem foi executada.\")\n",
        "    os.chdir(repo_dir)\n",
        "\n",
        "    # Aceita string ou lista de arquivos\n",
        "    if isinstance(file_paths, str):\n",
        "        file_paths = [file_paths]\n",
        "    elif not isinstance(file_paths, list):\n",
        "        raise ValueError(\"file_paths deve ser uma string ou uma lista de caminhos.\")\n",
        "\n",
        "    # ============================\n",
        "    # CONFIGURAÇÃO DO USUÁRIO GIT (CI/CD)\n",
        "    # ============================\n",
        "    subprocess.run([\"git\", \"config\", \"user.email\", \"contato@aserio.work\"], check=True)\n",
        "    subprocess.run([\"git\", \"config\", \"user.name\", \"SamuelPassamani\"], check=True)\n",
        "\n",
        "    # ============================\n",
        "    # ADIÇÃO DOS ARQUIVOS AO STAGING\n",
        "    # ============================\n",
        "    for file_path in file_paths:\n",
        "        # Verifica se o arquivo existe antes de adicionar\n",
        "        if not os.path.exists(file_path):\n",
        "            print(f\"⚠️ Aviso: arquivo '{file_path}' não existe e será ignorado no commit.\")\n",
        "            continue\n",
        "        subprocess.run([\"git\", \"add\", file_path], check=True)\n",
        "\n",
        "    # ============================\n",
        "    # COMMIT (PERMITE COMMIT VAZIO)\n",
        "    # ============================\n",
        "    try:\n",
        "        subprocess.run(\n",
        "            [\"git\", \"commit\", \"-m\", commit_message, \"--allow-empty\"],\n",
        "            check=False  # Não força erro se não houver mudanças\n",
        "        )\n",
        "    except Exception as e:\n",
        "        print(f\"❌ Erro ao tentar realizar commit: {e}\")\n",
        "\n",
        "    # ============================\n",
        "    # PUSH PARA O REPOSITÓRIO REMOTO (AUTENTICADO)\n",
        "    # ============================\n",
        "    try:\n",
        "        remote_url = f\"https://{GITHUB_USER}:{GITHUB_TOKEN}@github.com/{GITHUB_USER}/{GITHUB_REPO}.git\"\n",
        "        subprocess.run(\n",
        "            [\"git\", \"push\", remote_url],\n",
        "            check=True\n",
        "        )\n",
        "        print(f\"✅ Push realizado com sucesso! ({commit_message})\")\n",
        "    except Exception as e:\n",
        "        print(f\"❌ Erro ao tentar realizar push: {e}\")\n",
        "\n",
        "# ============================\n",
        "# FIM DA CÉLULA 5\n",
        "# ============================\n",
        "\n",
        "# Dicas e melhores práticas:\n",
        "# - Use commit_messages claros e informativos para facilitar a auditoria.\n",
        "# - Utilize a função dentro de loops ou triggers de batch para commit em lote.\n",
        "# - Integre logs das ações de commit/push usando o log único centralizado (Célula 1).\n",
        "# - Em caso de erro de autenticação, revise o token e as permissões do GitHub."
      ],
      "metadata": {
        "id": "1aQn1G6yI6Gz"
      },
      "id": "1aQn1G6yI6Gz",
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Célula 6: Busca de Transmissões na API XCam, Blacklist Temporária, Fallback via liveInfo e Busca Inteligente/Unitária\n",
        "\n",
        "**Objetivo:**  \n",
        "Realizar a busca das transmissões ativas na API principal da XCam, mantendo o lote de transmissões sempre completo até o `LIMIT_DEFAULT` e sem duplicidades, utilizando controle de blacklist temporária e log de transmissões em processamento.  \n",
        "Inclui funções de busca unitária/inteligente (para manter “lote cheio” continuamente) e gerenciamento automático de poster, com geração via ffmpeg quando necessário.\n",
        "\n",
        "## Estratégia e melhorias implementadas\n",
        "\n",
        "- **Blacklist temporária e controle de falhas:**  \n",
        "  Usuários problemáticos são bloqueados temporariamente após atingirem o limite de falhas (`BLACKLIST_MAX_FAILURES`), acelerando o processamento e evitando ciclos infinitos.\n",
        "- **Busca em lote e unitária com fallback:**  \n",
        "  Consulta a API principal com limite alto para preencher o lote rapidamente. Caso necessário, realiza fallback via `/liveInfo` para usuários sem `src`.\n",
        "- **Controle de duplicidade e fila inteligente:**  \n",
        "  Antes de incluir qualquer transmissão, verifica no log de processamento e na blacklist para evitar tentativas repetidas ou paradas em streams problemáticos.\n",
        "- **Poster garantido:**  \n",
        "  Se o poster estiver ausente, inválido ou nulo, gera automaticamente uma imagem via ffmpeg a partir do stream, garantindo sempre um arquivo válido.\n",
        "- **Eficiência e paralelismo:**  \n",
        "  Todas as funções são preparadas para processamento paralelo e integração total ao pipeline XCam.\n",
        "- **Compatibilidade:**  \n",
        "  Suporte total à busca de usuários específicos, agora também protegida pela blacklist e controle de falhas.\n",
        "- **Design modular:**  \n",
        "  Funções separadas para busca em lote (`get_broadcasts`), busca por usuários (`buscar_usuarios_especificos`) e busca unitária/primeira transmissão livre (`buscar_proxima_transmissao_livre`), facilitando reuso e manutenção.\n",
        "\n",
        "---\n",
        "\n",
        "## Como funciona cada função\n",
        "\n",
        "- **get_broadcasts:**  \n",
        "  Retorna um lote de transmissões válidas, sempre checando blacklist, log de processamento e gerando poster se necessário. Realiza fallback automático para `/liveInfo` se não encontrar o src na API principal.\n",
        "- **buscar_usuarios_especificos:**  \n",
        "  Busca apenas os usuários informados, respeitando sempre o controle de blacklist/falhas, e faz fallback via `/liveInfo` quando necessário.\n",
        "- **buscar_proxima_transmissao_livre:**  \n",
        "  Busca rapidamente a próxima transmissão livre para processamento, sempre utilizando os mesmos critérios de controle, garantindo agilidade na fila e eficiência máxima.\n",
        "\n",
        "---\n",
        "\n",
        "## Detalhes técnicos e recomendações\n",
        "\n",
        "- **Blacklist temporária e controle de falhas:**  \n",
        "  Funções `register_failure`, `clear_failure`, `add_to_blacklist`, `is_in_blacklist`, `load_blacklist` e `save_blacklist` garantem rastreabilidade e bloqueio eficiente de usuários problemáticos.\n",
        "- **Arquitetura limpa e modular:**  \n",
        "  Código preparado para integração futura com log único centralizado e processamento concorrente.\n",
        "- **Poster sempre válido:**  \n",
        "  Funções utilitárias garantem que cada transmissão só é liberada para gravação se houver poster válido (baixado ou gerado).\n",
        "- **Tratamento de erros robusto:**  \n",
        "  Toda etapa crítica possui tratamento de exceções e mensagens claras para facilitar manutenção e monitoramento.\n",
        "\n",
        "---\n",
        "\n",
        "## Exemplo de uso das funções\n",
        "\n",
        "```python\n",
        "# Buscar lote completo de transmissões válidas\n",
        "streams = get_broadcasts(limit=LIMIT_DEFAULT)\n",
        "\n",
        "# Buscar apenas usuários específicos\n",
        "streams_especificos = buscar_usuarios_especificos([\"user1\", \"user2\"])\n",
        "\n",
        "# Buscar a próxima transmissão livre disponível\n",
        "proxima_stream = buscar_proxima_transmissao_livre()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Rastreabilidade, manutenção e integração\n",
        "\n",
        "- Blacklist e falhas podem ser migrados para o log centralizado para máxima rastreabilidade.\n",
        "- Todas as funções são compatíveis com execução paralela e integração CI/CD.\n",
        "- Mensagens detalhadas e arquitetura modular facilitam manutenção e futuras expansões no pipeline do XCam.\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "BZ4c3Uk1I7AK"
      },
      "id": "BZ4c3Uk1I7AK"
    },
    {
      "cell_type": "code",
      "source": [
        "# ================================================================\n",
        "# Célula 6: Busca de Transmissões com Blacklist Temporária e Controle de Falhas\n",
        "# ================================================================\n",
        "# Objetivo:\n",
        "# - Buscar transmissões ao vivo na API XCam, considerando blacklist e controle de falhas por usuário\n",
        "# - Evitar loops infinitos e tentativas repetidas em usuários problemáticos via blacklist temporária e contador de falhas\n",
        "# - Garantir sempre poster válido (via download ou ffmpeg) antes de liberar qualquer transmissão para processamento\n",
        "# - Modularização e robustez, pronta para integração com log único e arquitetura limpa\n",
        "#\n",
        "# Estratégia aplicada:\n",
        "# - Lógica de blacklist e falhas modularizada (PRONTA PARA USAR O LOG ÚNICO CENTRALIZADO)\n",
        "# - Consulta à API XCam com fallback automático para liveInfo\n",
        "# - Funções robustas, preparadas para concorrência, reuso e integração contínua no pipeline XCam\n",
        "# ================================================================\n",
        "\n",
        "# ============================\n",
        "# PARÂMETROS GLOBAIS (DEVEM VIR DA CÉLULA 1)\n",
        "# ============================\n",
        "# Certifique-se que Célula 1 foi executada e definiu:\n",
        "# BLACKLIST_TIMEOUT: tempo de expiração da blacklist (em segundos)\n",
        "# BLACKLIST_MAX_FAILURES: número de falhas consecutivas antes de banir\n",
        "# API_SEARCH_LIMIT: limite de transmissões ao buscar usuários específicos\n",
        "# LOG_PATH: caminho do log central\n",
        "\n",
        "# Ensure the core log utilities and global parameters are available\n",
        "try:\n",
        "    append_log\n",
        "    query_logs\n",
        "    remove_logs\n",
        "    update_log_entry\n",
        "    now_iso\n",
        "    # Check for global parameters from Cell 1\n",
        "    _ = BLACKLIST_TIMEOUT\n",
        "    _ = BLACKLIST_MAX_FAILURES\n",
        "    _ = API_SEARCH_LIMIT\n",
        "    _ = LOG_PATH\n",
        "except NameError:\n",
        "    print(\"❌ As funções de log centralizado ou parâmetros globais (Célula 1) não estão disponíveis. Execute a Célula 1 primeiro.\")\n",
        "    # Define dummy functions/values to avoid errors\n",
        "    def append_log(entry, log_path=None): print(f\"🚫 LOG_ERROR: {entry}\")\n",
        "    def query_logs(sessao=None, id=None, username=None, evento=None, status=None, after=None, before=None, log_path=None): return []\n",
        "    def remove_logs(condition_fn, log_path=None): return 0\n",
        "    def update_log_entry(match_fn, update_fn, log_path=None): return 0\n",
        "    def now_iso(): return datetime.utcnow().isoformat() + \"Z\"\n",
        "    BLACKLIST_TIMEOUT = 900\n",
        "    BLACKLIST_MAX_FAILURES = 3\n",
        "    API_SEARCH_LIMIT = 100\n",
        "    LOG_PATH = \"/tmp/dummy_xcam_master.log\"\n",
        "\n",
        "\n",
        "# REMOVE OS CAMINHOS ANTIGOS DE LOGS DISPERSOS\n",
        "# BLACKLIST_PATH = \"/content/xcam_blacklist.log\"\n",
        "# FAILURE_LOG_PATH = \"/content/xcam_failures.log\"\n",
        "# LOG_PROCESSAMENTO_PATH = \"/content/xcam_processing.log\" # Usado na cel 7 tambem, mas agora sera via log central\n",
        "\n",
        "\n",
        "# ============================\n",
        "# BLACKLIST TEMPORÁRIA - INTEGRADA AO LOG CENTRAL\n",
        "# ============================\n",
        "\n",
        "def get_blacklist_entries():\n",
        "    \"\"\"\n",
        "    Retorna entradas de blacklist válidas do log central.\n",
        "    Filtra por sessao='blacklist' e status='blacklisted' dentro do timeout.\n",
        "    \"\"\"\n",
        "    now_ts = time.time()\n",
        "    # Query log central for blacklisted entries\n",
        "    blacklisted_entries = query_logs(sessao=\"blacklist\", status=\"blacklisted\")\n",
        "    # Filter entries by timeout\n",
        "    valid_blacklist = [\n",
        "        entry for entry in blacklisted_entries\n",
        "        if \"timestamp\" in entry and \"detalhes\" in entry # Check for timestamp and details fields\n",
        "        and entry[\"detalhes\"].startswith(\"Blacklisted até\") # Check if details indicate a timeout\n",
        "        and (time.mktime(datetime.fromisoformat(entry[\"timestamp\"].replace(\"Z\", \"+00:00\")).timetuple()) + BLACKLIST_TIMEOUT) > now_ts\n",
        "    ]\n",
        "    return valid_blacklist\n",
        "\n",
        "\n",
        "def is_in_blacklist(username):\n",
        "    \"\"\"\n",
        "    Verifica se o usuário está na blacklist válida no log central.\n",
        "    \"\"\"\n",
        "    valid_blacklist = get_blacklist_entries()\n",
        "    # Check if any valid blacklist entry matches the username (id)\n",
        "    return any(entry.get(\"id\") == username for entry in valid_blacklist)\n",
        "\n",
        "# ============================\n",
        "# CONTROLE DE FALHAS POR USUÁRIO - INTEGRADO AO LOG CENTRAL\n",
        "# ============================\n",
        "\n",
        "def register_failure(username):\n",
        "    \"\"\"\n",
        "    Registra uma falha para o usuário no log central e move para blacklist se exceder o limite.\n",
        "    Conta falhas recentes no log central.\n",
        "    \"\"\"\n",
        "    # Count recent failures for this user from the central log\n",
        "    # Define \"recent\" as failures since the last successful event or within a time window\n",
        "    # For simplicity here, let's count all 'erro' events in 'gravação' or 'busca' sessions for this user\n",
        "    recent_failures = query_logs(id=username, status=\"erro\", sessao=[\"gravação\", \"busca\", \"poster\"]) # Check relevant sessions\n",
        "\n",
        "    failure_count = len(recent_failures)\n",
        "    append_log({\n",
        "        \"sessao\": \"falha\",\n",
        "        \"evento\": \"registrada\",\n",
        "        \"id\": username,\n",
        "        \"username\": username,\n",
        "        \"status\": \"contagem\",\n",
        "        \"detalhes\": f\"Falha registrada para {username}. Total de falhas recentes: {failure_count + 1}\"\n",
        "    })\n",
        "\n",
        "    if failure_count + 1 >= BLACKLIST_MAX_FAILURES:\n",
        "        add_to_blacklist(username)\n",
        "        # Optionally, remove old failure logs for this user after blacklisting\n",
        "        remove_logs(lambda entry: entry.get(\"id\") == username and entry.get(\"sessao\") == \"falha\")\n",
        "\n",
        "\n",
        "def clear_failure(username):\n",
        "    \"\"\"\n",
        "    Limpa o contador de falhas para o usuário removendo entradas de 'falha' do log central.\n",
        "    \"\"\"\n",
        "    removed_count = remove_logs(lambda entry: entry.get(\"id\") == username and entry.get(\"sessao\") == \"falha\")\n",
        "    if removed_count > 0:\n",
        "         append_log({\n",
        "            \"sessao\": \"falha\",\n",
        "            \"evento\": \"limpa\",\n",
        "            \"id\": username,\n",
        "            \"username\": username,\n",
        "            \"status\": \"ok\",\n",
        "            \"detalhes\": f\"Contador de falhas limpo para {username}. Removidas {removed_count} entradas.\"\n",
        "        })\n",
        "\n",
        "\n",
        "def add_to_blacklist(username):\n",
        "    \"\"\"\n",
        "    Adiciona usuário à blacklist com timestamp atual no log central.\n",
        "    \"\"\"\n",
        "    # Ensure user is not already blacklisted (to avoid duplicate entries)\n",
        "    if not is_in_blacklist(username):\n",
        "        append_log({\n",
        "            \"sessao\": \"blacklist\",\n",
        "            \"evento\": \"adicionado\",\n",
        "            \"id\": username,\n",
        "            \"username\": username,\n",
        "            \"status\": \"blacklisted\",\n",
        "            \"detalhes\": f\"Blacklisted até {datetime.fromtimestamp(time.time() + BLACKLIST_TIMEOUT).isoformat()}Z. Motivo: Excedeu o limite de falhas ({BLACKLIST_MAX_FAILURES}).\"\n",
        "        })\n",
        "        print(f\"⚠️ Usuário '{username}' adicionado à blacklist temporária (via log central).\")\n",
        "    else:\n",
        "        append_log({\n",
        "            \"sessao\": \"blacklist\",\n",
        "            \"evento\": \"tentativa_adicionar\",\n",
        "            \"id\": username,\n",
        "            \"username\": username,\n",
        "            \"status\": \"ja_blacklisted\",\n",
        "            \"detalhes\": f\"Tentativa de adicionar usuário {username} à blacklist, mas já estava blacklisted.\"\n",
        "        })\n",
        "        print(f\"⚠️ Usuário '{username}' já está na blacklist temporária.\")\n",
        "\n",
        "\n",
        "# ============================\n",
        "# BUSCA DE TRANSMISSÕES NA API XCAM - INTEGRADA AO LOG CENTRAL\n",
        "# ============================\n",
        "\n",
        "def get_broadcasts(limit=None, page=PAGE_DEFAULT, usuarios_especificos=None, temp_folder=\"/content\"):\n",
        "    \"\"\"\n",
        "    Busca transmissões ao vivo, respeitando blacklist e log de processamento.\n",
        "    Garante poster válido (download ou ffmpeg) e faz fallback automático.\n",
        "    \"\"\"\n",
        "    # Use global LIMIT_DEFAULT if limit is not provided\n",
        "    if limit is None:\n",
        "        global LIMIT_DEFAULT\n",
        "        limit = LIMIT_DEFAULT\n",
        "\n",
        "    # Query log central for users currently being processed or blacklisted\n",
        "    processing_logs = query_logs(sessao=\"gravação\", status=\"iniciando\")\n",
        "    blacklisted_users = [entry.get(\"id\") for entry in get_blacklist_entries()]\n",
        "    transmissao_em_proc_ou_blacklisted = set([entry.get(\"id\") for entry in processing_logs] + blacklisted_users)\n",
        "\n",
        "    if usuarios_especificos:\n",
        "        api_url_main = f\"https://api.xcam.gay/?limit={API_SEARCH_LIMIT}&page=1\"\n",
        "        print(f\"🌐 Acessando API principal (usuários específicos): {api_url_main}\")\n",
        "        append_log({\n",
        "            \"sessao\": \"busca\",\n",
        "            \"evento\": \"api_main\",\n",
        "            \"id\": \"system\",\n",
        "            \"username\": \"system\",\n",
        "            \"status\": \"iniciando\",\n",
        "            \"detalhes\": f\"Acessando API principal para usuários específicos. URL: {api_url_main}\"\n",
        "        })\n",
        "    else:\n",
        "        api_url_main = f\"https://api.xcam.gay/?limit=1500&page=1\"\n",
        "        print(f\"🌐 Acessando API principal (todas transmissões online): {api_url_main}\")\n",
        "        append_log({\n",
        "            \"sessao\": \"busca\",\n",
        "            \"evento\": \"api_main\",\n",
        "            \"id\": \"system\",\n",
        "            \"username\": \"system\",\n",
        "            \"status\": \"iniciando\",\n",
        "            \"detalhes\": f\"Acessando API principal para todas transmissões online. URL: {api_url_main}\"\n",
        "        })\n",
        "\n",
        "\n",
        "    streams_from_main = []\n",
        "    streams_without_preview = []\n",
        "\n",
        "    try:\n",
        "        response_main = requests.get(api_url_main)\n",
        "        response_main.raise_for_status()\n",
        "        data_main = response_main.json()\n",
        "        broadcasts_data = data_main.get(\"broadcasts\")\n",
        "        if not broadcasts_data:\n",
        "            print(\"⚠️ Chave 'broadcasts' não encontrada na resposta da API principal.\")\n",
        "            append_log({\n",
        "                \"sessao\": \"busca\",\n",
        "                \"evento\": \"api_main\",\n",
        "                \"id\": \"system\",\n",
        "                \"username\": \"system\",\n",
        "                \"status\": \"erro_resposta\",\n",
        "                \"detalhes\": \"Chave 'broadcasts' não encontrada na resposta da API principal.\"\n",
        "            })\n",
        "            return []\n",
        "        items = broadcasts_data.get(\"items\")\n",
        "        if not isinstance(items, list):\n",
        "            print(f\"⚠️ Chave 'items' não encontrada ou não é uma lista em 'broadcasts'.\")\n",
        "            append_log({\n",
        "                \"sessao\": \"busca\",\n",
        "                \"evento\": \"api_main\",\n",
        "                \"id\": \"system\",\n",
        "                \"username\": \"system\",\n",
        "                \"status\": \"erro_resposta\",\n",
        "                \"detalhes\": \"Chave 'items' não encontrada ou não é uma lista em 'broadcasts'.\"\n",
        "            })\n",
        "            return []\n",
        "\n",
        "        for item in items:\n",
        "            preview = item.get(\"preview\") or {}\n",
        "            src = preview.get(\"src\")\n",
        "            poster = preview.get(\"poster\")\n",
        "            username = item.get(\"username\", \"desconhecido\")\n",
        "\n",
        "            if username in transmissao_em_proc_ou_blacklisted:\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"filtrando\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"ignorado\",\n",
        "                    \"detalhes\": \"Usuário em processamento ou blacklist.\"\n",
        "                })\n",
        "                continue\n",
        "            if usuarios_especificos and username not in usuarios_especificos:\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"filtrando\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"nao_especifico\",\n",
        "                    \"detalhes\": \"Usuário não está na lista de específicos.\"\n",
        "                })\n",
        "                continue\n",
        "\n",
        "            if src:\n",
        "                poster_path = None\n",
        "                try:\n",
        "                    # Try downloading first\n",
        "                    if poster and isinstance(poster, str) and poster.strip():\n",
        "                        poster_path = download_and_save_poster(poster, username, temp_folder)\n",
        "\n",
        "                    # If download failed or poster is invalid, try generating with ffmpeg\n",
        "                    if not is_poster_valid(poster_path):\n",
        "                        poster_path = generate_poster_with_ffmpeg(src, username, temp_folder)\n",
        "\n",
        "                    # If poster is still invalid, register failure and skip\n",
        "                    if not is_poster_valid(poster_path):\n",
        "                        print(f\"❌ Não foi possível obter ou gerar poster válido para {username}.\")\n",
        "                        register_failure(username)\n",
        "                        append_log({\n",
        "                            \"sessao\": \"busca\",\n",
        "                            \"evento\": \"poster_final\",\n",
        "                            \"id\": username,\n",
        "                            \"username\": username,\n",
        "                            \"status\": \"erro\",\n",
        "                            \"detalhes\": \"Falha ao obter/gerar poster válido.\"\n",
        "                        })\n",
        "                        continue\n",
        "                    else:\n",
        "                        # Clear failure count if we successfully got a valid poster\n",
        "                        clear_failure(username)\n",
        "                        append_log({\n",
        "                            \"sessao\": \"busca\",\n",
        "                            \"evento\": \"poster_final\",\n",
        "                            \"id\": username,\n",
        "                            \"username\": username,\n",
        "                            \"status\": \"ok\",\n",
        "                            \"detalhes\": f\"Poster válido obtido/gerado: {poster_path}\"\n",
        "                        })\n",
        "\n",
        "                except Exception as e:\n",
        "                    print(f\"❌ Erro ao processar poster para {username}: {e}\")\n",
        "                    register_failure(username)\n",
        "                    append_log({\n",
        "                        \"sessao\": \"busca\",\n",
        "                        \"evento\": \"poster_final\",\n",
        "                        \"id\": username,\n",
        "                        \"username\": username,\n",
        "                        \"status\": \"erro_inesperado\",\n",
        "                        \"detalhes\": f\"Erro inesperado ao processar poster: {e}\"\n",
        "                    })\n",
        "                    continue # Skip this stream due to poster error\n",
        "\n",
        "                streams_from_main.append({\n",
        "                    \"username\": username,\n",
        "                    \"src\": src,\n",
        "                    \"poster\": poster_path\n",
        "                })\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"encontrado\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"ok_main_api\",\n",
        "                    \"detalhes\": \"Stream encontrada na API principal com SRC.\"\n",
        "                })\n",
        "            else:\n",
        "                streams_without_preview.append({\"username\": username})\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"encontrado\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"sem_src_main_api\",\n",
        "                    \"detalhes\": \"Stream encontrada na API principal SEM SRC (tentar liveInfo).\"\n",
        "                })\n",
        "\n",
        "\n",
        "        print(f\"✅ {len(streams_from_main)} transmissões com URL na API principal (total consultado).\")\n",
        "\n",
        "    except requests.exceptions.RequestException as e:\n",
        "        print(f\"❌ Erro ao acessar API principal: {e}\")\n",
        "        append_log({\n",
        "            \"sessao\": \"busca\",\n",
        "            \"evento\": \"api_main\",\n",
        "            \"id\": \"system\",\n",
        "            \"username\": \"system\",\n",
        "            \"status\": \"erro_conexao\",\n",
        "            \"detalhes\": f\"Erro de conexão ao acessar API principal: {e}\"\n",
        "        })\n",
        "        return []\n",
        "    except Exception as e:\n",
        "        print(f\"❌ Erro inesperado ao processar resposta da API principal: {e}\")\n",
        "        append_log({\n",
        "            \"sessao\": \"busca\",\n",
        "            \"evento\": \"api_main\",\n",
        "            \"id\": \"system\",\n",
        "            \"username\": \"system\",\n",
        "            \"status\": \"erro_inesperado\",\n",
        "            \"detalhes\": f\"Erro inesperado ao processar resposta da API principal: {e}\"\n",
        "        })\n",
        "        return []\n",
        "\n",
        "\n",
        "    # Fallback: busca via liveInfo para streams sem URL na API principal\n",
        "    streams_from_liveinfo = []\n",
        "    if streams_without_preview:\n",
        "        print(f\"🔁 Buscando liveInfo para {len(streams_without_preview)} streams sem URL na API principal...\")\n",
        "        append_log({\n",
        "            \"sessao\": \"busca\",\n",
        "            \"evento\": \"fallback_liveinfo\",\n",
        "            \"id\": \"system\",\n",
        "            \"username\": \"system\",\n",
        "            \"status\": \"iniciando\",\n",
        "            \"detalhes\": f\"Iniciando fallback via liveInfo para {len(streams_without_preview)} streams.\"\n",
        "        })\n",
        "        for stream_info in streams_without_preview:\n",
        "            username = stream_info[\"username\"]\n",
        "            if username in transmissao_em_proc_ou_blacklisted:\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"fallback_liveinfo\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"ignorado\",\n",
        "                    \"detalhes\": \"Usuário em processamento ou blacklist, ignorando liveInfo.\"\n",
        "                })\n",
        "                continue\n",
        "            if usuarios_especificos and username not in usuarios_especificos:\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"fallback_liveinfo\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"nao_especifico\",\n",
        "                    \"detalhes\": \"Usuário não está na lista de específicos, ignorando liveInfo.\"\n",
        "                })\n",
        "                continue\n",
        "\n",
        "            api_url_liveinfo = f\"https://api.xcam.gay/user/{username}/liveInfo\"\n",
        "            try:\n",
        "                response_liveinfo = requests.get(api_url_liveinfo, timeout=10)\n",
        "                response_liveinfo.raise_for_status()\n",
        "                data_liveinfo = response_liveinfo.json()\n",
        "                m3u8_url = data_liveinfo.get(\"cdnURL\") or data_liveinfo.get(\"edgeURL\")\n",
        "                poster_path = None\n",
        "                if m3u8_url:\n",
        "                    poster_path = generate_poster_with_ffmpeg(m3u8_url, username, temp_folder)\n",
        "                    if not is_poster_valid(poster_path):\n",
        "                        print(f\"❌ Não foi possível gerar poster válido via liveInfo para {username}.\")\n",
        "                        register_failure(username)\n",
        "                        append_log({\n",
        "                            \"sessao\": \"busca\",\n",
        "                            \"evento\": \"fallback_liveinfo\",\n",
        "                            \"id\": username,\n",
        "                            \"username\": username,\n",
        "                            \"status\": \"erro_poster\",\n",
        "                            \"detalhes\": \"Falha ao gerar poster válido via liveInfo.\"\n",
        "                        })\n",
        "                        continue\n",
        "                    else:\n",
        "                        clear_failure(username)\n",
        "                        append_log({\n",
        "                            \"sessao\": \"busca\",\n",
        "                            \"evento\": \"fallback_liveinfo\",\n",
        "                            \"id\": username,\n",
        "                            \"username\": username,\n",
        "                            \"status\": \"ok\",\n",
        "                            \"detalhes\": f\"Stream e poster obtidos via liveInfo. Poster: {poster_path}\"\n",
        "                        })\n",
        "                    streams_from_liveinfo.append({\n",
        "                        \"username\": username,\n",
        "                        \"src\": m3u8_url,\n",
        "                        \"poster\": poster_path\n",
        "                    })\n",
        "                else:\n",
        "                    print(f\"⚠️ liveInfo de {username} não retornou cdnURL/edgeURL (usuário possivelmente offline).\")\n",
        "                    register_failure(username)\n",
        "                    append_log({\n",
        "                        \"sessao\": \"busca\",\n",
        "                        \"evento\": \"fallback_liveinfo\",\n",
        "                        \"id\": username,\n",
        "                        \"username\": username,\n",
        "                        \"status\": \"offline\",\n",
        "                        \"detalhes\": \"liveInfo não retornou URL (usuário possivelmente offline).\"\n",
        "                    })\n",
        "\n",
        "            except requests.exceptions.RequestException as ex:\n",
        "                print(f\"❌ Erro ao buscar liveInfo para {username}: {ex}\")\n",
        "                register_failure(username)\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"fallback_liveinfo\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"erro_conexao\",\n",
        "                    \"detalhes\": f\"Erro de conexão ao buscar liveInfo: {ex}\"\n",
        "                })\n",
        "            except Exception as ex:\n",
        "                print(f\"❌ Erro inesperado ao processar liveInfo para {username}: {ex}\")\n",
        "                register_failure(username)\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"fallback_liveinfo\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"erro_inesperado\",\n",
        "                    \"detalhes\": f\"Erro inesperado ao processar liveInfo: {ex}\"\n",
        "                })\n",
        "            time.sleep(0.2) # Small delay to avoid flooding API\n",
        "\n",
        "    # Junta, evita duplicidade de usuário, blacklist e respeita 'limit' FINAL\n",
        "    final_streams_list = []\n",
        "    seen_usernames_in_batch = set() # Track usernames added in this specific batch\n",
        "    for stream in streams_from_main + streams_from_liveinfo:\n",
        "        username = stream[\"username\"]\n",
        "        # Re-check processing/blacklisted status before adding to the final list\n",
        "        # This is important if the status changed during the fallback process\n",
        "        processing_logs = query_logs(sessao=\"gravação\", status=\"iniciando\")\n",
        "        blacklisted_users = [entry.get(\"id\") for entry in get_blacklist_entries()]\n",
        "        transmissao_em_proc_ou_blacklisted = set([entry.get(\"id\") for entry in processing_logs] + blacklisted_users)\n",
        "\n",
        "        if username in seen_usernames_in_batch or username in transmissao_em_proc_ou_blacklisted:\n",
        "            if username in seen_usernames_in_batch:\n",
        "                 append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"filtrando_final\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"duplicado_lote\",\n",
        "                    \"detalhes\": \"Usuário duplicado no lote atual.\"\n",
        "                })\n",
        "            elif username in transmissao_em_proc_ou_blacklisted:\n",
        "                 append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"filtrando_final\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"em_processo_ou_blacklist\",\n",
        "                    \"detalhes\": \"Usuário em processamento ou blacklist (checagem final).\"\n",
        "                })\n",
        "            continue\n",
        "\n",
        "        final_streams_list.append(stream)\n",
        "        seen_usernames_in_batch.add(username)\n",
        "\n",
        "        if len(final_streams_list) >= limit:\n",
        "            break\n",
        "\n",
        "    print(f\"🔎 Selecionadas {len(final_streams_list)} streams válidas após fallback (respeitando limit={limit}).\")\n",
        "    append_log({\n",
        "        \"sessao\": \"busca\",\n",
        "        \"evento\": \"resultado_final\",\n",
        "        \"id\": \"system\",\n",
        "        \"username\": \"system\",\n",
        "        \"status\": \"ok\",\n",
        "        \"detalhes\": f\"Busca finalizada. {len(final_streams_list)} streams selecionadas (limit={limit}).\"\n",
        "    })\n",
        "\n",
        "    return final_streams_list\n",
        "\n",
        "# ============================\n",
        "# BUSCA DE USUÁRIOS ESPECÍFICOS (COM BLACKLIST) - INTEGRADA AO LOG CENTRAL\n",
        "# ============================\n",
        "\n",
        "def buscar_usuarios_especificos(usuarios_lista, temp_folder=\"/content\"):\n",
        "    \"\"\"\n",
        "    Busca usuários específicos via API, agora respeitando blacklist e log de processamento.\n",
        "    Reutiliza a lógica central de get_broadcasts com o filtro de usuários específicos.\n",
        "    \"\"\"\n",
        "    if not usuarios_lista:\n",
        "        print(\"⚠️ Lista de usuários específicos vazia.\")\n",
        "        append_log({\n",
        "            \"sessao\": \"busca\",\n",
        "            \"evento\": \"especificos\",\n",
        "            \"id\": \"system\",\n",
        "            \"username\": \"system\",\n",
        "            \"status\": \"lista_vazia\",\n",
        "            \"detalhes\": \"Lista de usuários específicos para busca está vazia.\"\n",
        "        })\n",
        "        return []\n",
        "\n",
        "    print(f\"🔍 Buscando usuários específicos: {usuarios_lista}\")\n",
        "    append_log({\n",
        "        \"sessao\": \"busca\",\n",
        "        \"evento\": \"especificos\",\n",
        "        \"id\": \"system\",\n",
        "        \"username\": \"system\",\n",
        "        \"status\": \"iniciando\",\n",
        "        \"detalhes\": f\"Iniciando busca por usuários específicos: {', '.join(usuarios_lista)}\"\n",
        "    })\n",
        "\n",
        "    # Reutiliza get_broadcasts com o filtro de usuários específicos\n",
        "    # O limite será definido dentro de get_broadcasts com base em API_SEARCH_LIMIT\n",
        "    encontrados = get_broadcasts(usuarios_especificos=usuarios_lista, temp_folder=temp_folder)\n",
        "\n",
        "    # Log the final count of found specific users\n",
        "    append_log({\n",
        "        \"sessao\": \"busca\",\n",
        "        \"evento\": \"especificos\",\n",
        "        \"id\": \"system\",\n",
        "        \"username\": \"system\",\n",
        "        \"status\": \"finalizado\",\n",
        "        \"detalhes\": f\"Busca por usuários específicos finalizada. Encontrados {len(encontrados)} de {len(usuarios_lista)} solicitados.\"\n",
        "    })\n",
        "\n",
        "    return encontrados\n",
        "\n",
        "\n",
        "# ============================\n",
        "# BUSCA DA PRÓXIMA TRANSMISSÃO DISPONÍVEL (COM BLACKLIST) - INTEGRADA AO LOG CENTRAL\n",
        "# ============================\n",
        "\n",
        "def buscar_proxima_transmissao_livre(temp_folder=\"/content\"):\n",
        "    \"\"\"\n",
        "    Busca a próxima transmissão ao vivo não processada, com poster válido e ignorando blacklist.\n",
        "    \"\"\"\n",
        "    # Query log central for users currently being processed or blacklisted\n",
        "    processing_logs = query_logs(sessao=\"gravação\", status=\"iniciando\")\n",
        "    blacklisted_users = [entry.get(\"id\") for entry in get_blacklist_entries()]\n",
        "    transmissao_em_proc_ou_blacklisted = set([entry.get(\"id\") for entry in processing_logs] + blacklisted_users)\n",
        "\n",
        "    api_url_main = f\"https://api.xcam.gay/?limit=1500&page=1\" # Busca ampla para encontrar a proxima rapido\n",
        "    print(f\"🔎 Buscando próxima transmissão livre: {api_url_main}\")\n",
        "    append_log({\n",
        "        \"sessao\": \"busca\",\n",
        "        \"evento\": \"proxima_livre\",\n",
        "        \"id\": \"system\",\n",
        "        \"username\": \"system\",\n",
        "        \"status\": \"iniciando\",\n",
        "        \"detalhes\": f\"Iniciando busca pela próxima transmissão livre. URL: {api_url_main}\"\n",
        "    })\n",
        "\n",
        "    try:\n",
        "        response_main = requests.get(api_url_main, timeout=15)\n",
        "        response_main.raise_for_status()\n",
        "        data_main = response_main.json()\n",
        "        items = data_main.get(\"broadcasts\", {}).get(\"items\", [])\n",
        "\n",
        "        if not items:\n",
        "            print(\"🚫 API principal não retornou transmissões.\")\n",
        "            append_log({\n",
        "                \"sessao\": \"busca\",\n",
        "                \"evento\": \"proxima_livre\",\n",
        "                \"id\": \"system\",\n",
        "                \"username\": \"system\",\n",
        "                \"status\": \"sem_streams\",\n",
        "                \"detalhes\": \"API principal não retornou transmissões online.\"\n",
        "            })\n",
        "            return None\n",
        "\n",
        "        for item in items:\n",
        "            username = item.get(\"username\", \"desconhecido\")\n",
        "\n",
        "            if username in transmissao_em_proc_ou_blacklisted:\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"proxima_livre\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"ignorado\",\n",
        "                    \"detalhes\": \"Usuário em processamento ou blacklist, ignorando busca por livre.\"\n",
        "                })\n",
        "                continue # Skip if user is in processing or blacklist\n",
        "\n",
        "            preview = item.get(\"preview\") or {}\n",
        "            src = preview.get(\"src\")\n",
        "            poster = preview.get(\"poster\")\n",
        "\n",
        "            try:\n",
        "                if src:\n",
        "                    poster_path = None\n",
        "                    # Try downloading first\n",
        "                    if poster and isinstance(poster, str) and poster.strip():\n",
        "                        poster_path = download_and_save_poster(poster, username, temp_folder)\n",
        "\n",
        "                    # If download failed or poster is invalid, try generating with ffmpeg\n",
        "                    if not is_poster_valid(poster_path):\n",
        "                        poster_path = generate_poster_with_ffmpeg(src, username, temp_folder)\n",
        "\n",
        "                    # If poster is still invalid, register failure and skip\n",
        "                    if not is_poster_valid(poster_path):\n",
        "                        print(f\"❌ Não foi possível obter ou gerar poster válido para {username}.\")\n",
        "                        register_failure(username)\n",
        "                        append_log({\n",
        "                            \"sessao\": \"busca\",\n",
        "                            \"evento\": \"proxima_livre\",\n",
        "                            \"id\": username,\n",
        "                            \"username\": username,\n",
        "                            \"status\": \"erro_poster\",\n",
        "                            \"detalhes\": \"Falha ao obter/gerar poster válido.\"\n",
        "                        })\n",
        "                        continue # Skip this stream due to poster error\n",
        "                    else:\n",
        "                         # Clear failure count if we successfully got a valid poster\n",
        "                        clear_failure(username)\n",
        "                        append_log({\n",
        "                            \"sessao\": \"busca\",\n",
        "                            \"evento\": \"proxima_livre\",\n",
        "                            \"id\": username,\n",
        "                            \"username\": username,\n",
        "                            \"status\": \"encontrada\",\n",
        "                            \"detalhes\": f\"Transmissão livre encontrada com SRC. Poster: {poster_path}\"\n",
        "                        })\n",
        "                        print(f\"🎯 Transmissão livre encontrada: {username}\")\n",
        "                        return {\n",
        "                            \"username\": username,\n",
        "                            \"src\": src,\n",
        "                            \"poster\": poster_path\n",
        "                        }\n",
        "                else:\n",
        "                    # Try liveInfo fallback if no src in main API\n",
        "                    api_url_liveinfo = f\"https://api.xcam.gay/user/{username}/liveInfo\"\n",
        "                    try:\n",
        "                        response_liveinfo = requests.get(api_url_liveinfo, timeout=10)\n",
        "                        response_liveinfo.raise_for_status()\n",
        "                        data_liveinfo = response_liveinfo.json()\n",
        "                        m3u8_url = data_liveinfo.get(\"cdnURL\") or data_liveinfo.get(\"edgeURL\")\n",
        "                        poster_path = None\n",
        "                        if m3u8_url:\n",
        "                            poster_path = generate_poster_with_ffmpeg(m3u8_url, username, temp_folder)\n",
        "                            if not is_poster_valid(poster_path):\n",
        "                                print(f\"❌ Não foi possível gerar poster válido via liveInfo para {username}.\")\n",
        "                                register_failure(username)\n",
        "                                append_log({\n",
        "                                    \"sessao\": \"busca\",\n",
        "                                    \"evento\": \"proxima_livre\",\n",
        "                                    \"id\": username,\n",
        "                                    \"username\": username,\n",
        "                                    \"status\": \"erro_poster_liveinfo\",\n",
        "                                    \"detalhes\": \"Falha ao gerar poster válido via liveInfo.\"\n",
        "                                })\n",
        "                                continue\n",
        "                            else:\n",
        "                                clear_failure(username)\n",
        "                                append_log({\n",
        "                                    \"sessao\": \"busca\",\n",
        "                                    \"evento\": \"proxima_livre\",\n",
        "                                    \"id\": username,\n",
        "                                    \"username\": username,\n",
        "                                    \"status\": \"encontrada_liveinfo\",\n",
        "                                    \"detalhes\": f\"Transmissão livre encontrada via liveInfo. Poster: {poster_path}\"\n",
        "                                })\n",
        "                                print(f\"🎯 Transmissão livre (pelo liveInfo) encontrada: {username}\")\n",
        "                                return {\n",
        "                                    \"username\": username,\n",
        "                                    \"src\": m3u8_url,\n",
        "                                    \"poster\": poster_path\n",
        "                                }\n",
        "                        else:\n",
        "                            print(f\"⚠️ liveInfo de {username} não retornou cdnURL/edgeURL (usuário possivelmente offline).\")\n",
        "                            register_failure(username)\n",
        "                            append_log({\n",
        "                                \"sessao\": \"busca\",\n",
        "                                \"evento\": \"proxima_livre\",\n",
        "                                \"id\": username,\n",
        "                                \"username\": username,\n",
        "                                \"status\": \"offline_liveinfo\",\n",
        "                                \"detalhes\": \"liveInfo não retornou URL (usuário possivelmente offline).\"\n",
        "                            })\n",
        "                    except requests.exceptions.RequestException as ex:\n",
        "                        print(f\"❌ Erro ao buscar liveInfo para {username}: {ex}\")\n",
        "                        register_failure(username)\n",
        "                        append_log({\n",
        "                            \"sessao\": \"busca\",\n",
        "                            \"evento\": \"proxima_livre\",\n",
        "                            \"id\": username,\n",
        "                            \"username\": username,\n",
        "                            \"status\": \"erro_conexao_liveinfo\",\n",
        "                            \"detalhes\": f\"Erro de conexão ao buscar liveInfo: {ex}\"\n",
        "                        })\n",
        "                    except Exception as ex:\n",
        "                        print(f\"❌ Erro inesperado ao processar liveInfo para {username}: {ex}\")\n",
        "                        register_failure(username)\n",
        "                        append_log({\n",
        "                            \"sessao\": \"busca\",\n",
        "                            \"evento\": \"proxima_livre\",\n",
        "                            \"id\": username,\n",
        "                            \"username\": username,\n",
        "                            \"status\": \"erro_inesperado_liveinfo\",\n",
        "                            \"detalhes\": f\"Erro inesperado ao processar liveInfo: {ex}\"\n",
        "                        })\n",
        "                    time.sleep(0.2) # Small delay\n",
        "            except Exception as e:\n",
        "                print(f\"❌ Falha ao processar transmissão {username} durante busca livre: {e}\")\n",
        "                register_failure(username)\n",
        "                append_log({\n",
        "                    \"sessao\": \"busca\",\n",
        "                    \"evento\": \"proxima_livre\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"erro_processamento\",\n",
        "                    \"detalhes\": f\"Erro ao processar transmissão durante busca livre: {e}\"\n",
        "                })\n",
        "\n",
        "\n",
        "        print(\"🚫 Nenhuma transmissão livre encontrada após varrer todas online.\")\n",
        "        append_log({\n",
        "            \"sessao\": \"busca\",\n",
        "            \"evento\": \"proxima_livre\",\n",
        "            \"id\": \"system\",\n",
        "            \"username\": \"system\",\n",
        "            \"status\": \"nao_encontrada\",\n",
        "            \"detalhes\": \"Nenhuma transmissão livre encontrada após varrer API.\"\n",
        "        })\n",
        "        return None\n",
        "    except requests.exceptions.RequestException as e:\n",
        "        print(f\"❌ Erro ao buscar transmissões online: {e}\")\n",
        "        append_log({\n",
        "            \"sessao\": \"busca\",\n",
        "            \"evento\": \"proxima_livre\",\n",
        "            \"id\": \"system\",\n",
        "            \"username\": \"system\",\n",
        "            \"status\": \"erro_conexao_api\",\n",
        "            \"detalhes\": f\"Erro de conexão ao buscar transmissões online: {e}\"\n",
        "        })\n",
        "        return None\n",
        "    except Exception as e:\n",
        "        print(f\"❌ Erro inesperado ao buscar transmissões online: {e}\")\n",
        "        append_log({\n",
        "            \"sessao\": \"busca\",\n",
        "            \"evento\": \"proxima_livre\",\n",
        "            \"id\": \"system\",\n",
        "            \"username\": \"system\",\n",
        "            \"status\": \"erro_inesperado_api\",\n",
        "            \"detalhes\": f\"Erro inesperado ao buscar transmissões online: {e}\"\n",
        "        })\n",
        "        return None\n",
        "\n",
        "\n",
        "# ================================================================\n",
        "# FIM DA CÉLULA 6 — BUSCA E BLACKLIST (AGORA INTEGRADA AO LOG CENTRAL)\n",
        "# ================================================================\n",
        "\n",
        "# Observações:\n",
        "# - O controle de blacklist e falhas AGORA UTILIZA O LOG CENTRALIZADO (Célula 1) para máxima rastreabilidade.\n",
        "# - Funções de busca foram adaptadas para consultar o log central e a blacklist antes de retornar streams.\n",
        "# - Todas as funções estão preparadas para uso concorrente e integração com o pipeline modular do XCam.\n",
        "# - Poster gerado sempre é validado, evitando arquivos inválidos ou corrompidos.\n",
        "# - Tratamento de erro robusto e logging detalhado garantem manutenção facilitada."
      ],
      "metadata": {
        "id": "h1jr7D0pJ7jS"
      },
      "id": "h1jr7D0pJ7jS",
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Célula 7: Gravação da Stream, Poster Automático, Controle de Falhas, Log Seguro e Blacklist Inteligente\n",
        "\n",
        "**Objetivo:**  \n",
        "Automatizar a gravação de transmissões ao vivo com ffmpeg, garantindo robustez, rastreabilidade e integração com a lógica de blacklist temporária e controle de falhas. A célula também assegura o gerenciamento seguro do log de transmissões em processamento e a limpeza de arquivos temporários.\n",
        "\n",
        "## Estratégia e melhorias implementadas\n",
        "\n",
        "- **Gerenciamento seguro de log:**  \n",
        "  O usuário é registrado no log de transmissões em processamento antes da gravação e removido dele ao final (tanto em sucesso quanto em erro), evitando duplicidade e permitindo paralelismo seguro.\n",
        "- **Poster sempre válido:**  \n",
        "  O sistema tenta baixar o poster da API. Se o poster estiver ausente, inválido ou nulo, gera automaticamente uma imagem via ffmpeg, assegurando que toda transmissão tenha um poster associado e válido.\n",
        "- **Controle de tempo mínimo:**  \n",
        "  Se a gravação resultar em vídeo muito curto, tanto o arquivo de vídeo quanto o poster são descartados imediatamente, e uma falha é registrada para o usuário.\n",
        "- **Tratamento robusto de falhas:**  \n",
        "  Qualquer falha (ffmpeg, exceptions, etc.) é registrada. Ao atingir o número máximo de falhas consecutivas (`BLACKLIST_MAX_FAILURES`), o usuário entra automaticamente na blacklist temporária, evitando tentativas infinitas e desperdício de recursos.\n",
        "- **Limpeza automatizada:**  \n",
        "  Após upload ou erro, todos os arquivos temporários (vídeo e poster) são removidos, otimizando o uso do disco e mantendo o ambiente do Colab limpo.\n",
        "- **Reset de falhas em caso de sucesso:**  \n",
        "  Quando a gravação é válida, o contador de falhas do usuário é limpo, evitando blacklist indevida.\n",
        "- **Comentários detalhados e código modular:**  \n",
        "  O fluxo é completamente documentado, facilitando manutenção, revisão e entendimento por toda a equipe.\n",
        "\n",
        "---\n",
        "\n",
        "## Fluxo resumido da função principal\n",
        "\n",
        "1. **Registra o usuário** no log de transmissões em processamento.\n",
        "2. **Garante um poster válido** (download ou geração automática).\n",
        "3. **Executa o ffmpeg** para gravar a transmissão e monitora o progresso em tempo real.\n",
        "4. **Valida a gravação**:\n",
        "   - Se falhar, registra falha e trata blacklist.\n",
        "   - Se for curta demais, descarta e registra falha.\n",
        "   - Se for válida, limpa contador de falhas e prossegue normalmente.\n",
        "5. **Após upload ou erro**, remove o usuário do log e limpa arquivos temporários.\n",
        "\n",
        "---\n",
        "\n",
        "## Exemplo de uso\n",
        "\n",
        "```python\n",
        "resultado = gravar_stream(username=\"user123\", m3u8_url=\"https://cdn.xcam.gay/m3u8/...\", poster_url=\"https://api.xcam.gay/poster/...\")\n",
        "if resultado['upload_success']:\n",
        "    print(\"Gravação e upload realizados com sucesso!\")\n",
        "else:\n",
        "    print(\"Falha na gravação ou upload:\", resultado['abyss_response'])\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Segurança, rastreabilidade e integração\n",
        "\n",
        "- **Pronto para CI/CD e execução paralela:**  \n",
        "  Controle rigoroso de log e blacklist garante execução concorrente, segura e rastreável por todo o pipeline XCam.\n",
        "- **Integração total com as funções globais:**  \n",
        "  Utiliza funções de blacklist e falha da Célula 6, promovendo rastreabilidade e controle centralizado.\n",
        "- **Diagnóstico facilitado:**  \n",
        "  Mensagens e logs detalhados em cada etapa do processo.\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "jGFyqOUoKEF7"
      },
      "id": "jGFyqOUoKEF7"
    },
    {
      "cell_type": "code",
      "source": [
        "# ================================================================\n",
        "# Célula 7: Gravação Automática de Transmissão, Controle de Log, Limpeza e Blacklist Inteligente\n",
        "# ================================================================\n",
        "# Objetivo:\n",
        "# - Gravar transmissões ao vivo utilizando ffmpeg, com controle rigoroso de log de processamento, tratamento de falhas e integração com blacklist temporária.\n",
        "# - Garantir que cada transmissão seja registrada no log de processamento no início e removida ao final (sucesso ou erro), evitando duplicidade ou processamento concorrente.\n",
        "# - Registrar falhas (ffmpeg, duração insuficiente, poster inválido), escalando usuários para a blacklist temporária ao atingir o limite de tentativas, conforme regras globais (Célula 6).\n",
        "# - Assegurar limpeza robusta de arquivos temporários e rastreabilidade total via logs e mensagens detalhadas.\n",
        "# - Modular e pronto para integração com pipelines CI/CD, paralelismo e auditoria centralizada.\n",
        "# ================================================================\n",
        "\n",
        "# Ensure the core log utilities and global parameters are available\n",
        "try:\n",
        "    append_log\n",
        "    query_logs\n",
        "    remove_logs\n",
        "    update_log_entry\n",
        "    now_iso\n",
        "    # Check for global parameters from Cell 1\n",
        "    _ = RECORD_SECONDS\n",
        "    _ = RECORD_SECONDS_MIN\n",
        "    _ = TEMP_OUTPUT_FOLDER # Defined in cell 4, used here\n",
        "    # Check for functions from Cell 6\n",
        "    _ = register_failure\n",
        "    _ = clear_failure\n",
        "    _ = is_poster_valid # From cell 3 actually, used here\n",
        "    _ = download_and_save_poster # From cell 3\n",
        "    _ = generate_poster_with_ffmpeg # From cell 3\n",
        "except NameError:\n",
        "    print(\"❌ As funções de log centralizado, parâmetros globais (Célula 1, 4) ou funções de utilidade/busca (Célula 3, 6) não estão disponíveis. Execute as células anteriores.\")\n",
        "    # Define dummy functions/values to avoid errors\n",
        "    def append_log(entry, log_path=None): print(f\"🚫 LOG_ERROR (Cell 7): {entry}\")\n",
        "    def query_logs(sessao=None, id=None, username=None, evento=None, status=None, after=None, before=None, log_path=None): return []\n",
        "    def remove_logs(condition_fn, log_path=None): return 0\n",
        "    def update_log_entry(match_fn, update_fn, log_path=None): return 0\n",
        "    def now_iso(): return datetime.utcnow().isoformat() + \"Z\"\n",
        "    RECORD_SECONDS = 120\n",
        "    RECORD_SECONDS_MIN = 10\n",
        "    TEMP_OUTPUT_FOLDER = \"/tmp/dummy_recordings\"\n",
        "    # Dummy functions for external dependencies\n",
        "    def register_failure(username): print(f\"🚫 DUMMY_register_failure: {username}\")\n",
        "    def clear_failure(username): print(f\"✅ DUMMY_clear_failure: {username}\")\n",
        "    def is_poster_valid(poster_path): return os.path.exists(poster_path) # Basic check\n",
        "    def download_and_save_poster(poster_url, username, temp_folder): return None\n",
        "    def generate_poster_with_ffmpeg(m3u8_url, username, temp_folder, frame_time=7, timeout=20): return None\n",
        "\n",
        "\n",
        "def get_video_duration(filepath):\n",
        "    \"\"\"\n",
        "    Retorna a duração real do arquivo mp4, em segundos, utilizando ffprobe.\n",
        "    Retorna None em caso de erro ou se o arquivo não existir.\n",
        "    \"\"\"\n",
        "    import subprocess\n",
        "    import json\n",
        "    try:\n",
        "        if not os.path.exists(filepath):\n",
        "            print(f\"⚠️ Arquivo para ffprobe não encontrado: {filepath}\")\n",
        "            append_log({\n",
        "                \"sessao\": \"gravação\",\n",
        "                \"evento\": \"ffprobe\",\n",
        "                \"id\": os.path.basename(filepath), # Use filename as ID if username not available\n",
        "                \"username\": \"unknown\", # Username not directly available here\n",
        "                \"status\": \"erro\",\n",
        "                \"detalhes\": f\"Arquivo para ffprobe não encontrado: {filepath}\"\n",
        "            })\n",
        "            return None\n",
        "        cmd = [\n",
        "            \"ffprobe\", \"-v\", \"error\",\n",
        "            \"-show_entries\", \"format=duration\",\n",
        "            \"-of\", \"json\",\n",
        "            filepath\n",
        "        ]\n",
        "        result = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)\n",
        "        info = json.loads(result.stdout)\n",
        "        duration = float(info[\"format\"][\"duration\"])\n",
        "        append_log({\n",
        "            \"sessao\": \"gravação\",\n",
        "            \"evento\": \"ffprobe\",\n",
        "            \"id\": os.path.basename(filepath),\n",
        "            \"username\": \"unknown\",\n",
        "            \"status\": \"ok\",\n",
        "            \"detalhes\": f\"Duração obtida via ffprobe: {duration}s\"\n",
        "        })\n",
        "        return int(round(duration))\n",
        "    except Exception as e:\n",
        "        print(f\"⚠️ Não foi possível obter duração via ffprobe para {filepath}: {e}\")\n",
        "        append_log({\n",
        "            \"sessao\": \"gravação\",\n",
        "            \"evento\": \"ffprobe\",\n",
        "            \"id\": os.path.basename(filepath) if os.path.exists(filepath) else \"unknown\",\n",
        "            \"username\": \"unknown\",\n",
        "            \"status\": \"erro\",\n",
        "            \"detalhes\": f\"Não foi possível obter duração via ffprobe para {filepath}: {e}\"\n",
        "        })\n",
        "        return None\n",
        "\n",
        "def gravar_stream(username, m3u8_url, poster_url=None, poster_frame_time=7):\n",
        "    \"\"\"\n",
        "    Grava a transmissão ao vivo do usuário usando ffmpeg, com controle de erros, log e integração à blacklist.\n",
        "    - Adiciona usuário ao log de transmissões em processamento no início (via log central).\n",
        "    - Remove do log ao finalizar, independentemente do resultado (robusto via finally).\n",
        "    - Em caso de falha do ffmpeg ou gravação muito curta, registra falha do usuário (via log central).\n",
        "    - Ao atingir N falhas consecutivas, usuário entra na blacklist (funções globais - Célula 6).\n",
        "    - Limpa arquivos temporários ao final.\n",
        "    - Garante poster válido: baixa da poster_url, ou gera automaticamente com ffmpeg se ausente/inválido.\n",
        "    - poster_frame_time: segundo do vídeo onde a captura do poster será feita, se necessário.\n",
        "    \"\"\"\n",
        "    # Adiciona a transmissão ao log central de transmissões em processamento\n",
        "    # This replaces the old LOG_PROCESSAMENTO_PATH file logic\n",
        "    append_log({\n",
        "        \"sessao\": \"gravação\",\n",
        "        \"evento\": \"iniciando\",\n",
        "        \"id\": username,\n",
        "        \"username\": username,\n",
        "        \"status\": \"iniciando\",\n",
        "        \"detalhes\": f\"Iniciando processo de gravação para {username}. URL: {m3u8_url}\"\n",
        "    })\n",
        "\n",
        "\n",
        "    start_time_dt = datetime.now()\n",
        "    data_str = start_time_dt.strftime(\"%d-%m-%Y\")\n",
        "    horario_str = start_time_dt.strftime(\"%H-%M\")\n",
        "    temp_filename = f\"{username}_{start_time_dt.strftime('%Y%m%d_%H%M%S')}_temp.mp4\"\n",
        "    # Ensure TEMP_OUTPUT_FOLDER is accessible\n",
        "    if 'TEMP_OUTPUT_FOLDER' not in globals() or not os.path.exists(TEMP_OUTPUT_FOLDER):\n",
        "         print(f\"❌ TEMP_OUTPUT_FOLDER não definido ou não existe: {TEMP_OUTPUT_FOLDER}. Crie o diretório.\")\n",
        "         append_log({\n",
        "            \"sessao\": \"gravação\",\n",
        "            \"evento\": \"erro_setup\",\n",
        "            \"id\": username,\n",
        "            \"username\": username,\n",
        "            \"status\": \"erro\",\n",
        "            \"detalhes\": f\"Diretório temporário não definido ou não existe: {TEMP_OUTPUT_FOLDER}\"\n",
        "        })\n",
        "         # Ensure user is removed from processing log even if setup fails\n",
        "         remove_logs(lambda entry: entry.get(\"id\") == username and entry.get(\"sessao\") == \"gravação\" and entry.get(\"status\") == \"iniciando\")\n",
        "         return {\n",
        "            'username': username,\n",
        "            'filename': None,\n",
        "            'filepath': None,\n",
        "            'upload_success': False,\n",
        "            'abyss_response': \"Diretório temporário não disponível\"\n",
        "        }\n",
        "\n",
        "\n",
        "    filepath = os.path.join(TEMP_OUTPUT_FOLDER, temp_filename)\n",
        "\n",
        "    print(f\"\\n🎬 Iniciando gravação de: {username} (URL: {m3u8_url}) em {filepath}\")\n",
        "    append_log({\n",
        "        \"sessao\": \"gravação\",\n",
        "        \"evento\": \"ffmpeg_command\",\n",
        "        \"id\": username,\n",
        "        \"username\": username,\n",
        "        \"status\": \"preparando\",\n",
        "        \"detalhes\": f\"Preparando comando FFmpeg. Output: {filepath}. URL: {m3u8_url}\"\n",
        "    })\n",
        "\n",
        "\n",
        "    # Garante poster válido\n",
        "    poster_temp_path = None\n",
        "    # Ensure poster utility functions are available\n",
        "    try:\n",
        "        if poster_url:\n",
        "            poster_temp_path = download_and_save_poster(poster_url, username, TEMP_OUTPUT_FOLDER)\n",
        "        if not is_poster_valid(poster_temp_path) and m3u8_url:\n",
        "            poster_temp_path = generate_poster_with_ffmpeg(m3u8_url, username, TEMP_OUTPUT_FOLDER, frame_time=poster_frame_time)\n",
        "    except NameError:\n",
        "        print(\"❌ Funções de poster (download_and_save_poster, generate_poster_with_ffmpeg, is_poster_valid) não encontradas. Execute a Célula 3.\")\n",
        "        append_log({\n",
        "            \"sessao\": \"gravação\",\n",
        "            \"evento\": \"erro_poster_setup\",\n",
        "            \"id\": username,\n",
        "            \"username\": username,\n",
        "            \"status\": \"erro\",\n",
        "            \"detalhes\": \"Funções de poster não encontradas. Célula 3 não executada?\"\n",
        "        })\n",
        "        # Continue without poster, will likely fail validation later or during upload\n",
        "        poster_temp_path = None\n",
        "\n",
        "\n",
        "    ffmpeg_cmd = [\n",
        "        \"ffmpeg\", \"-i\", m3u8_url,\n",
        "        \"-t\", str(RECORD_SECONDS),\n",
        "        \"-c\", \"copy\", \"-y\", filepath\n",
        "    ]\n",
        "\n",
        "    start_time_process = time.time()\n",
        "    process = None\n",
        "    upload_success = False\n",
        "    abyss_resp = \"Upload não realizado\"\n",
        "    slug = None\n",
        "    filepath_for_upload = None\n",
        "    filename_for_upload = None\n",
        "    ffmpeg_stderr_output = \"\" # Variable to store stderr for detailed logging\n",
        "\n",
        "    try:\n",
        "        append_log({\n",
        "            \"sessao\": \"gravação\",\n",
        "            \"evento\": \"ffmpeg_command\",\n",
        "            \"id\": username,\n",
        "            \"username\": username,\n",
        "            \"status\": \"executando\",\n",
        "            \"detalhes\": f\"Executando comando FFmpeg: {' '.join(ffmpeg_cmd)}\"\n",
        "        })\n",
        "        process = subprocess.Popen(\n",
        "            ffmpeg_cmd,\n",
        "            stdout=subprocess.PIPE,\n",
        "            stderr=subprocess.PIPE, # Capture stderr separately\n",
        "            text=True,\n",
        "            bufsize=1,\n",
        "            universal_newlines=True\n",
        "        )\n",
        "\n",
        "        # Monitoramento de progresso do ffmpeg (logs em tempo real)\n",
        "        elapsed_seconds = 0\n",
        "        last_log_minute = -1\n",
        "        # Read stdout and stderr in separate threads to avoid deadlocks\n",
        "        def read_stdout(pipe, username, total_seconds):\n",
        "            last_log_minute_thread = -1\n",
        "            for line in iter(pipe.readline, ''):\n",
        "                 # Log relevant FFmpeg output lines (optional, can be noisy)\n",
        "                # if any(keyword in line for keyword in [\"frame=\", \"fps=\", \"size=\", \"time=\", \"bitrate=\", \"speed=\"]):\n",
        "                #     append_log({\n",
        "                #         \"sessao\": \"gravação\",\n",
        "                #         \"evento\": \"ffmpeg_progress\",\n",
        "                #         \"id\": username,\n",
        "                #         \"username\": username,\n",
        "                #         \"status\": \"progresso\",\n",
        "                #         \"detalhes\": line.strip()\n",
        "                #     })\n",
        "                if \"time=\" in line:\n",
        "                    try:\n",
        "                        match = re.search(r\"time=(\\d+):(\\d+):(\\d+)\", line)\n",
        "                        if match:\n",
        "                            h, m, s = map(int, match.groups())\n",
        "                            elapsed_seconds_thread = h * 3600 + m * 60 + s\n",
        "                            if elapsed_seconds_thread // 60 != last_log_minute_thread:\n",
        "                                log_progress(username, elapsed_seconds_thread, total_seconds)\n",
        "                                last_log_minute_thread = elapsed_seconds_thread // 60\n",
        "                    except Exception:\n",
        "                        pass # Ignore errors in parsing progress line\n",
        "            pipe.close()\n",
        "\n",
        "        def read_stderr(pipe, username, stderr_list):\n",
        "            for line in iter(pipe.readline, ''):\n",
        "                stderr_list.append(line)\n",
        "                # Log specific error patterns immediately\n",
        "                if \"Invalid data found when processing input\" in line or \"non-existing PPS\" in line or \"decode_slice_header error\" in line or \"no frame!\" in line:\n",
        "                     append_log({\n",
        "                        \"sessao\": \"gravação\",\n",
        "                        \"evento\": \"ffmpeg_decoding_error\",\n",
        "                        \"id\": username,\n",
        "                        \"username\": username,\n",
        "                        \"status\": \"decoding_error\",\n",
        "                        \"detalhes\": line.strip()\n",
        "                    })\n",
        "            pipe.close()\n",
        "\n",
        "        stderr_lines = []\n",
        "        stdout_thread = threading.Thread(target=read_stdout, args=(process.stdout, username, RECORD_SECONDS))\n",
        "        stderr_thread = threading.Thread(target=read_stderr, args=(process.stderr, username, stderr_lines))\n",
        "\n",
        "        stdout_thread.start()\n",
        "        stderr_thread.start()\n",
        "\n",
        "        stdout_thread.join()\n",
        "        stderr_thread.join()\n",
        "\n",
        "        process.wait()\n",
        "        end_time_process = time.time()\n",
        "        elapsed_seconds_proc = round(end_time_process - start_time_process)\n",
        "        log_progress(username, elapsed_seconds_proc, RECORD_SECONDS)\n",
        "\n",
        "        ffmpeg_stderr_output = \"\".join(stderr_lines) # Store the full stderr output\n",
        "\n",
        "\n",
        "        append_log({\n",
        "            \"sessao\": \"gravação\",\n",
        "            \"evento\": \"ffmpeg_finalizado\",\n",
        "            \"id\": username,\n",
        "            \"username\": username,\n",
        "            \"status\": \"concluido\",\n",
        "            \"detalhes\": f\"FFmpeg finalizado. Return code: {process.returncode}. Process elapsed: {elapsed_seconds_proc}s. STDERR Summary: {ffmpeg_stderr_output[:500]}...\"\n",
        "        })\n",
        "\n",
        "\n",
        "        # Se FFmpeg falhou, registra falha para o usuário e retorna erro\n",
        "        if process.returncode != 0:\n",
        "            print(f\"❌ FFmpeg falhou para {username}. Código de saída: {process.returncode}\")\n",
        "            register_failure(username) # Register failure via central log\n",
        "            append_log({\n",
        "                \"sessao\": \"gravação\",\n",
        "                \"evento\": \"ffmpeg_falhou\",\n",
        "                \"id\": username,\n",
        "                \"username\": username,\n",
        "                \"status\": \"erro\",\n",
        "                \"detalhes\": f\"FFmpeg falhou. Código de saída: {process.returncode}. Full STDERR: {ffmpeg_stderr_output[:1000]}...\" # Log more stderr on failure\n",
        "            })\n",
        "            abyss_resp = \"Gravação FFmpeg falhou\"\n",
        "            # Set upload_success to False implicitly by not setting it to True\n",
        "\n",
        "\n",
        "        # Validação pelo tempo real do arquivo gravado (robusta)\n",
        "        elapsed_seconds_real = get_video_duration(filepath)\n",
        "        if elapsed_seconds_real is not None:\n",
        "            print(f\"✅ Duração real do arquivo gravado: {elapsed_seconds_real}s (ffprobe)\")\n",
        "            append_log({\n",
        "                \"sessao\": \"gravação\",\n",
        "                \"evento\": \"validacao_duracao\",\n",
        "                \"id\": username,\n",
        "                \"username\": username,\n",
        "                \"status\": \"ok\",\n",
        "                \"detalhes\": f\"Duração real do arquivo: {elapsed_seconds_real}s.\"\n",
        "            })\n",
        "        else:\n",
        "            print(f\"⚠️ Não foi possível aferir duração real, usando a do processo: {elapsed_seconds_proc}s\")\n",
        "            append_log({\n",
        "                \"sessao\": \"gravação\",\n",
        "                \"evento\": \"validacao_duracao\",\n",
        "                \"id\": username,\n",
        "                \"username\": username,\n",
        "                \"status\": \"warning\",\n",
        "                \"detalhes\": f\"Não foi possível aferir duração real, usando a do processo: {elapsed_seconds_proc}s.\"\n",
        "            })\n",
        "            elapsed_seconds_real = elapsed_seconds_proc # Fallback to process time\n",
        "\n",
        "\n",
        "        if elapsed_seconds_real < RECORD_SECONDS_MIN:\n",
        "            print(f\"⏩ Duração gravada ({elapsed_seconds_real}s) menor que o mínimo ({RECORD_SECONDS_MIN}s). Arquivo descartado.\")\n",
        "            register_failure(username) # Register failure via central log\n",
        "            append_log({\n",
        "                \"sessao\": \"gravação\",\n",
        "                \"evento\": \"validacao_duracao\",\n",
        "                \"id\": username,\n",
        "                \"username\": username,\n",
        "                \"status\": \"curta_descartada\",\n",
        "                \"detalhes\": f\"Duração gravada ({elapsed_seconds_real}s) menor que o mínimo ({RECORD_SECONDS_MIN}s). Arquivo descartado.\"\n",
        "            })\n",
        "            # Cleanup temporary video file\n",
        "            if os.path.exists(filepath):\n",
        "                try:\n",
        "                    os.remove(filepath)\n",
        "                    print(f\"🗑️ Arquivo de vídeo curto removido: {filepath}\")\n",
        "                    append_log({\n",
        "                        \"sessao\": \"gravação\",\n",
        "                        \"evento\": \"limpeza_temp\",\n",
        "                        \"id\": username,\n",
        "                        \"username\": username,\n",
        "                        \"status\": \"ok\",\n",
        "                        \"detalhes\": f\"Arquivo de vídeo curto removido: {filepath}\"\n",
        "                    })\n",
        "                except Exception as e:\n",
        "                    print(f\"⚠️ Não foi possível remover o arquivo de vídeo curto: {e}\")\n",
        "                    append_log({\n",
        "                        \"sessao\": \"gravação\",\n",
        "                        \"evento\": \"limpeza_temp\",\n",
        "                        \"id\": username,\n",
        "                        \"username\": username,\n",
        "                        \"status\": \"erro\",\n",
        "                        \"detalhes\": f\"Não foi possível remover arquivo de vídeo curto: {e}\"\n",
        "                    })\n",
        "            # Cleanup temporary poster file if it exists\n",
        "            if poster_temp_path and os.path.exists(poster_temp_path):\n",
        "                 try:\n",
        "                    os.remove(poster_temp_path)\n",
        "                    print(f\"🗑️ Poster temporário removido (vídeo curto): {poster_temp_path}\")\n",
        "                    append_log({\n",
        "                        \"sessao\": \"gravação\",\n",
        "                        \"evento\": \"limpeza_temp\",\n",
        "                        \"id\": username,\n",
        "                        \"username\": username,\n",
        "                        \"status\": \"ok\",\n",
        "                        \"detalhes\": f\"Poster temporário removido (vídeo curto): {poster_temp_path}\"\n",
        "                    })\n",
        "                 except Exception as e:\n",
        "                    print(f\"⚠️ Não foi possível remover o poster temporário (vídeo curto): {e}\")\n",
        "                    append_log({\n",
        "                        \"sessao\": \"gravação\",\n",
        "                        \"evento\": \"limpeza_temp\",\n",
        "                        \"id\": username,\n",
        "                        \"username\": username,\n",
        "                        \"status\": \"erro\",\n",
        "                        \"detalhes\": f\"Não foi possível remover poster temporário (vídeo curto): {e}\"\n",
        "                    })\n",
        "\n",
        "            abyss_resp = \"Gravação muito curta (descartada)\"\n",
        "            # Set upload_success to False implicitly\n",
        "\n",
        "\n",
        "        # Sucesso: limpa falhas acumuladas do usuário e procede para upload\n",
        "        else:\n",
        "            clear_failure(username) # Clear failure count via central log\n",
        "            append_log({\n",
        "                \"sessao\": \"gravação\",\n",
        "                \"evento\": \"validacao_duracao\",\n",
        "                \"id\": username,\n",
        "                \"username\": username,\n",
        "                \"status\": \"valida\",\n",
        "                \"detalhes\": f\"Gravação válida. Duração: {elapsed_seconds_real}s.\"\n",
        "            })\n",
        "\n",
        "            tempo_formatado = format_seconds(elapsed_seconds_real)\n",
        "            final_filename = f\"{username}_{data_str}_{horario_str}_{tempo_formatado}.mp4\"\n",
        "            final_filepath = os.path.join(TEMP_OUTPUT_FOLDER, final_filename)\n",
        "\n",
        "            try:\n",
        "                os.rename(filepath, final_filepath)\n",
        "                print(f\"✅ Arquivo renomeado para: {final_filename}\")\n",
        "                append_log({\n",
        "                    \"sessao\": \"gravação\",\n",
        "                    \"evento\": \"renomear\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"ok\",\n",
        "                    \"detalhes\": f\"Arquivo renomeado de {temp_filename} para {final_filename}\"\n",
        "                })\n",
        "                filepath_for_upload = final_filepath\n",
        "                filename_for_upload = final_filename\n",
        "            except Exception as e:\n",
        "                print(f\"❌ Erro ao renomear arquivo {temp_filename} para {final_filename}: {e}\")\n",
        "                append_log({\n",
        "                    \"sessao\": \"gravação\",\n",
        "                    \"evento\": \"renomear\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"erro\",\n",
        "                    \"detalhes\": f\"Erro ao renomear arquivo {temp_filename} para {final_filename}: {e}\"\n",
        "                })\n",
        "                filepath_for_upload = filepath # Use original path if rename fails\n",
        "                filename_for_upload = temp_filename\n",
        "                abyss_resp = f\"Gravação válida, erro ao renomear: {e}\" # Update status\n",
        "\n",
        "\n",
        "            # Realiza upload e atualização do banco de dados (json)\n",
        "            # Ensure upload_to_abyss_and_update_json is available\n",
        "            try:\n",
        "                success, abyss_response_upload, slug_result = upload_to_abyss_and_update_json(\n",
        "                    filepath_for_upload, username, elapsed_seconds_real,\n",
        "                    poster_temp_path=poster_temp_path # Pass poster path to upload function for handling\n",
        "                )\n",
        "                upload_success = success\n",
        "                abyss_resp = abyss_response_upload\n",
        "                slug = slug_result\n",
        "                append_log({\n",
        "                    \"sessao\": \"gravação\",\n",
        "                    \"evento\": \"upload_json\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"ok\" if upload_success else \"erro\",\n",
        "                    \"detalhes\": f\"Upload e atualização JSON. Sucesso: {upload_success}. Resposta: {abyss_resp}. Slug: {slug}\"\n",
        "                })\n",
        "\n",
        "            except NameError:\n",
        "                print(\"❌ Função upload_to_abyss_and_update_json não encontrada. Execute a Célula 8.\")\n",
        "                append_log({\n",
        "                    \"sessao\": \"gravação\",\n",
        "                    \"evento\": \"upload_json\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"erro_upload_setup\",\n",
        "                    \"detalhes\": \"Função upload_to_abyss_and_update_json não encontrada. Célula 8 não executada?\"\n",
        "                })\n",
        "                upload_success = False\n",
        "                abyss_resp = \"Função de upload não encontrada\"\n",
        "                slug = None\n",
        "            except Exception as e:\n",
        "                 print(f\"❌ Erro inesperado durante upload ou atualização JSON para {username}: {e}\")\n",
        "                 append_log({\n",
        "                    \"sessao\": \"gravação\",\n",
        "                    \"evento\": \"upload_json\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"erro_upload_inesperado\",\n",
        "                    \"detalhes\": f\"Erro inesperado durante upload ou atualização JSON: {e}\"\n",
        "                })\n",
        "                 upload_success = False\n",
        "                 abyss_resp = f\"Erro inesperado durante upload/JSON: {e}\"\n",
        "                 slug = None\n",
        "\n",
        "\n",
        "\n",
        "    except FileNotFoundError:\n",
        "        print(f\"❌ Erro: Comando 'ffmpeg' não encontrado. Certifique-se de que foi instalado corretamente.\")\n",
        "        register_failure(username) # Register failure via central log\n",
        "        append_log({\n",
        "            \"sessao\": \"gravação\",\n",
        "            \"evento\": \"ffmpeg_exec\",\n",
        "            \"id\": username,\n",
        "            \"username\": username,\n",
        "            \"status\": \"erro_ffmpeg_nao_encontrado\",\n",
        "            \"detalhes\": \"Comando 'ffmpeg' não encontrado.\"\n",
        "        })\n",
        "        abyss_resp = \"Comando FFmpeg não encontrado\"\n",
        "        upload_success = False # Explicitly set to False\n",
        "        slug = None\n",
        "\n",
        "\n",
        "    except Exception as e:\n",
        "        print(f\"❌ Erro inesperado durante a execução do FFmpeg para {username}: {e}\")\n",
        "        register_failure(username) # Register failure via central log\n",
        "        append_log({\n",
        "            \"sessao\": \"gravação\",\n",
        "            \"evento\": \"ffmpeg_exec\",\n",
        "            \"id\": username,\n",
        "            \"username\": username,\n",
        "            \"status\": \"erro_inesperado\",\n",
        "            \"detalhes\": f\"Erro inesperado durante a execução do FFmpeg: {e}\"\n",
        "        })\n",
        "        abyss_resp = f\"Erro inesperado na execução do FFmpeg: {e}\"\n",
        "        upload_success = False # Explicitly set to False\n",
        "        slug = None\n",
        "\n",
        "\n",
        "    finally:\n",
        "        # Remoção segura do usuário do log central de transmissões em processamento\n",
        "        # This replaces the old LOG_PROCESSAMENTO_PATH file logic\n",
        "        removed_count = remove_logs(lambda entry: entry.get(\"id\") == username and entry.get(\"sessao\") == \"gravação\" and entry.get(\"status\") == \"iniciando\")\n",
        "        if removed_count > 0:\n",
        "             append_log({\n",
        "                \"sessao\": \"gravação\",\n",
        "                \"evento\": \"removido_log_processamento\",\n",
        "                \"id\": username,\n",
        "                \"username\": username,\n",
        "                \"status\": \"ok\",\n",
        "                \"detalhes\": f\"Removido {removed_count} entrada(s) de 'iniciando' do log de processamento para {username}.\"\n",
        "            })\n",
        "        else:\n",
        "             append_log({\n",
        "                \"sessao\": \"gravação\",\n",
        "                \"evento\": \"removido_log_processamento\",\n",
        "                \"id\": username,\n",
        "                \"username\": username,\n",
        "                \"status\": \"warning\",\n",
        "                \"detalhes\": f\"Não foi possível remover entrada de 'iniciando' do log de processamento para {username} (talvez já removida?).\"\n",
        "            })\n",
        "\n",
        "\n",
        "        # Limpeza do arquivo de vídeo pós-upload (se ainda existir)\n",
        "        # Use filepath_for_upload as it's the final location attempted\n",
        "        if 'filepath_for_upload' in locals() and filepath_for_upload and os.path.exists(filepath_for_upload):\n",
        "            try:\n",
        "                os.remove(filepath_for_upload)\n",
        "                print(f\"🗑️ Arquivo de vídeo removido do Colab: {filepath_for_upload}\")\n",
        "                append_log({\n",
        "                    \"sessao\": \"gravação\",\n",
        "                    \"evento\": \"limpeza_temp\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"ok\",\n",
        "                    \"detalhes\": f\"Arquivo de vídeo temporário removido: {filepath_for_upload}\"\n",
        "                })\n",
        "            except Exception as e:\n",
        "                print(f\"⚠️ Não foi possível remover o arquivo de vídeo temporário: {e}\")\n",
        "                append_log({\n",
        "                    \"sessao\": \"gravação\",\n",
        "                    \"evento\": \"limpeza_temp\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"erro\",\n",
        "                    \"detalhes\": f\"Não foi possível remover arquivo de vídeo temporário: {e}\"\n",
        "                })\n",
        "\n",
        "\n",
        "        # Limpeza do poster temporário (se ainda existir)\n",
        "        if poster_temp_path and os.path.exists(poster_temp_path):\n",
        "            try:\n",
        "                os.remove(poster_temp_path)\n",
        "                print(f\"🗑️ Poster temporário removido: {poster_temp_path}\")\n",
        "                append_log({\n",
        "                    \"sessao\": \"gravação\",\n",
        "                    \"evento\": \"limpeza_temp\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"ok\",\n",
        "                    \"detalhes\": f\"Poster temporário removido: {poster_temp_path}\"\n",
        "                })\n",
        "            except Exception as e:\n",
        "                print(f\"⚠️ Não foi possível remover o poster temporário: {e}\")\n",
        "                append_log({\n",
        "                    \"sessao\": \"gravação\",\n",
        "                    \"evento\": \"limpeza_temp\",\n",
        "                    \"id\": username,\n",
        "                    \"username\": username,\n",
        "                    \"status\": \"erro\",\n",
        "                    \"detalhes\": f\"Não foi possível remover poster temporário: {e}\"\n",
        "                })\n",
        "\n",
        "\n",
        "        # Return the final result dictionary\n",
        "        return {\n",
        "            'username': username,\n",
        "            'filename': filename_for_upload,\n",
        "            'filepath': filepath_for_upload, # This might be the deleted path, handle carefully downstream\n",
        "            'upload_success': upload_success,\n",
        "            'abyss_response': abyss_resp,\n",
        "            'slug': slug\n",
        "        }\n",
        "\n",
        "\n",
        "# ================================================================\n",
        "# Fim da Célula 7 — Gravação, Log (Centralizado) e Blacklist Inteligente\n",
        "# ================================================================\n",
        "\n",
        "# Observações e recomendações:\n",
        "# - AGORA UTILIZA O LOG CENTRALIZADO (Célula 1) para rastreabilidade de processamento, falhas e blacklist.\n",
        "# - Mensagens claras e detalhadas facilitam diagnóstico, CI/CD e manutenção.\n",
        "# - Pronto para execução concorrente e integração total com pipeline modular do XCam."
      ],
      "metadata": {
        "id": "eJ_jrfNgKZNr"
      },
      "id": "eJ_jrfNgKZNr",
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Célula 8: Upload para Abyss.to, Atualização do rec.json, Commit Poster e Sincronização com Google Drive\n",
        "\n",
        "**Objetivo:**  \n",
        "Realizar upload do vídeo gravado para Abyss.to, registrar e atualizar todos os metadados relevantes no arquivo `rec.json` do usuário, garantir a movimentação/renomeação adequada do poster e executar o commit/push automatizado de arquivos alterados, sincronizando também com o Google Drive.  \n",
        "O processo é otimizado para processamento em lote: os arquivos modificados só são enviados quando o número atingir o limiar (`COMMIT_PUSH_THRESHOLD`), promovendo eficiência e integridade do repositório, mesmo em execução paralela.\n",
        "\n",
        "---\n",
        "\n",
        "## Estratégia e melhorias implementadas\n",
        "\n",
        "- **Commit/push em lote otimizado:**  \n",
        "  Arquivos alterados são acumulados em um buffer. O commit e push são executados automaticamente apenas quando a quantidade de arquivos atinge o threshold configurado, reduzindo conflitos e otimizando o workflow CI/CD.\n",
        "- **Sincronização automática com o Google Drive:**  \n",
        "  Sempre que `rec.json` ou poster são atualizados, uma cópia é feita para o diretório correspondente do usuário no Google Drive (se disponível), garantindo redundância, persistência e facil acesso externo aos metadados e imagens.\n",
        "- **Atomicidade e segurança em concorrência:**  \n",
        "  O acesso ao buffer de commit é protegido por lock (`threading.Lock`), assegurando integridade mesmo em processamento paralelo ou múltiplos workers.\n",
        "- **Poster sempre correto e rastreável:**  \n",
        "  O poster utilizado é sempre movido/renomeado para o local definitivo e associado ao vídeo pelo nome (`slug`). O caminho é sincronizado tanto no repositório quanto no Drive.\n",
        "- **Atualização robusta do rec.json:**  \n",
        "  O histórico do usuário é preenchido com todos os campos, incluindo poster, urlIframe, data, horário e tempo formatado. O padrão da estrutura JSON é rigorosamente seguido, facilitando a integração, análise e exportação dos dados.\n",
        "- **Limpeza automática de arquivos temporários:**  \n",
        "  Após mover, copiar e commitar os arquivos, os temporários são removidos, mantendo o ambiente Colab limpo e eficiente.\n",
        "\n",
        "---\n",
        "\n",
        "## Como funciona o fluxo principal\n",
        "\n",
        "1. **Faz upload do vídeo para Abyss.to** e recebe a confirmação (slug, url, urlIframe).\n",
        "2. **Move/renomeia o poster** para o local definitivo no repositório, associando ao vídeo pelo slug.\n",
        "3. **Atualiza ou cria `rec.json`** do usuário, preenchendo todos os metadados da gravação.\n",
        "4. **Adiciona arquivos alterados ao buffer de commit** (com lock para evitar concorrência).\n",
        "5. **Sincroniza** `rec.json` e poster no Google Drive, mantendo redundância e facilidade de acesso.\n",
        "6. **Executa commit/push automático em lote** ao atingir o limiar definido; ao final do processamento faz o commit/push dos arquivos restantes.\n",
        "7. **Limpa arquivos temporários** garantindo eficiência e organização do ambiente.\n",
        "\n",
        "---\n",
        "\n",
        "## Exemplo de uso recomendado\n",
        "\n",
        "```python\n",
        "# Após concluir o upload e gerar poster:\n",
        "upload_success, abyss_response, slug = upload_to_abyss_and_update_json(\n",
        "    filepath=arquivo_video,\n",
        "    username=\"usuario\",\n",
        "    duration_seconds=duracao,\n",
        "    poster_temp_path=caminho_poster_temp\n",
        ")\n",
        "\n",
        "# Ao final do processamento, para garantir commit dos arquivos restantes:\n",
        "commit_push_restantes()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Segurança, rastreabilidade e integração\n",
        "\n",
        "- **Processo compatível com execução concorrente** e pipelines CI/CD.\n",
        "- **Commit/push protegido contra condições de corrida**, garantindo atomicidade dos dados no repositório.\n",
        "- **Sincronização Drive robusta**, ideal para ambientes colaborativos ou para garantir backup.\n",
        "- **Mensagens e logs claros** facilitam manutenção, auditoria e diagnóstico rápido em todo o pipeline XCam.\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "YjGKDlbIKaLs"
      },
      "id": "YjGKDlbIKaLs"
    },
    {
      "cell_type": "code",
      "source": [
        "# ================================================================\n",
        "# Célula 8: Upload para Abyss.to, Atualização do rec.json, Commit Poster, Sincronização com Google Drive\n",
        "# ================================================================\n",
        "# Objetivo:\n",
        "# - Fazer upload do vídeo gravado para Abyss.to e registrar corretamente os metadados.\n",
        "# - Atualizar/registrar informações no rec.json do usuário (histórico).\n",
        "# - Mover/renomear o poster para o local definitivo, sempre usando o novo poster válido (baixado ou gerado via ffmpeg).\n",
        "# - Acumular arquivos para commit/push e executar o envio ao atingir o threshold configurado, com segurança para execução concorrente (lock).\n",
        "# - Sincronizar rec.json e poster para o Google Drive (se montado).\n",
        "# - Limpar arquivos temporários após uso.\n",
        "# - Modular, preparado para CI/CD, concorrência e integração total ao pipeline XCam.\n",
        "# ================================================================\n",
        "\n",
        "\n",
        "# Lock global para garantir atomicidade do commit_buffer em cenários concorrentes\n",
        "commit_lock = threading.Lock()\n",
        "\n",
        "def upload_to_abyss_and_update_json(\n",
        "    filepath, username, duration_seconds, poster_temp_path=None,\n",
        "    commit_buffer=None, commit_threshold=None\n",
        "):\n",
        "    \"\"\"\n",
        "    Realiza upload do vídeo, atualiza rec.json do usuário, move/copia poster e organiza commit/push automático.\n",
        "    - Acumula arquivos para commit/push; executa envio quando atingir o threshold (ou imediatamente se threshold=0).\n",
        "    - Sincroniza rec.json e poster com o Google Drive.\n",
        "    - Limpa arquivos temporários após uso.\n",
        "    - Protege commit_buffer com lock para execução concorrente.\n",
        "    \"\"\"\n",
        "    file_name = os.path.basename(filepath)\n",
        "    file_type = 'video/mp4'\n",
        "    print(f\"⬆️ Upload de: {file_name} para Abyss.to...\")\n",
        "\n",
        "    upload_success = False\n",
        "    abyss_response = \"Upload falhou - Sem resposta\"\n",
        "    uploaded_url = None\n",
        "    video_id = None\n",
        "    slug = None\n",
        "\n",
        "    # Inicializa buffers se não enviados\n",
        "    if commit_buffer is None:\n",
        "        if not hasattr(upload_to_abyss_and_update_json, 'commit_buffer'):\n",
        "            upload_to_abyss_and_update_json.commit_buffer = []\n",
        "        commit_buffer = upload_to_abyss_and_update_json.commit_buffer\n",
        "\n",
        "    if commit_threshold is None:\n",
        "        global COMMIT_PUSH_THRESHOLD\n",
        "        commit_threshold = COMMIT_PUSH_THRESHOLD if 'COMMIT_PUSH_THRESHOLD' in globals() else 100\n",
        "\n",
        "    # ---- Upload do vídeo para Abyss.to ----\n",
        "    try:\n",
        "        with open(filepath, 'rb') as f:\n",
        "            files = { 'file': (file_name, f, file_type) }\n",
        "            response = requests.post(ABYSS_UPLOAD_URL, files=files)\n",
        "            resp_json = response.json()\n",
        "            abyss_response = resp_json\n",
        "            if resp_json.get('status'):\n",
        "                upload_success = True\n",
        "                uploaded_url = resp_json.get('url') or resp_json.get('urlIframe')\n",
        "                video_id = resp_json.get('slug') or resp_json.get('video')\n",
        "                slug = video_id\n",
        "                print(f\"📤 Upload bem-sucedido. URL: {uploaded_url} | SLUG: {slug}\")\n",
        "            else:\n",
        "                print(f\"❌ Falha no upload. Mensagem: {resp_json.get('message','')}\")\n",
        "    except Exception as e:\n",
        "        abyss_response = f\"Erro no upload: {e}\"\n",
        "        print(f\"❌ Erro no upload: {e}\")\n",
        "\n",
        "    poster_final_relpath = None\n",
        "    poster_final_path = None\n",
        "    poster_final_name = None\n",
        "\n",
        "    # ---- Move/renomeia o poster para o local correto do usuário ----\n",
        "    if upload_success and poster_temp_path and slug:\n",
        "        try:\n",
        "            user_folder = os.path.join(BASE_REPO_FOLDER, \"xcam-db\", \"user\", username)\n",
        "            os.makedirs(user_folder, exist_ok=True)\n",
        "            poster_final_name = f\"{slug}.jpg\"\n",
        "            poster_final_path = os.path.join(user_folder, poster_final_name)\n",
        "            os.rename(poster_temp_path, poster_final_path)\n",
        "            poster_final_relpath = os.path.relpath(poster_final_path, BASE_REPO_FOLDER)\n",
        "            print(f\"🖼️ Poster movido para {poster_final_path}\")\n",
        "            # Adiciona poster ao buffer de commit (com lock)\n",
        "            with commit_lock:\n",
        "                if poster_final_relpath not in commit_buffer:\n",
        "                    commit_buffer.append(poster_final_relpath)\n",
        "            # Copia poster para o Google Drive (opcional)\n",
        "            drive_user_dir = os.path.join(DRIVE_USER_BASE, username)\n",
        "            os.makedirs(drive_user_dir, exist_ok=True)\n",
        "            poster_drive_path = os.path.join(drive_user_dir, poster_final_name)\n",
        "            try:\n",
        "                shutil.copy2(poster_final_path, poster_drive_path)\n",
        "                print(f\"🗂️ Poster também salvo no Drive: {poster_drive_path}\")\n",
        "            except Exception as e:\n",
        "                print(f\"⚠️ Falha ao copiar poster para o Drive: {e}\")\n",
        "        except Exception as e:\n",
        "            print(f\"❌ Erro ao mover/renomear poster: {e}\")\n",
        "\n",
        "    # ---- Atualiza/Cria rec.json do usuário com os dados do vídeo ----\n",
        "    if upload_success:\n",
        "        try:\n",
        "            user_folder = os.path.join(BASE_REPO_FOLDER, \"xcam-db\", \"user\", username)\n",
        "            os.makedirs(user_folder, exist_ok=True)\n",
        "            json_filepath = os.path.join(user_folder, \"rec.json\")\n",
        "\n",
        "            file_base = file_name.replace('.mp4', '')\n",
        "            parts = file_base.split('_')\n",
        "            if len(parts) >= 4:\n",
        "                json_data = parts[-3]\n",
        "                json_horario = parts[-2]\n",
        "                json_tempo = parts[-1]\n",
        "            else:\n",
        "                now = datetime.now()\n",
        "                json_data = now.strftime(\"%d-%m-%Y\")\n",
        "                json_horario = now.strftime(\"%H-%M\")\n",
        "                json_tempo = format_seconds(duration_seconds)\n",
        "\n",
        "            poster_url = f\"https://db.xcam.gay/user/{username}/{slug}.jpg\" if slug else \"\"\n",
        "            url_iframe = f\"https://short.icu/{slug}?thumbnail={poster_url}\" if slug else \"\"\n",
        "\n",
        "            new_video_entry = {\n",
        "                \"video\": slug if slug else \"ID_não_retornado\",\n",
        "                \"title\": file_base,\n",
        "                \"file\": file_name,\n",
        "                \"url\": uploaded_url if uploaded_url else \"URL_não_retornada\",\n",
        "                \"poster\": poster_url,\n",
        "                \"urlIframe\": url_iframe,\n",
        "                \"data\": json_data,\n",
        "                \"horario\": json_horario,\n",
        "                \"tempo\": json_tempo\n",
        "            }\n",
        "\n",
        "            def zerar_base(username):\n",
        "                return {\n",
        "                    \"username\": username,\n",
        "                    \"records\": 0,\n",
        "                    \"videos\": []\n",
        "                }\n",
        "\n",
        "            # Carrega ou inicializa rec.json\n",
        "            if not os.path.exists(json_filepath):\n",
        "                rec_data = zerar_base(username)\n",
        "            else:\n",
        "                try:\n",
        "                    with open(json_filepath, 'r', encoding='utf-8') as f:\n",
        "                        loaded = json.load(f)\n",
        "                    valid = (\n",
        "                        isinstance(loaded, dict)\n",
        "                        and \"username\" in loaded\n",
        "                        and \"records\" in loaded\n",
        "                        and \"videos\" in loaded\n",
        "                        and isinstance(loaded[\"videos\"], list)\n",
        "                    )\n",
        "                    rec_data = loaded if valid else zerar_base(username)\n",
        "                except Exception:\n",
        "                    rec_data = zerar_base(username)\n",
        "\n",
        "            # Adiciona novo vídeo ao histórico\n",
        "            rec_data[\"records\"] += 1\n",
        "            rec_data[\"videos\"].append(new_video_entry)\n",
        "            with open(json_filepath, 'w', encoding='utf-8') as f:\n",
        "                json.dump(rec_data, f, indent=2, ensure_ascii=False)\n",
        "            print(f\"✅ rec.json para {username} atualizado em {json_filepath}\")\n",
        "\n",
        "            rel_json_path = os.path.relpath(json_filepath, BASE_REPO_FOLDER)\n",
        "            with commit_lock:\n",
        "                if rel_json_path not in commit_buffer:\n",
        "                    commit_buffer.append(rel_json_path)\n",
        "            # Copia rec.json para o Google Drive (opcional)\n",
        "            drive_user_dir = os.path.join(DRIVE_USER_BASE, username)\n",
        "            os.makedirs(drive_user_dir, exist_ok=True)\n",
        "            try:\n",
        "                shutil.copy2(json_filepath, os.path.join(drive_user_dir, \"rec.json\"))\n",
        "                print(f\"🗂️ rec.json também salvo no Drive: {os.path.join(drive_user_dir, 'rec.json')}\")\n",
        "            except Exception as e:\n",
        "                print(f\"⚠️ Falha ao copiar rec.json para o Drive: {e}\")\n",
        "        except Exception as e:\n",
        "            print(f\"❌ Erro ao atualizar rec.json: {e}\")\n",
        "            abyss_response = f\"Upload sucesso, erro no JSON: {e}\"\n",
        "\n",
        "    # ---- Commit/push automático ajustado ----\n",
        "    with commit_lock:\n",
        "        # Commit imediato se threshold for 0\n",
        "        if commit_threshold == 0 and len(commit_buffer) > 0:\n",
        "            print(f\"🚀 Commit/push automático IMEDIATO (threshold=0): {len(commit_buffer)} arquivos\")\n",
        "            try:\n",
        "                git_commit_and_push(commit_buffer, commit_message=\"Commit automático após processamento bem-sucedido\")\n",
        "            except Exception as e:\n",
        "                print(f\"❌ Falha no commit/push automático imediato: {e}\")\n",
        "            commit_buffer.clear()\n",
        "        # Commit em lote se threshold > 0\n",
        "        elif commit_threshold > 0 and len(commit_buffer) >= commit_threshold:\n",
        "            print(f\"🚀 Commit/push automático: {len(commit_buffer)} arquivos (threshold: {commit_threshold})\")\n",
        "            try:\n",
        "                git_commit_and_push(commit_buffer, commit_message=\"Atualiza arquivos em lote (threshold automático)\")\n",
        "            except Exception as e:\n",
        "                print(f\"❌ Falha no commit/push em lote: {e}\")\n",
        "            commit_buffer.clear()\n",
        "\n",
        "    # ---- Limpeza do arquivo de poster temporário, se sobrou ----\n",
        "    if poster_temp_path and os.path.exists(poster_temp_path):\n",
        "        try:\n",
        "            os.remove(poster_temp_path)\n",
        "            print(f\"🗑️ Poster temporário removido: {poster_temp_path}\")\n",
        "        except Exception as e:\n",
        "            print(f\"⚠️ Não foi possível remover o poster temporário: {e}\")\n",
        "\n",
        "    return upload_success, abyss_response, slug\n",
        "\n",
        "def commit_push_restantes():\n",
        "    \"\"\"\n",
        "    Realiza commit/push final de todos os arquivos pendentes no buffer.\n",
        "    O acesso ao buffer é protegido por lock para segurança em execução concorrente.\n",
        "    \"\"\"\n",
        "    buffer = getattr(upload_to_abyss_and_update_json, 'commit_buffer', None)\n",
        "    if buffer and len(buffer) > 0:\n",
        "        print(f\"🚀 Commit/push final de {len(buffer)} arquivos restantes\")\n",
        "        with commit_lock:\n",
        "            try:\n",
        "                git_commit_and_push(buffer, commit_message=\"Atualiza arquivos finais (commit final)\")\n",
        "            except Exception as e:\n",
        "                print(f\"❌ Falha no commit/push final em lote: {e}\")\n",
        "            buffer.clear()\n",
        "\n",
        "# ================================================================\n",
        "# FIM DA CÉLULA 8 — Upload, Metadados, Commit e Sincronização Drive\n",
        "# ================================================================\n",
        "\n",
        "# Observações:\n",
        "# - Funções projetadas para execução concorrente, CI/CD e automação robusta.\n",
        "# - Commit/push automático e seguro, com threshold customizável (lote ou imediato).\n",
        "# - Sincronização transparente com Google Drive quando disponível.\n",
        "# - Modularidade e comentários garantem fácil manutenção e evolução."
      ],
      "metadata": {
        "id": "vMTiCrJ5Kp81"
      },
      "id": "vMTiCrJ5Kp81",
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Célula 9: Processamento Automático, Paralelismo e Supervisor Dinâmico com Blacklist\n",
        "\n",
        "**Objetivo:**  \n",
        "Controlar e orquestrar todo o pipeline do notebook, garantindo processamento contínuo, paralelo, eficiente e seguro de transmissões ao vivo. O supervisor dinâmico mantém o lote sempre cheio, respeita a blacklist temporária e o log central, e integra todas as funções críticas das células anteriores, garantindo máxima resiliência e rastreabilidade.\n",
        "\n",
        "---\n",
        "\n",
        "## Estratégia e melhorias implementadas\n",
        "\n",
        "- **Paralelismo seguro e eficiente:**  \n",
        "  Utiliza múltiplos processos para gravar e processar transmissões simultaneamente, otimizando o uso de recursos e acelerando o processamento em lote.\n",
        "- **Supervisor dinâmico e lote sempre cheio:**  \n",
        "  O supervisor monitora constantemente as vagas livres no lote e preenche em tempo real com novas transmissões válidas, evitando ociosidade e maximizando a eficiência.\n",
        "- **Controle centralizado de duplicidade:**  \n",
        "  Antes de processar qualquer transmissão, consulta o log central de processamento para evitar duplicidade, mesmo em ambientes concorrentes ou paralelos.\n",
        "- **Respeito integral à blacklist temporária:**  \n",
        "  Transmissões de usuários em blacklist não são tentadas novamente durante o ciclo vigente, economizando recursos e evitando loops problemáticos.\n",
        "- **Logs robustos e detalhados:**  \n",
        "  Cada etapa do processamento é registrada com timestamp, status e contexto, facilitando auditoria, troubleshooting e acompanhamento em produção.\n",
        "- **Commit/push automático e seguro:**  \n",
        "  Ao final do ciclo (ou quando atingido o threshold), todos os arquivos alterados são enviados ao repositório, garantindo consistência e persistência dos dados.\n",
        "- **Design modular e Clean Architecture:**  \n",
        "  Funções separadas para supervisão, workers, busca, commit, log, etc., facilitando manutenção, reuso e integração com CI/CD.\n",
        "\n",
        "---\n",
        "\n",
        "## Como funciona o fluxo principal\n",
        "\n",
        "1. **Inicialização:**  \n",
        "   - Determina o modo de operação: gravação de usuários específicos ou busca automática.\n",
        "   - Calcula o tamanho do lote alvo (`LIMIT_DEFAULT` ou `API_SEARCH_LIMIT`).\n",
        "\n",
        "2. **Preenchimento do lote:**  \n",
        "   - Busca transmissões válidas (não duplicadas, não em blacklist) e lança workers para cada uma, registrando no log de processamento.\n",
        "   - Utiliza funções otimizadas de busca (`buscar_proxima_transmissao_livre` e `buscar_usuarios_especificos`), integradas à blacklist e ao log.\n",
        "\n",
        "3. **Supervisão dinâmica:**  \n",
        "   - Monitora o ciclo de vida dos workers/processos.\n",
        "   - Preenche imediatamente cada vaga livre com nova transmissão disponível, até esgotar as opções válidas.\n",
        "\n",
        "4. **Respeito à blacklist:**  \n",
        "   - Antes de qualquer gravação, verifica se o usuário está em blacklist temporária.\n",
        "   - Usuários problemáticos nunca são tentados duas vezes no mesmo ciclo.\n",
        "\n",
        "5. **Logs detalhados:**  \n",
        "   - Todas as operações geram logs padronizados com nível (INFO, WORKER, BUSCA, ERRO, etc.) e timestamp.\n",
        "\n",
        "6. **Finalização segura:**  \n",
        "   - Ao final do processamento, executa commit/push dos arquivos pendentes, garantindo persistência e integridade do repositório.\n",
        "\n",
        "---\n",
        "\n",
        "## Exemplo de uso recomendado\n",
        "\n",
        "```python\n",
        "# Função principal do notebook: dispara o supervisor dinâmico\n",
        "main()\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## Segurança, rastreabilidade e integração\n",
        "\n",
        "- **Pronto para execução concorrente e ambientes CI/CD.**\n",
        "- **A lógica de blacklist e commit está totalmente integrada ao fluxo, garantindo máxima resiliência.**\n",
        "- **Logs detalhados e arquitetura modular facilitam diagnóstico, manutenção e evolução do pipeline XCam.**\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "iwgt8f8iKq4y"
      },
      "id": "iwgt8f8iKq4y"
    },
    {
      "cell_type": "code",
      "source": [
        "# ================================================================\n",
        "# Célula 9: Supervisor Dinâmico — Execução Paralela, Lote Sempre Cheio, Blacklist e Log Centralizado\n",
        "# ================================================================\n",
        "# Objetivo:\n",
        "# - Manter o lote de gravações sempre cheio, preenchendo vagas em tempo real com máxima eficiência e segurança.\n",
        "# - Garantir que usuários problemáticos (em blacklist) não sejam tentados novamente no ciclo vigente.\n",
        "# - Prevenir duplicidade consultando log central de processamento antes de iniciar qualquer gravação.\n",
        "# - Integrar-se com a lógica de blacklist, commit/push automático, limpeza de recursos e log robusto.\n",
        "# - Modularidade e clareza, pronta para integração com pipelines CI/CD, execução concorrente e ambientes colaborativos.\n",
        "# ================================================================\n",
        "\n",
        "def log_supervisor(msg, level=\"INFO\"):\n",
        "    \"\"\"\n",
        "    Log supervisor padronizado para todas as etapas do pipeline.\n",
        "    \"\"\"\n",
        "    from datetime import datetime\n",
        "    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n",
        "    print(f\"[{timestamp}] [{level}] {msg}\")\n",
        "\n",
        "def worker(username, m3u8_url, poster_url, results):\n",
        "    \"\"\"\n",
        "    Worker dedicado: grava a stream, faz upload, atualiza rec.json/poster, integra ao log.\n",
        "    \"\"\"\n",
        "    log_supervisor(f\"Iniciando gravação: {username} | URL: {m3u8_url} | Poster: {poster_url}\", \"WORKER\")\n",
        "    result = gravar_stream(username, m3u8_url, poster_url)\n",
        "    log_supervisor(\n",
        "        f\"Finalizou gravação: {username} | Sucesso: {result.get('upload_success')} | \"\n",
        "        f\"Arquivo: {result.get('filename')} | Abyss: {result.get('abyss_response')}\", \"WORKER\")\n",
        "    results.append(result)\n",
        "\n",
        "def supervisor_dinamico(usuarios_especificos=None):\n",
        "    \"\"\"\n",
        "    Supervisor dinâmico de transmissões ao vivo:\n",
        "    - Mantém o lote de gravações sempre cheio, preenchendo vagas em tempo real.\n",
        "    - Evita duplicidade e concorrência consultando log central.\n",
        "    - Respeita blacklist temporária, não processando usuários bloqueados no ciclo vigente.\n",
        "    - Log detalhado e modular para diagnóstico, CI/CD e rastreabilidade.\n",
        "    \"\"\"\n",
        "\n",
        "    # Determina o tamanho do lote com base no modo operacional\n",
        "    pool_size = LIMIT_DEFAULT if not usuarios_especificos else API_SEARCH_LIMIT\n",
        "    running = []\n",
        "    results = Manager().list()\n",
        "    seen_usernames = set()\n",
        "    LOG_PROCESSAMENTO_PATH = \"/content/xcam_processing.log\"\n",
        "\n",
        "    log_supervisor(f\"Supervisor dinâmico iniciado | Lote alvo: {pool_size} | Modo: {'específico' if usuarios_especificos else 'automático'}\")\n",
        "\n",
        "    def atualizar_seen_usernames():\n",
        "        \"\"\"\n",
        "        Atualiza o conjunto de usernames já processados diretamente do log central.\n",
        "        Garante robustez em ambientes concorrentes e previne duplicidade.\n",
        "        \"\"\"\n",
        "        if os.path.exists(LOG_PROCESSAMENTO_PATH):\n",
        "            with open(LOG_PROCESSAMENTO_PATH, \"r\") as f:\n",
        "                log_set = set([line.strip() for line in f if line.strip()])\n",
        "                seen_usernames.update(log_set)\n",
        "\n",
        "    def buscar_nova_transmissao():\n",
        "        \"\"\"\n",
        "        Busca uma nova transmissão livre para preencher o lote:\n",
        "        - Modo específico: busca em lista fornecida.\n",
        "        - Modo automático: busca próxima transmissão livre disponível.\n",
        "        - Sempre consulta blacklist e log central antes de lançar.\n",
        "        \"\"\"\n",
        "        atualizar_seen_usernames()  # Sempre atualiza antes de buscar\n",
        "        if usuarios_especificos:\n",
        "            candidatos = buscar_usuarios_especificos(usuarios_especificos)\n",
        "            for s in candidatos:\n",
        "                username = s[\"username\"]\n",
        "                if username not in seen_usernames and not is_in_blacklist(username):\n",
        "                    log_supervisor(f\"Nova transmissão encontrada (específico): {username}\", \"BUSCA\")\n",
        "                    return s\n",
        "            log_supervisor(\"Nenhuma transmissão específica livre encontrada (todos em blacklist/log ou offline).\", \"BUSCA\")\n",
        "            return None\n",
        "        else:\n",
        "            # Busca otimizada: tenta até 10 vezes buscar próxima transmissão livre\n",
        "            for tentativa in range(1, 11):\n",
        "                log_supervisor(f\"Buscando próxima transmissão livre: tentativa {tentativa}\", \"BUSCA\")\n",
        "                stream = buscar_proxima_transmissao_livre()\n",
        "                if stream:\n",
        "                    username = stream[\"username\"]\n",
        "                    if username not in seen_usernames and not is_in_blacklist(username):\n",
        "                        log_supervisor(f\"Nova transmissão encontrada: {username}\", \"BUSCA\")\n",
        "                        return stream\n",
        "                    else:\n",
        "                        log_supervisor(f\"Usuário {username} já processado ou em blacklist, ignorando.\", \"BUSCA\")\n",
        "            log_supervisor(\"Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\", \"BUSCA\")\n",
        "            return None\n",
        "\n",
        "    # ========== Fase 1: Preenchimento do lote inicial ==========\n",
        "    log_supervisor(f\"Preenchendo lote inicial com até {pool_size} transmissões...\", \"STARTUP\")\n",
        "    tentativas = 0\n",
        "    max_tentativas = 100\n",
        "    while len(running) < pool_size and tentativas < max_tentativas:\n",
        "        stream = buscar_nova_transmissao()\n",
        "        if not stream:\n",
        "            log_supervisor(\"Fim das transmissões disponíveis para preencher lote inicial.\", \"STARTUP\")\n",
        "            break\n",
        "        username = stream[\"username\"]\n",
        "        seen_usernames.add(username)\n",
        "        # Escreve no log imediatamente para evitar duplicidade em concorrência antes do .start()\n",
        "        with open(LOG_PROCESSAMENTO_PATH, \"a\") as f:\n",
        "            f.write(f\"{username}\\n\")\n",
        "        log_supervisor(f\"Lançando processo para: {username} | {len(running)+1}/{pool_size}\", \"STARTUP\")\n",
        "        p = Process(target=worker, args=(username, stream[\"src\"], stream.get(\"poster\"), results))\n",
        "        running.append(p)\n",
        "        p.start()\n",
        "        tentativas += 1\n",
        "\n",
        "    log_supervisor(f\"Lote inicial lançado com {len(running)} transmissões.\", \"STARTUP\")\n",
        "\n",
        "    # ========== Fase 2: Loop dinâmico de preenchimento contínuo ==========\n",
        "    while True:\n",
        "        antes = len(running)\n",
        "        running = [p for p in running if p.is_alive()]\n",
        "        depois = len(running)\n",
        "        if antes != depois:\n",
        "            log_supervisor(f\"{antes-depois} gravações finalizaram. Vagas livres: {pool_size-len(running)}\", \"LOOP\")\n",
        "        vagas_livres = pool_size - len(running)\n",
        "        if vagas_livres > 0:\n",
        "            for _ in range(vagas_livres):\n",
        "                stream = buscar_nova_transmissao()\n",
        "                if not stream:\n",
        "                    log_supervisor(\"Não há mais transmissões para preencher as vagas livres.\", \"LOOP\")\n",
        "                    break\n",
        "                username = stream[\"username\"]\n",
        "                seen_usernames.add(username)\n",
        "                with open(LOG_PROCESSAMENTO_PATH, \"a\") as f:\n",
        "                    f.write(f\"{username}\\n\")\n",
        "                log_supervisor(f\"Lançando nova gravação: {username} | Vaga preenchida {len(running)+1}/{pool_size}\", \"LOOP\")\n",
        "                p = Process(target=worker, args=(username, stream[\"src\"], stream.get(\"poster\"), results))\n",
        "                running.append(p)\n",
        "                p.start()\n",
        "        if not running:\n",
        "            log_supervisor(\"Todas as transmissões possíveis já foram processadas!\", \"END\")\n",
        "            break\n",
        "        log_supervisor(\n",
        "            f\"Transmissões ativas: {len(running)} | Total processadas: {len(seen_usernames)} | Buffer de resultados: {len(results)}\",\n",
        "            \"STATUS\"\n",
        "        )\n",
        "        time.sleep(2)\n",
        "\n",
        "    # ========== Fase 3: Commit/push final e encerramento ==========\n",
        "    log_supervisor(f\"Processamento dinâmico concluído! Total de transmissões gravadas/processadas: {len(results)}\", \"RESUMO\")\n",
        "    try:\n",
        "        log_supervisor(\"Realizando commit/push final dos arquivos pendentes...\", \"FINALIZACAO\")\n",
        "        commit_push_restantes()\n",
        "        log_supervisor(\"Commit/push final executado com sucesso.\", \"FINALIZACAO\")\n",
        "    except Exception as e:\n",
        "        log_supervisor(f\"Falha ao tentar commit/push final dos arquivos restantes: {e}\", \"ERRO\")\n",
        "    log_supervisor(\"Supervisor dinâmico finalizado.\", \"END\")\n",
        "\n",
        "def main():\n",
        "    \"\"\"\n",
        "    Função principal: inicia o notebook perguntando se o usuário quer gravar transmissões específicas ou automáticas.\n",
        "    Dispara o supervisor dinâmico na modalidade selecionada.\n",
        "    \"\"\"\n",
        "    usuarios_especificos = perguntar_transmissoes_especificas()\n",
        "    log_supervisor(\"Iniciando busca e gravação de streams (supervisor dinâmico)...\", \"MAIN\")\n",
        "    supervisor_dinamico(usuarios_especificos=usuarios_especificos)\n",
        "\n",
        "if __name__ == '__main__':\n",
        "    try:\n",
        "        if 'google.colab' in str(get_ipython()):\n",
        "            main()\n",
        "        else:\n",
        "            print(\"Execute main() manualmente se desejar rodar fora do Colab.\")\n",
        "    except NameError:\n",
        "        print(\"Não está rodando em Colab/IPython. Execute main() se desejar.\")\n",
        "\n",
        "# ================================================================\n",
        "# FIM DA CÉLULA 9 — Supervisor Dinâmico, Lote Cheio e Blacklist\n",
        "# ================================================================\n",
        "\n",
        "# Observações e recomendações:\n",
        "# - Toda lógica de blacklist e commit está integrada para máxima resiliência e rastreabilidade.\n",
        "# - O log central de processamento é a fonte de verdade para sincronização entre workers/processos.\n",
        "# - Modularidade, logs claros e tratamento de erro garantem manutenção e evolução seguras.\n",
        "# - Pronto para ambientes colaborativos (Colab, CI/CD, pipelines paralelos)."
      ],
      "metadata": {
        "id": "5WKQV9g_LB9M",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0ec43c8e-e872-4916-ce07-81c70d9f7674"
      },
      "id": "5WKQV9g_LB9M",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;30;43mA saída de streaming foi truncada nas últimas 5000 linhas.\u001b[0m\n",
            "[2025-07-06 23:09:48] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:09:51] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:09:51] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [diego_lima69] Gravados: 15 min | Restantes: 198 min | Tempo total: 15m — 📊 7.0% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 11 min | Restantes: 202 min | Tempo total: 11m3s — 📊 5.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:09:54] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:09:54] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [flynn13] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m1s — 📊 8.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:09:57] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:09:57] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [TylerBloom] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m1s — 📊 11.3% concluído\n",
            "⏱️ [mikealcorleone] Gravados: 10 min | Restantes: 203 min | Tempo total: 10m1s — 📊 4.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Drill_Boys] Gravados: 8 min | Restantes: 205 min | Tempo total: 8m3s — 📊 3.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:00] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:00] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Tyler_price] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m3s — 📊 8.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [roger1898] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:03] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:03] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:04] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:04] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [VinntT] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m — 📊 11.3% concluído\n",
            "⏱️ [tentationdivine] Gravados: 14 min | Restantes: 199 min | Tempo total: 14m1s — 📊 6.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:07] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:07] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [brankello2] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m1s — 📊 8.5% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:09] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:09] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ilkbir] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:12] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:12] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m1s — 📊 10.8% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:14] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:14] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:10:14] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:10:14] [STATUS] Transmissões ativas: 25 | Total processadas: 34 | Buffer de resultados: 9\n",
            "[2025-07-06 23:10:16] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Steven0807] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m3s — 📊 9.4% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:19] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:19] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [newboy69_hot] Gravados: 13 min | Restantes: 200 min | Tempo total: 13m — 📊 6.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:22] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:22] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:23] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:23] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:26] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:26] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:28] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:28] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [alerrandroo1] Gravados: 9 min | Restantes: 204 min | Tempo total: 9m3s — 📊 4.2% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:29] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:29] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:33] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:33] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:36] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:36] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Dakra009] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:38] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:38] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [BenBlaze] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m2s — 📊 8.5% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:40] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:40] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:10:40] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:10:40] [STATUS] Transmissões ativas: 25 | Total processadas: 34 | Buffer de resultados: 9\n",
            "⏱️ [nainarevlis] Gravados: 9 min | Restantes: 204 min | Tempo total: 9m1s — 📊 4.2% concluído\n",
            "[2025-07-06 23:10:42] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ADAM_HYUGA] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m1s — 📊 11.7% concluído\n",
            "⏱️ [classied3] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 16 min | Restantes: 197 min | Tempo total: 16m1s — 📊 7.5% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:45] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:45] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [peterhun] Gravados: 9 min | Restantes: 204 min | Tempo total: 9m1s — 📊 4.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [dimitri_coleman] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m — 📊 8.5% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:48] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:48] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [LCSCERQ] Gravados: 12 min | Restantes: 201 min | Tempo total: 12m1s — 📊 5.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:51] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:51] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [diego_lima69] Gravados: 16 min | Restantes: 197 min | Tempo total: 16m — 📊 7.5% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:55] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:55] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [flynn13] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m1s — 📊 8.9% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:10:57] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:10:57] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [mikealcorleone] Gravados: 11 min | Restantes: 202 min | Tempo total: 11m3s — 📊 5.2% concluído\n",
            "⏱️ [TylerBloom] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m1s — 📊 11.7% concluído\n",
            "⏱️ [VinntT] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m52s — 📊 11.7% concluído\n",
            "✅ Duração real do arquivo gravado: 1490s (ffprobe)\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Drill_Boys] Gravados: 9 min | Restantes: 204 min | Tempo total: 9m1s — 📊 4.2% concluído\n",
            "✅ Arquivo renomeado para: VinntT_06-07-2025_22-46_24m50s.mp4\n",
            "⬆️ Upload de: VinntT_06-07-2025_22-46_24m50s.mp4 para Abyss.to...\n",
            "⏱️ [Tyler_price] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m — 📊 8.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:00] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:00] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:03] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:03] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:04] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:04] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [roger1898] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m3s — 📊 12.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 15 min | Restantes: 198 min | Tempo total: 15m1s — 📊 7.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:07] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:07] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [brankello2] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m — 📊 8.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [giannandblake] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m23s — 📊 9.1% concluído\n",
            "✅ Duração real do arquivo gravado: 1128s (ffprobe)\n",
            "✅ Arquivo renomeado para: giannandblake_06-07-2025_22-51_18m48s.mp4\n",
            "⬆️ Upload de: giannandblake_06-07-2025_22-51_18m48s.mp4 para Abyss.to...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:10] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:10] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:11:10] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:11:10] [STATUS] Transmissões ativas: 25 | Total processadas: 34 | Buffer de resultados: 9\n",
            "⏱️ [ilkbir] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m — 📊 12.2% concluído\n",
            "[2025-07-06 23:11:12] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m1s — 📊 11.3% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:15] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:15] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Steven0807] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:17] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:17] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [newboy69_hot] Gravados: 14 min | Restantes: 199 min | Tempo total: 14m — 📊 6.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:21] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:21] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:22] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:22] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:23] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:23] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:26] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:26] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [alerrandroo1] Gravados: 10 min | Restantes: 203 min | Tempo total: 10m1s — 📊 4.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:29] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:29] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:31] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:31] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:33] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:33] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "📤 Upload bem-sucedido. URL: https://short.icu/DzlSB1QG5 | SLUG: DzlSB1QG5\n",
            "🖼️ Poster movido para /content/XCam/xcam-db/user/VinntT/DzlSB1QG5.jpg\n",
            "🗂️ Poster também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/VinntT/DzlSB1QG5.jpg\n",
            "✅ rec.json para VinntT atualizado em /content/XCam/xcam-db/user/VinntT/rec.json\n",
            "🗂️ rec.json também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/VinntT/rec.json\n",
            "🗑️ Arquivo de vídeo removido do Colab: /content/temp_recordings/VinntT_06-07-2025_22-46_24m50s.mp4\n",
            "[2025-07-06 23:11:34] [WORKER] Finalizou gravação: VinntT | Sucesso: True | Arquivo: VinntT_06-07-2025_22-46_24m50s.mp4 | Abyss: {'status': True, 'msg': 'Complete', 'slug': 'DzlSB1QG5', 'urlIframe': 'https://short.icu/DzlSB1QG5'}\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Dakra009] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m — 📊 12.2% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:37] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:37] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:11:37] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:11:37] [STATUS] Transmissões ativas: 25 | Total processadas: 34 | Buffer de resultados: 10\n",
            "[2025-07-06 23:11:39] [LOOP] 1 gravações finalizaram. Vagas livres: 26\n",
            "[2025-07-06 23:11:39] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:40] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:40] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [BenBlaze] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m6s — 📊 9.0% concluído\n",
            "⏱️ [nainarevlis] Gravados: 10 min | Restantes: 203 min | Tempo total: 10m4s — 📊 4.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:43] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:43] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 17 min | Restantes: 196 min | Tempo total: 17m1s — 📊 8.0% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m3s — 📊 12.2% concluído⏱️ [classied3] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m1s — 📊 10.3% concluído\n",
            "\n",
            "⏱️ [peterhun] Gravados: 10 min | Restantes: 203 min | Tempo total: 10m1s — 📊 4.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:46] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:46] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [dimitri_coleman] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m1s — 📊 8.9% concluído\n",
            "📤 Upload bem-sucedido. URL: https://short.icu/vnvkuAZOc | SLUG: vnvkuAZOc\n",
            "🖼️ Poster movido para /content/XCam/xcam-db/user/giannandblake/vnvkuAZOc.jpg\n",
            "🗂️ Poster também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/giannandblake/vnvkuAZOc.jpg\n",
            "✅ rec.json para giannandblake atualizado em /content/XCam/xcam-db/user/giannandblake/rec.json\n",
            "🗂️ rec.json também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/giannandblake/rec.json\n",
            "🗑️ Arquivo de vídeo removido do Colab: /content/temp_recordings/giannandblake_06-07-2025_22-51_18m48s.mp4\n",
            "[2025-07-06 23:11:48] [WORKER] Finalizou gravação: giannandblake | Sucesso: True | Arquivo: giannandblake_06-07-2025_22-51_18m48s.mp4 | Abyss: {'status': True, 'msg': 'Complete', 'slug': 'vnvkuAZOc', 'urlIframe': 'https://short.icu/vnvkuAZOc'}\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [LCSCERQ] Gravados: 13 min | Restantes: 200 min | Tempo total: 13m1s — 📊 6.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:50] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:50] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:52] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:52] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [diego_lima69] Gravados: 17 min | Restantes: 196 min | Tempo total: 17m2s — 📊 8.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:55] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:55] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [flynn13] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m1s — 📊 9.4% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [mikealcorleone] Gravados: 12 min | Restantes: 201 min | Tempo total: 12m2s — 📊 5.6% concluído\n",
            "⏱️ [Drill_Boys] Gravados: 10 min | Restantes: 203 min | Tempo total: 10m1s — 📊 4.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:11:58] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:11:58] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [TylerBloom] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m1s — 📊 12.2% concluído\n",
            "⏱️ [Tyler_price] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m3s — 📊 9.4% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:00] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:00] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:03] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:03] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [roger1898] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m1s — 📊 12.7% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:04] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:04] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:12:04] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:12:04] [STATUS] Transmissões ativas: 24 | Total processadas: 34 | Buffer de resultados: 11\n",
            "⏱️ [tentationdivine] Gravados: 16 min | Restantes: 197 min | Tempo total: 16m3s — 📊 7.5% concluído\n",
            "[2025-07-06 23:12:06] [LOOP] 1 gravações finalizaram. Vagas livres: 27\n",
            "[2025-07-06 23:12:06] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:08] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:08] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ilkbir] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m — 📊 12.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [brankello2] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m1s — 📊 9.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:11] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:11] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:12] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:12] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:14] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:14] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m3s — 📊 11.8% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:16] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:16] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Steven0807] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m1s — 📊 10.3% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:17] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:17] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [newboy69_hot] Gravados: 15 min | Restantes: 198 min | Tempo total: 15m — 📊 7.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:21] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:21] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:22] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:22] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:25] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:25] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:27] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:27] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:12:27] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:12:27] [STATUS] Transmissões ativas: 23 | Total processadas: 34 | Buffer de resultados: 11\n",
            "⏱️ [alerrandroo1] Gravados: 11 min | Restantes: 202 min | Tempo total: 11m1s — 📊 5.2% concluído\n",
            "[2025-07-06 23:12:29] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:31] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:31] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:34] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:34] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Dakra009] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m — 📊 12.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:37] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:37] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [BenBlaze] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m2s — 📊 9.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:41] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:41] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [nainarevlis] Gravados: 11 min | Restantes: 202 min | Tempo total: 11m1s — 📊 5.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [classied3] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m — 📊 10.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:43] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:43] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [peterhun] Gravados: 11 min | Restantes: 202 min | Tempo total: 11m1s — 📊 5.2% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m1s — 📊 12.7% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m1s — 📊 8.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [dimitri_coleman] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m — 📊 9.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:46] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:46] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:49] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:49] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [LCSCERQ] Gravados: 14 min | Restantes: 199 min | Tempo total: 14m1s — 📊 6.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:52] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:52] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [diego_lima69] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m — 📊 8.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:54] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:54] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [flynn13] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [TylerBloom] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m1s — 📊 12.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:12:57] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:12:57] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:12:57] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:12:57] [STATUS] Transmissões ativas: 23 | Total processadas: 34 | Buffer de resultados: 11\n",
            "⏱️ [Tyler_price] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m — 📊 9.9% concluído\n",
            "⏱️ [mikealcorleone] Gravados: 13 min | Restantes: 200 min | Tempo total: 13m2s — 📊 6.1% concluído\n",
            "⏱️ [mikealcorleone] Gravados: 13 min | Restantes: 200 min | Tempo total: 13m3s — 📊 6.1% concluído\n",
            "[2025-07-06 23:12:59] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "✅ Duração real do arquivo gravado: 786s (ffprobe)\n",
            "✅ Arquivo renomeado para: mikealcorleone_06-07-2025_22-59_13m6s.mp4\n",
            "⬆️ Upload de: mikealcorleone_06-07-2025_22-59_13m6s.mp4 para Abyss.to...\n",
            "⏱️ [Drill_Boys] Gravados: 11 min | Restantes: 202 min | Tempo total: 11m3s — 📊 5.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:02] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:02] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:04] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:04] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [roger1898] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m3s — 📊 13.2% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:05] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:05] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 17 min | Restantes: 196 min | Tempo total: 17m3s — 📊 8.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:08] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:08] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [brankello2] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "⏱️ [ilkbir] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:11] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:11] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Mariokurt] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m1s — 📊 12.2% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:14] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:14] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:17] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:17] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Steven0807] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m1s — 📊 10.8% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:18] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:18] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:19] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:19] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [newboy69_hot] Gravados: 16 min | Restantes: 197 min | Tempo total: 16m — 📊 7.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:23] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:23] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:13:23] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:13:23] [STATUS] Transmissões ativas: 23 | Total processadas: 34 | Buffer de resultados: 11\n",
            "📤 Upload bem-sucedido. URL: https://short.icu/PqSGwhfAZ | SLUG: PqSGwhfAZ\n",
            "🖼️ Poster movido para /content/XCam/xcam-db/user/mikealcorleone/PqSGwhfAZ.jpg\n",
            "🗂️ Poster também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/mikealcorleone/PqSGwhfAZ.jpg\n",
            "✅ rec.json para mikealcorleone atualizado em /content/XCam/xcam-db/user/mikealcorleone/rec.json\n",
            "🗂️ rec.json também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/mikealcorleone/rec.json\n",
            "🗑️ Arquivo de vídeo removido do Colab: /content/temp_recordings/mikealcorleone_06-07-2025_22-59_13m6s.mp4\n",
            "[2025-07-06 23:13:23] [WORKER] Finalizou gravação: mikealcorleone | Sucesso: True | Arquivo: mikealcorleone_06-07-2025_22-59_13m6s.mp4 | Abyss: {'status': True, 'msg': 'Complete', 'slug': 'PqSGwhfAZ', 'urlIframe': 'https://short.icu/PqSGwhfAZ'}\n",
            "[2025-07-06 23:13:25] [LOOP] 1 gravações finalizaram. Vagas livres: 28\n",
            "[2025-07-06 23:13:25] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:26] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:26] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:29] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:29] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [alerrandroo1] Gravados: 12 min | Restantes: 201 min | Tempo total: 12m1s — 📊 5.6% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:32] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:32] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:35] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:35] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Dakra009] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m1s — 📊 13.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:38] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:38] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [BenBlaze] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m2s — 📊 9.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:41] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:41] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:42] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:42] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:44] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:44] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [nainarevlis] Gravados: 12 min | Restantes: 201 min | Tempo total: 12m3s — 📊 5.7% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m1s — 📊 13.2% concluído\n",
            "⏱️ [classied3] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m1s — 📊 11.3% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m1s — 📊 8.9% concluído\n",
            "⏱️ [dimitri_coleman] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m — 📊 9.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:46] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:46] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [peterhun] Gravados: 12 min | Restantes: 201 min | Tempo total: 12m1s — 📊 5.6% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:48] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:48] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:13:48] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:13:48] [STATUS] Transmissões ativas: 22 | Total processadas: 34 | Buffer de resultados: 12\n",
            "⏱️ [LCSCERQ] Gravados: 15 min | Restantes: 198 min | Tempo total: 15m1s — 📊 7.1% concluído\n",
            "[2025-07-06 23:13:50] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:53] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:53] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [diego_lima69] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m — 📊 8.9% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:54] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:54] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [flynn13] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m3s — 📊 10.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:13:57] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:13:57] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [TylerBloom] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m1s — 📊 13.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Tyler_price] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m1s — 📊 10.3% concluído\n",
            "⏱️ [Drill_Boys] Gravados: 12 min | Restantes: 201 min | Tempo total: 12m1s — 📊 5.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:00] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:00] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:02] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:02] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [roger1898] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m — 📊 13.6% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:05] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:05] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m1s — 📊 8.5% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:08] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:08] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [brankello2] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m — 📊 10.3% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ilkbir] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m — 📊 13.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:11] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:11] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Mariokurt] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m2s — 📊 12.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:14] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:14] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Steven0807] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m — 📊 11.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:17] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:17] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:14:17] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:14:17] [STATUS] Transmissões ativas: 22 | Total processadas: 34 | Buffer de resultados: 12\n",
            "[2025-07-06 23:14:19] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [newboy69_hot] Gravados: 17 min | Restantes: 196 min | Tempo total: 17m — 📊 8.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:22] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:22] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:25] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:25] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [alerrandroo1] Gravados: 13 min | Restantes: 200 min | Tempo total: 13m1s — 📊 6.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:29] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:29] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:32] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:32] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:34] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:34] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Dakra009] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m1s — 📊 13.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:37] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:37] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [BenBlaze] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m2s — 📊 10.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:40] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:40] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [classied3] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:44] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:44] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ADAM_HYUGA] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m1s — 📊 13.6% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m1s — 📊 9.4% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 16 min | Restantes: 197 min | Tempo total: 16m1s — 📊 7.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [peterhun] Gravados: 13 min | Restantes: 200 min | Tempo total: 13m1s — 📊 6.1% concluído⏱️ [dimitri_coleman] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m — 📊 10.3% concluído\n",
            "\n",
            "⏱️ [nainarevlis] Gravados: 13 min | Restantes: 200 min | Tempo total: 13m2s — 📊 6.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:48] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:48] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:51] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:51] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:14:51] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:14:51] [STATUS] Transmissões ativas: 22 | Total processadas: 34 | Buffer de resultados: 12\n",
            "⏱️ [diego_lima69] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m — 📊 9.4% concluído\n",
            "[2025-07-06 23:14:53] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [flynn13] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m1s — 📊 10.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:56] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:56] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Drill_Boys] Gravados: 13 min | Restantes: 200 min | Tempo total: 13m2s — 📊 6.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Tyler_price] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m — 📊 10.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:14:59] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:14:59] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [TylerBloom] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m3s — 📊 13.6% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:00] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:00] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:04] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:04] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [roger1898] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m1s — 📊 8.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:07] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:07] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:08] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:08] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [brankello2] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m1s — 📊 10.8% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ilkbir] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m — 📊 14.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:12] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:12] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:15] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:15] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:18] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:18] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Steven0807] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m2s — 📊 11.8% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:21] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:21] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:15:21] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:15:21] [STATUS] Transmissões ativas: 22 | Total processadas: 34 | Buffer de resultados: 12\n",
            "⏱️ [newboy69_hot] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m — 📊 8.5% concluído\n",
            "[2025-07-06 23:15:23] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:26] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:26] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:30] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:30] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [alerrandroo1] Gravados: 14 min | Restantes: 199 min | Tempo total: 14m1s — 📊 6.6% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:32] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:32] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:35] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:35] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Dakra009] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "⏱️ [BenBlaze] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m2s — 📊 10.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:39] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:39] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:42] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:42] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [peterhun] Gravados: 14 min | Restantes: 199 min | Tempo total: 14m — 📊 6.6% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ADAM_HYUGA] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "⏱️ [classied3] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m1s — 📊 12.2% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:45] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:45] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [dimitri_coleman] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m1s — 📊 10.8% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 17 min | Restantes: 196 min | Tempo total: 17m3s — 📊 8.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:48] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:48] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:51] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:51] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [brankello2] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m41s — 📊 11.1% concluído\n",
            "✅ Duração real do arquivo gravado: 1386s (ffprobe)\n",
            "✅ Arquivo renomeado para: brankello2_06-07-2025_22-52_23m6s.mp4\n",
            "⬆️ Upload de: brankello2_06-07-2025_22-52_23m6s.mp4 para Abyss.to...\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:52] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:52] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:15:52] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:15:52] [STATUS] Transmissões ativas: 22 | Total processadas: 34 | Buffer de resultados: 12\n",
            "⏱️ [diego_lima69] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m — 📊 9.9% concluído\n",
            "⏱️ [flynn13] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m — 📊 11.3% concluído\n",
            "[2025-07-06 23:15:54] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:56] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:56] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [nainarevlis] Gravados: 14 min | Restantes: 199 min | Tempo total: 14m6s — 📊 6.6% concluído\n",
            "⏱️ [Tyler_price] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m — 📊 11.3% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:15:57] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:15:57] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [TylerBloom] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Drill_Boys] Gravados: 14 min | Restantes: 199 min | Tempo total: 14m2s — 📊 6.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:01] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:01] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:02] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:02] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [roger1898] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m2s — 📊 14.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:06] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:06] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [tentationdivine] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m1s — 📊 9.4% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:07] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:07] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:10] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:10] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ilkbir] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m1s — 📊 14.6% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:11] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:11] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Steven0807] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m2s — 📊 12.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Mariokurt] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m2s — 📊 13.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:15] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:15] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:18] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:18] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:16:18] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:16:18] [STATUS] Transmissões ativas: 22 | Total processadas: 34 | Buffer de resultados: 12\n",
            "[2025-07-06 23:16:20] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:21] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:21] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [newboy69_hot] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m — 📊 8.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:24] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:24] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:28] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:28] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [alerrandroo1] Gravados: 15 min | Restantes: 198 min | Tempo total: 15m2s — 📊 7.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "📤 Upload bem-sucedido. URL: https://short.icu/h3qhXkp5k | SLUG: h3qhXkp5k\n",
            "🖼️ Poster movido para /content/XCam/xcam-db/user/brankello2/h3qhXkp5k.jpg\n",
            "🗂️ Poster também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/brankello2/h3qhXkp5k.jpg\n",
            "✅ rec.json para brankello2 atualizado em /content/XCam/xcam-db/user/brankello2/rec.json\n",
            "🗂️ rec.json também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/brankello2/rec.json\n",
            "🗑️ Arquivo de vídeo removido do Colab: /content/temp_recordings/brankello2_06-07-2025_22-52_23m6s.mp4\n",
            "[2025-07-06 23:16:30] [WORKER] Finalizou gravação: brankello2 | Sucesso: True | Arquivo: brankello2_06-07-2025_22-52_23m6s.mp4 | Abyss: {'status': True, 'msg': 'Complete', 'slug': 'h3qhXkp5k', 'urlIframe': 'https://short.icu/h3qhXkp5k'}\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:30] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:30] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:33] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:33] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:34] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:34] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:37] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:37] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Dakra009] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m1s — 📊 14.6% concluído\n",
            "⏱️ [BenBlaze] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m2s — 📊 11.3% concluído🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:40] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:40] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [classied3] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m — 📊 12.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:43] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:43] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [peterhun] Gravados: 15 min | Restantes: 198 min | Tempo total: 15m — 📊 7.0% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m1s — 📊 14.6% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m2s — 📊 10.3% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:45] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:45] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:16:45] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:16:45] [STATUS] Transmissões ativas: 22 | Total processadas: 34 | Buffer de resultados: 13\n",
            "⏱️ [dimitri_coleman] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m1s — 📊 11.3% concluído\n",
            "[2025-07-06 23:16:47] [LOOP] 1 gravações finalizaram. Vagas livres: 29\n",
            "[2025-07-06 23:16:47] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [LCSCERQ] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m3s — 📊 8.5% concluído\n",
            "⏱️ [nainarevlis] Gravados: 15 min | Restantes: 198 min | Tempo total: 15m2s — 📊 7.1% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:48] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:48] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:51] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:51] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [diego_lima69] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m — 📊 10.3% concluído\n",
            "⏱️ [flynn13] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:54] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:54] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:56] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:56] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [TylerBloom] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m1s — 📊 14.6% concluído⏱️ [Tyler_price] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:16:58] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:16:58] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Drill_Boys] Gravados: 15 min | Restantes: 198 min | Tempo total: 15m2s — 📊 7.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:01] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:01] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [roger1898] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m4s — 📊 15.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:05] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:05] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:08] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:08] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:09] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:09] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ilkbir] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m1s — 📊 15.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:12] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:12] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:17:12] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:17:12] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 13\n",
            "⏱️ [Mariokurt] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m — 📊 14.1% concluído\n",
            "[2025-07-06 23:17:14] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:17] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:17] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Steven0807] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m2s — 📊 12.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:21] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:21] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [newboy69_hot] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m — 📊 9.4% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:24] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:24] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [alerrandroo1] Gravados: 16 min | Restantes: 197 min | Tempo total: 16m — 📊 7.5% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:27] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:27] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:29] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:29] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:32] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:32] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:36] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:36] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Dakra009] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m1s — 📊 15.0% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [BenBlaze] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:39] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:39] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m — 📊 10.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:42] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:42] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:44] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:44] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:17:44] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:17:44] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 13\n",
            "⏱️ [ADAM_HYUGA] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m1s — 📊 15.0% concluído\n",
            "⏱️ [peterhun] Gravados: 16 min | Restantes: 197 min | Tempo total: 16m — 📊 7.5% concluído\n",
            "⏱️ [nainarevlis] Gravados: 16 min | Restantes: 197 min | Tempo total: 16m6s — 📊 7.6% concluído\n",
            "⏱️ [classied3] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m4s — 📊 13.2% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m2s — 📊 8.9% concluído\n",
            "[2025-07-06 23:17:46] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [dimitri_coleman] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:49] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:49] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:52] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:52] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [diego_lima69] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m — 📊 10.8% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:53] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:53] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [flynn13] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m — 📊 12.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:56] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:56] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [TylerBloom] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m1s — 📊 15.0% concluído\n",
            "⏱️ [Tyler_price] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m2s — 📊 12.2% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:17:59] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:17:59] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Drill_Boys] Gravados: 16 min | Restantes: 197 min | Tempo total: 16m2s — 📊 7.5% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:02] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:02] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [roger1898] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m — 📊 15.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m — 📊 10.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:06] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:06] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:09] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:09] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:10] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:10] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ilkbir] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m1s — 📊 15.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Mariokurt] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m — 📊 14.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:13] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:13] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:18:13] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:18:13] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 13\n",
            "[2025-07-06 23:18:15] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Steven0807] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m2s — 📊 13.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:19] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:19] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [newboy69_hot] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:22] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:22] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:25] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:25] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [alerrandroo1] Gravados: 17 min | Restantes: 196 min | Tempo total: 17m2s — 📊 8.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:28] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:28] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:32] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:32] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:35] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:35] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Dakra009] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m1s — 📊 15.5% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:38] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:38] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [BenBlaze] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m1s — 📊 12.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:42] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:42] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [nainarevlis] Gravados: 17 min | Restantes: 196 min | Tempo total: 17m2s — 📊 8.0% concluído\n",
            "⏱️ [classied3] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m — 📊 13.6% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m — 📊 15.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m — 📊 11.3% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m — 📊 9.4% concluído\n",
            "⏱️ [dimitri_coleman] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m — 📊 12.2% concluído\n",
            "⏱️ [peterhun] Gravados: 17 min | Restantes: 196 min | Tempo total: 17m — 📊 8.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:45] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:45] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:47] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:47] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:18:47] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:18:47] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 13\n",
            "[2025-07-06 23:18:49] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:52] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:52] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [diego_lima69] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m — 📊 11.3% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:53] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:53] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [flynn13] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m2s — 📊 12.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:56] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:56] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:18:57] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:18:57] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Drill_Boys] Gravados: 17 min | Restantes: 196 min | Tempo total: 17m — 📊 8.0% concluído\n",
            "⏱️ [TylerBloom] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m1s — 📊 15.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Tyler_price] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m2s — 📊 12.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:01] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:01] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:02] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:02] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [roger1898] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m — 📊 16.0% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m — 📊 10.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:08] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:08] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:09] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:09] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ilkbir] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m1s — 📊 16.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:12] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:12] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m — 📊 15.0% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:13] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:13] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:19:13] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:19:13] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 13\n",
            "[2025-07-06 23:19:15] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Steven0807] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m2s — 📊 13.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:18] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:18] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:21] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:21] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [newboy69_hot] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m1s — 📊 10.3% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:22] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:22] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:26] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:26] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [alerrandroo1] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m — 📊 8.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:29] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:29] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:36] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:36] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Dakra009] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m1s — 📊 16.0% concluído\n",
            "⏱️ [BenBlaze] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m1s — 📊 12.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:39] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:39] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:40] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:40] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:43] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:43] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [nainarevlis] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m2s — 📊 8.5% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m2s — 📊 16.0% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m — 📊 9.9% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m2s — 📊 11.8% concluído\n",
            "⏱️ [classied3] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:44] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:44] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:19:44] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:19:44] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 13\n",
            "⏱️ [peterhun] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m2s — 📊 8.5% concluído\n",
            "[2025-07-06 23:19:46] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [dimitri_coleman] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m — 📊 12.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:50] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:50] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:53] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:53] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [diego_lima69] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [flynn13] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:56] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:56] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Steven0807] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m45s — 📊 14.0% concluído\n",
            "✅ Duração real do arquivo gravado: 1787s (ffprobe)\n",
            "✅ Arquivo renomeado para: Steven0807_06-07-2025_22-50_29m47s.mp4\n",
            "⬆️ Upload de: Steven0807_06-07-2025_22-50_29m47s.mp4 para Abyss.to...\n",
            "⏱️ [TylerBloom] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m1s — 📊 16.0% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Tyler_price] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:19:59] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:19:59] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Drill_Boys] Gravados: 18 min | Restantes: 195 min | Tempo total: 18m2s — 📊 8.5% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:02] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:02] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [roger1898] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m — 📊 16.4% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:04] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:04] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [tentationdivine] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m — 📊 11.3% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:08] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:08] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ilkbir] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m1s — 📊 16.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:12] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:12] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m — 📊 15.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:16] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:16] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:19] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:19] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:20:19] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:20:19] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 13\n",
            "⏱️ [newboy69_hot] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m1s — 📊 10.8% concluído\n",
            "[2025-07-06 23:20:21] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:24] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:24] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:26] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:26] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:28] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:28] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [alerrandroo1] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m2s — 📊 8.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:31] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:31] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:33] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:33] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:36] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:36] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Dakra009] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m1s — 📊 16.4% concluído\n",
            "⏱️ [BenBlaze] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m1s — 📊 13.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:39] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:39] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [nainarevlis] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m1s — 📊 8.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:42] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:42] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ADAM_HYUGA] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m — 📊 16.4% concluído\n",
            "⏱️ [classied3] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m — 📊 14.6% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m2s — 📊 12.2% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m — 📊 10.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:45] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:45] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [peterhun] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m — 📊 8.9% concluído⏱️ [dimitri_coleman] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:47] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:47] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:20:47] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:20:47] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 13\n",
            "[2025-07-06 23:20:49] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:51] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:51] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:54] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:54] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:55] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:55] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [flynn13] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m — 📊 13.6% concluído\n",
            "⏱️ [diego_lima69] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m1s — 📊 12.2% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:56] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:56] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Tyler_price] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m — 📊 13.6% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Drill_Boys] Gravados: 19 min | Restantes: 194 min | Tempo total: 19m3s — 📊 8.9% concluído\n",
            "⏱️ [TylerBloom] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m1s — 📊 16.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:20:59] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:20:59] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:02] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:02] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [roger1898] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m — 📊 16.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:05] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:05] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [tentationdivine] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:08] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:08] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:11] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:11] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ilkbir] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m1s — 📊 16.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Mariokurt] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m3s — 📊 16.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:14] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:14] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:21:14] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:21:14] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 13\n",
            "[2025-07-06 23:21:16] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:18] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:18] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "📤 Upload bem-sucedido. URL: https://short.icu/T6-TCFh0E | SLUG: T6-TCFh0E\n",
            "🖼️ Poster movido para /content/XCam/xcam-db/user/Steven0807/T6-TCFh0E.jpg\n",
            "🗂️ Poster também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/Steven0807/T6-TCFh0E.jpg\n",
            "✅ rec.json para Steven0807 atualizado em /content/XCam/xcam-db/user/Steven0807/rec.json\n",
            "🗂️ rec.json também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/Steven0807/rec.json\n",
            "🗑️ Arquivo de vídeo removido do Colab: /content/temp_recordings/Steven0807_06-07-2025_22-50_29m47s.mp4\n",
            "[2025-07-06 23:21:19] [WORKER] Finalizou gravação: Steven0807 | Sucesso: True | Arquivo: Steven0807_06-07-2025_22-50_29m47s.mp4 | Abyss: {'status': True, 'msg': 'Complete', 'slug': 'T6-TCFh0E', 'urlIframe': 'https://short.icu/T6-TCFh0E'}\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:19] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:19] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [newboy69_hot] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m1s — 📊 11.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:22] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:22] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:25] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:25] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [alerrandroo1] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m1s — 📊 9.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:28] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:28] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:30] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:30] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:34] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:34] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:36] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:36] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Dakra009] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m1s — 📊 16.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:38] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:38] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [BenBlaze] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m3s — 📊 13.6% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ADAM_HYUGA] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m — 📊 16.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:42] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:42] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:21:42] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:21:42] [STATUS] Transmissões ativas: 21 | Total processadas: 34 | Buffer de resultados: 14\n",
            "⏱️ [nainarevlis] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m1s — 📊 9.4% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m — 📊 12.7% concluído\n",
            "[2025-07-06 23:21:44] [LOOP] 1 gravações finalizaram. Vagas livres: 30\n",
            "[2025-07-06 23:21:44] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [peterhun] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m — 📊 9.4% concluído\n",
            "⏱️ [classied3] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m4s — 📊 15.1% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m — 📊 10.8% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [dimitri_coleman] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m1s — 📊 13.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:48] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:48] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:51] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:51] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [diego_lima69] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m1s — 📊 12.7% concluído\n",
            "⏱️ [flynn13] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m — 📊 14.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:21:57] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:21:57] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [TylerBloom] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m1s — 📊 16.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Tyler_price] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m — 📊 14.1% concluído\n",
            "⏱️ [Drill_Boys] Gravados: 20 min | Restantes: 193 min | Tempo total: 20m1s — 📊 9.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:00] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:00] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:03] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:03] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:06] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:06] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [tentationdivine] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m2s — 📊 12.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:10] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:10] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:11] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:11] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m1s — 📊 16.4% concluído\n",
            "⏱️ [ilkbir] Gravados: 37 min | Restantes: 176 min | Tempo total: 37m1s — 📊 17.4% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:14] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:14] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:15] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:15] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:22:15] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:22:15] [STATUS] Transmissões ativas: 20 | Total processadas: 34 | Buffer de resultados: 14\n",
            "[2025-07-06 23:22:18] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:19] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:19] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [newboy69_hot] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m1s — 📊 11.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:22] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:22] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:25] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:25] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:26] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:26] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:28] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:28] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [alerrandroo1] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:31] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:31] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Dakra009] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m58s — 📊 17.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "✅ Duração real do arquivo gravado: 2218s (ffprobe)\n",
            "✅ Arquivo renomeado para: Dakra009_06-07-2025_22-45_36m58s.mp4\n",
            "⬆️ Upload de: Dakra009_06-07-2025_22-45_36m58s.mp4 para Abyss.to...\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:35] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:35] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "⚠️ Ignorando linha inválida no log /content/xcam_master.log: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000... Erro: Expecting value: line 1 column 1 (char 0)\n",
            "⚠️ Ignorando linha inválida no log /content/xcam_master.log: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000... Erro: Expecting value: line 1 column 1 (char 0)\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [roger1898] Gravados: 37 min | Restantes: 176 min | Tempo total: 37m34s — 📊 17.6% concluído\n",
            "✅ Duração real do arquivo gravado: 2217s (ffprobe)\n",
            "⚠️ Ignorando linha inválida no log /content/xcam_master.log: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000... Erro: Expecting value: line 1 column 1 (char 0)\n",
            "✅ Arquivo renomeado para: roger1898_06-07-2025_22-45_36m57s.mp4\n",
            "⬆️ Upload de: roger1898_06-07-2025_22-45_36m57s.mp4 para Abyss.to...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:39] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:39] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [BenBlaze] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "⏱️ [nainarevlis] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m5s — 📊 9.9% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:40] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:40] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [classied3] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m — 📊 15.5% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 37 min | Restantes: 176 min | Tempo total: 37m — 📊 17.4% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m — 📊 11.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:43] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:43] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:22:43] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:22:43] [STATUS] Transmissões ativas: 20 | Total processadas: 34 | Buffer de resultados: 14\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "⏱️ [peterhun] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "[2025-07-06 23:22:45] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [dimitri_coleman] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:48] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:48] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:50] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:50] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:52] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:52] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [diego_lima69] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m1s — 📊 13.2% concluído\n",
            "⏱️ [flynn13] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m3s — 📊 14.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:22:56] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:22:56] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Tyler_price] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m — 📊 14.6% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [TylerBloom] Gravados: 37 min | Restantes: 176 min | Tempo total: 37m1s — 📊 17.4% concluído\n",
            "⏱️ [Drill_Boys] Gravados: 21 min | Restantes: 192 min | Tempo total: 21m1s — 📊 9.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:03] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:03] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:04] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:04] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [tentationdivine] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m — 📊 12.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:08] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:08] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ilkbir] Gravados: 38 min | Restantes: 175 min | Tempo total: 38m — 📊 17.8% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:11] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:11] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Mariokurt] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m1s — 📊 16.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:14] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:14] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:17] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:17] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:23:17] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:23:17] [STATUS] Transmissões ativas: 20 | Total processadas: 34 | Buffer de resultados: 14\n",
            "[2025-07-06 23:23:19] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:20] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:20] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [newboy69_hot] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m1s — 📊 12.2% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:22] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:22] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:26] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:26] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "📤 Upload bem-sucedido. URL: https://short.icu/A6SydjHOF | SLUG: A6SydjHOF\n",
            "🖼️ Poster movido para /content/XCam/xcam-db/user/Dakra009/A6SydjHOF.jpg\n",
            "🗂️ Poster também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/Dakra009/A6SydjHOF.jpg\n",
            "✅ rec.json para Dakra009 atualizado em /content/XCam/xcam-db/user/Dakra009/rec.json\n",
            "🗂️ rec.json também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/Dakra009/rec.json\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🗑️ Arquivo de vídeo removido do Colab: /content/temp_recordings/Dakra009_06-07-2025_22-45_36m58s.mp4\n",
            "[2025-07-06 23:23:27] [WORKER] Finalizou gravação: Dakra009 | Sucesso: True | Arquivo: Dakra009_06-07-2025_22-45_36m58s.mp4 | Abyss: {'status': True, 'msg': 'Complete', 'slug': 'A6SydjHOF', 'urlIframe': 'https://short.icu/A6SydjHOF'}\n",
            "⏱️ [alerrandroo1] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m1s — 📊 10.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:29] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:29] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:33] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:33] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "📤 Upload bem-sucedido. URL: https://short.icu/ZmAkUUHN8 | SLUG: ZmAkUUHN8\n",
            "🖼️ Poster movido para /content/XCam/xcam-db/user/roger1898/ZmAkUUHN8.jpg\n",
            "🗂️ Poster também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/roger1898/ZmAkUUHN8.jpg\n",
            "✅ rec.json para roger1898 atualizado em /content/XCam/xcam-db/user/roger1898/rec.json\n",
            "🗂️ rec.json também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/roger1898/rec.json\n",
            "🗑️ Arquivo de vídeo removido do Colab: /content/temp_recordings/roger1898_06-07-2025_22-45_36m57s.mp4\n",
            "[2025-07-06 23:23:36] [WORKER] Finalizou gravação: roger1898 | Sucesso: True | Arquivo: roger1898_06-07-2025_22-45_36m57s.mp4 | Abyss: {'status': True, 'msg': 'Complete', 'slug': 'ZmAkUUHN8', 'urlIframe': 'https://short.icu/ZmAkUUHN8'}\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:36] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:36] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [BenBlaze] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m1s — 📊 14.6% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:40] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:40] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [nainarevlis] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m3s — 📊 10.4% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:41] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:41] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ADAM_HYUGA] Gravados: 38 min | Restantes: 175 min | Tempo total: 38m — 📊 17.8% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m — 📊 13.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:44] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:44] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [classied3] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m1s — 📊 16.0% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:46] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:46] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:23:46] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:23:46] [STATUS] Transmissões ativas: 20 | Total processadas: 34 | Buffer de resultados: 16\n",
            "⏱️ [peterhun] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m1s — 📊 10.3% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m2s — 📊 11.8% concluído\n",
            "⏱️ [dimitri_coleman] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m — 📊 14.6% concluído\n",
            "[2025-07-06 23:23:48] [LOOP] 2 gravações finalizaram. Vagas livres: 32\n",
            "[2025-07-06 23:23:48] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:51] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:51] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [diego_lima69] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m1s — 📊 13.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:54] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:54] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Tyler_price] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m — 📊 15.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:23:57] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:23:57] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [TylerBloom] Gravados: 38 min | Restantes: 175 min | Tempo total: 38m1s — 📊 17.8% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [flynn13] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m6s — 📊 15.1% concluído\n",
            "⏱️ [Drill_Boys] Gravados: 22 min | Restantes: 191 min | Tempo total: 22m1s — 📊 10.3% concluído\n",
            "✅ Duração real do arquivo gravado: 1919s (ffprobe)\n",
            "✅ Arquivo renomeado para: flynn13_06-07-2025_22-51_31m59s.mp4\n",
            "⬆️ Upload de: flynn13_06-07-2025_22-51_31m59s.mp4 para Abyss.to...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:00] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:00] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:04] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:04] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [tentationdivine] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:07] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:07] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [ilkbir] Gravados: 39 min | Restantes: 174 min | Tempo total: 39m — 📊 18.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:11] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:11] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Mariokurt] Gravados: 37 min | Restantes: 176 min | Tempo total: 37m1s — 📊 17.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:14] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:14] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:17] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:17] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:21] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:21] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:24:21] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:24:21] [STATUS] Transmissões ativas: 18 | Total processadas: 34 | Buffer de resultados: 16\n",
            "[2025-07-06 23:24:23] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:24] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:24] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [newboy69_hot] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m3s — 📊 12.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:27] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:27] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [alerrandroo1] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m1s — 📊 10.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:34] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:34] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:37] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:37] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [BenBlaze] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m3s — 📊 15.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:41] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:41] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:43] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:43] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [nainarevlis] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m3s — 📊 10.8% concluído\n",
            "⏱️ [classied3] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m — 📊 16.4% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m — 📊 14.1% concluído\n",
            "📤 Upload bem-sucedido. URL: https://short.icu/vb3FKfio_ | SLUG: vb3FKfio_\n",
            "🖼️ Poster movido para /content/XCam/xcam-db/user/flynn13/vb3FKfio_.jpg\n",
            "🗂️ Poster também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/flynn13/vb3FKfio_.jpg\n",
            "✅ rec.json para flynn13 atualizado em /content/XCam/xcam-db/user/flynn13/rec.json\n",
            "🗂️ rec.json também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/flynn13/rec.json\n",
            "🗑️ Arquivo de vídeo removido do Colab: /content/temp_recordings/flynn13_06-07-2025_22-51_31m59s.mp4\n",
            "[2025-07-06 23:24:44] [WORKER] Finalizou gravação: flynn13 | Sucesso: True | Arquivo: flynn13_06-07-2025_22-51_31m59s.mp4 | Abyss: {'status': True, 'msg': 'Complete', 'slug': 'vb3FKfio_', 'urlIframe': 'https://short.icu/vb3FKfio_'}\n",
            "⏱️ [ADAM_HYUGA] Gravados: 39 min | Restantes: 174 min | Tempo total: 39m2s — 📊 18.3% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [LCSCERQ] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m — 📊 12.2% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:46] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:46] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [peterhun] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m1s — 📊 10.8% concluído\n",
            "⏱️ [dimitri_coleman] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m — 📊 15.0% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:49] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:49] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:52] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:52] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:53] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:53] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:24:53] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:24:53] [STATUS] Transmissões ativas: 18 | Total processadas: 34 | Buffer de resultados: 17\n",
            "⏱️ [diego_lima69] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "[2025-07-06 23:24:55] [LOOP] 1 gravações finalizaram. Vagas livres: 33\n",
            "[2025-07-06 23:24:55] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Tyler_price] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m — 📊 15.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [TylerBloom] Gravados: 39 min | Restantes: 174 min | Tempo total: 39m1s — 📊 18.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:24:58] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:24:58] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Drill_Boys] Gravados: 23 min | Restantes: 190 min | Tempo total: 23m1s — 📊 10.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:02] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:02] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:03] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:03] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:06] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:06] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m2s — 📊 13.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:09] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:09] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ilkbir] Gravados: 40 min | Restantes: 173 min | Tempo total: 40m — 📊 18.8% concluído\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [Mariokurt] Gravados: 38 min | Restantes: 175 min | Tempo total: 38m1s — 📊 17.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:12] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:12] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:15] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:15] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:18] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:18] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [newboy69_hot] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:20] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:20] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:23] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:23] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:25:23] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:25:23] [STATUS] Transmissões ativas: 17 | Total processadas: 34 | Buffer de resultados: 17\n",
            "[2025-07-06 23:25:25] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "⏱️ [alerrandroo1] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m — 📊 11.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:28] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:28] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:30] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:30] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para DanteeRomeo no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/DanteeRomeo_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:33] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:33] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ Stream offline ou não disponível para DanteeRomeo (status 404)\n",
            "❌ Não foi possível gerar poster válido via liveInfo para DanteeRomeo.\n",
            "🎬 Gerando poster com ffmpeg para coepretinxxx no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/coepretinxxx_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: coepretinxxx\n",
            "[2025-07-06 23:25:38] [BUSCA] Nova transmissão encontrada: coepretinxxx\n",
            "[2025-07-06 23:25:38] [LOOP] Lançando nova gravação: coepretinxxx | Vaga preenchida 18/50\n",
            "[2025-07-06 23:25:38] [WORKER] Iniciando gravação: coepretinxxx | URL: https://stackvaults-hls.xcdnpro.com/dd24d49d-fe4e-490e-9044-5876c9aad775/hls/as+78910cdf-ef0d-427a-b9ce-118b4e3b5840/index.m3u8 | Poster: /content/coepretinxxx_poster_ffmpeg.jpg\n",
            "\n",
            "🎬 Iniciando gravação de: coepretinxxx (URL: https://stackvaults-hls.xcdnpro.com/dd24d49d-fe4e-490e-9044-5876c9aad775/hls/as+78910cdf-ef0d-427a-b9ce-118b4e3b5840/index.m3u8) em /content/temp_recordings/coepretinxxx_20250706_232538_temp.mp4\n",
            "[2025-07-06 23:25:38] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [coepretinxxx] Gravados: 0 min | Restantes: 213 min | Tempo total: 0s — 📊 0.0% concluído\n",
            "🖼️ Poster baixado em: /content/DanteeRomeo_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: DanteeRomeo\n",
            "[2025-07-06 23:25:40] [BUSCA] Usuário DanteeRomeo já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:40] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [BenBlaze] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m3s — 📊 15.5% concluído\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [nainarevlis] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m3s — 📊 11.3% concluído\n",
            "⏱️ [classied3] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m1s — 📊 16.9% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 40 min | Restantes: 173 min | Tempo total: 40m — 📊 18.8% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m — 📊 14.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:25:44] [BUSCA] Nova transmissão encontrada: Mlkdotado200\n",
            "[2025-07-06 23:25:44] [LOOP] Lançando nova gravação: Mlkdotado200 | Vaga preenchida 19/50\n",
            "[2025-07-06 23:25:44] [WORKER] Iniciando gravação: Mlkdotado200 | URL: https://cam4-hls.xcdnpro.com/318/cam4-origin-live/Mlkdotado200-318-d04d4ae9-5bb7-48e6-942e-19cf43e4adb5_aac/playlist.m3u8 | Poster: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "\n",
            "🎬 Iniciando gravação de: Mlkdotado200 (URL: https://cam4-hls.xcdnpro.com/318/cam4-origin-live/Mlkdotado200-318-d04d4ae9-5bb7-48e6-942e-19cf43e4adb5_aac/playlist.m3u8) em /content/temp_recordings/Mlkdotado200_20250706_232544_temp.mp4\n",
            "⏱️ [peterhun] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m1s — 📊 11.3% concluído\n",
            "[2025-07-06 23:25:44] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [LCSCERQ] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m — 📊 12.7% concluído\n",
            "⏱️ [Mlkdotado200] Gravados: 0 min | Restantes: 213 min | Tempo total: 0s — 📊 0.0% concluído\n",
            "⏱️ [dimitri_coleman] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m — 📊 15.5% concluído\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Angelgarcia_2 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Angelgarcia_2_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:25:50] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:50] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Angelgarcia_2_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:25:53] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:25:53] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Angelgarcia_2 no segundo 7...\n",
            "⏱️ [diego_lima69] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m1s — 📊 14.6% concluído\n",
            "❌ ffmpeg não conseguiu gerar poster para Angelgarcia_2.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "[hls @ 0x5822949e3280] Skip ('#EXT-X-VERSION:3')\n",
            "[hls @ 0x5822949e3280] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/chunklist.m3u8' for reading\n",
            "[hls @ 0x5822949e3280] Skip ('#EXT-X-VERSION:3')\n",
            "[hls @ 0x5822949e3280] Skip ('#EXT-X-DISCONTINUITY-SEQUENCE:0')\n",
            "[hls @ 0x5822949e3280] Skip ('#EXT-SERVER:DISPLAY-TIME=\"Sun Jul 06 19:25:49 EDT 2025\",TIME=1751844349994')\n",
            "[hls @ 0x5822949e3280] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/media_4880.ts' for reading\n",
            "[hls @ 0x5822949e3280] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/media_4881.ts' for reading\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[https @ 0x582294db9bc0] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/media_4882.ts' for reading\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295585140] decode_slice_header error\n",
            "[h264 @ 0x582295585140] no frame!\n",
            "[hls @ 0x5822949e3280] decoding for stream 1 failed\n",
            "[hls @ 0x5822949e3280] Could not find codec parameters for stream 1 (Video: h264 ([27][0][0][0] / 0x001B), none): unspecified size\n",
            "Consider increasing the value for the 'analyzeduration' (0) and 'probesize' (5000000) options\n",
            "https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/playlist.m3u8: could not seek to position 11973.871\n",
            "Input #0, hls, from 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/playlist.m3u8':\n",
            "  Duration: N/A, start: 11966.871000, bitrate: N/A\n",
            "  Program 0 \n",
            "    Metadata:\n",
            "      variant_bitrate : 3181191\n",
            "  Stream #0:0: Data: timed_id3 (ID3  / 0x20334449)\n",
            "    Metadata:\n",
            "      variant_bitrate : 3181191\n",
            "  Stream #0:1: Video: h264 ([27][0][0][0] / 0x001B), none, 30 fps, 30 tbr, 90k tbn, 180k tbc\n",
            "    Metadata:\n",
            "      variant_bitrate : 3181191\n",
            "  Stream #0:2: Audio: aac (LC) ([15][0][0][0] / 0x000F), 48000 Hz, stereo, fltp\n",
            "    Metadata:\n",
            "      variant_bitrate : 3181191\n",
            "Stream mapping:\n",
            "  Stream #0:1 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "    Last message repeated 1 times\n",
            "[h264 @ 0x5822959c4c40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959c4c40] decode_slice_header error\n",
            "[h264 @ 0x5822959c4c40] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959efb00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959efb00] decode_slice_header error\n",
            "[h264 @ 0x5822959efb00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0c800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0c800] decode_slice_header error\n",
            "[h264 @ 0x582295b0c800] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a01800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a01800] decode_slice_header error\n",
            "[h264 @ 0x582295a01800] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a0fd80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a0fd80] decode_slice_header error\n",
            "[h264 @ 0x582295a0fd80] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0a7c0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0a7c0] decode_slice_header error\n",
            "[h264 @ 0x582295b0a7c0] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a1fc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a1fc0] decode_slice_header error\n",
            "[h264 @ 0x5822959a1fc0] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd3f00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd3f00] decode_slice_header error\n",
            "[h264 @ 0x582294dd3f00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b47e00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b47e00] decode_slice_header error\n",
            "[h264 @ 0x582295b47e00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x58229555ccc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x58229555ccc0] decode_slice_header error\n",
            "[h264 @ 0x58229555ccc0] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a6c700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a6c700] decode_slice_header error\n",
            "[h264 @ 0x582295a6c700] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd2980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd2980] decode_slice_header error\n",
            "[h264 @ 0x582294dd2980] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b73800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b73800] decode_slice_header error\n",
            "[h264 @ 0x582295b73800] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a8f00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a8f00] decode_slice_header error\n",
            "[h264 @ 0x5822959a8f00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a46400] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a46400] decode_slice_header error\n",
            "[h264 @ 0x582295a46400] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b28980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b28980] decode_slice_header error\n",
            "[h264 @ 0x582295b28980] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959c4c40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959c4c40] decode_slice_header error\n",
            "[h264 @ 0x5822959c4c40] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5822959efb00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959efb00] decode_slice_header error\n",
            "[h264 @ 0x5822959efb00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295b0c800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0c800] decode_slice_header error\n",
            "[h264 @ 0x582295b0c800] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295a01800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a01800] decode_slice_header error\n",
            "[h264 @ 0x582295a01800] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a0fd80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a0fd80] decode_slice_header error\n",
            "[h264 @ 0x582295a0fd80] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295b0a7c0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0a7c0] decode_slice_header error\n",
            "[h264 @ 0x582295b0a7c0] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a1fc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a1fc0] decode_slice_header error\n",
            "[h264 @ 0x5822959a1fc0] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd3f00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd3f00] decode_slice_header error\n",
            "[h264 @ 0x582294dd3f00] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295b47e00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b47e00] decode_slice_header error\n",
            "[h264 @ 0x582295b47e00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x58229555ccc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x58229555ccc0] decode_slice_header error\n",
            "[h264 @ 0x58229555ccc0] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295a6c700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a6c700] decode_slice_header error\n",
            "[h264 @ 0x582295a6c700] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582294dd2980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd2980] decode_slice_header error\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd2980] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b73800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b73800] decode_slice_header error\n",
            "[h264 @ 0x582295b73800] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a8f00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a8f00] decode_slice_header error\n",
            "[h264 @ 0x5822959a8f00] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295a46400] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a46400] decode_slice_header error\n",
            "[h264 @ 0x582295a46400] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295b28980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b28980] decode_slice_header error\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b28980] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5822959c4c40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959c4c40] decode_slice_header error\n",
            "[h264 @ 0x5822959c4c40] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5822959efb00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959efb00] decode_slice_header error\n",
            "[h264 @ 0x5822959efb00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295b0c800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0c800] decode_slice_header error\n",
            "[h264 @ 0x582295b0c800] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295a01800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a01800] decode_slice_header error\n",
            "[h264 @ 0x582295a01800] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295a0fd80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a0fd80] decode_slice_header error\n",
            "[h264 @ 0x582295a0fd80] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0a7c0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0a7c0] decode_slice_header error\n",
            "[h264 @ 0x582295b0a7c0] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5822959a1fc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a1fc0] decode_slice_header error\n",
            "[h264 @ 0x5822959a1fc0] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd3f00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd3f00] decode_slice_header error\n",
            "[h264 @ 0x582294dd3f00] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295b47e00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b47e00] decode_slice_header error\n",
            "[h264 @ 0x582295b47e00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x58229555ccc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x58229555ccc0] decode_slice_header error\n",
            "[h264 @ 0x58229555ccc0] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295a6c700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a6c700] decode_slice_header error\n",
            "[h264 @ 0x582295a6c700] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582294dd2980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582294dd2980] decode_slice_header error\n",
            "[h264 @ 0x582294dd2980] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b73800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b73800] decode_slice_header error\n",
            "[h264 @ 0x582295b73800] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5822959a8f00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959a8f00] decode_slice_header error\n",
            "[h264 @ 0x5822959a8f00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a46400] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295a46400] decode_slice_header error\n",
            "[h264 @ 0x582295a46400] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295b28980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b28980] decode_slice_header error\n",
            "[h264 @ 0x582295b28980] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5822959c4c40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959c4c40] decode_slice_header error\n",
            "[h264 @ 0x5822959c4c40] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5822959efb00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5822959efb00] decode_slice_header error\n",
            "[h264 @ 0x5822959efb00] no frame!\n",
            "[NULL @ 0x582295558700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x582295b0c800] non-existing PPS 0 referenced\n",
            "[h264 @ 0x582295b0c800] decode_slice_header error\n",
            "[h264 @ 0x582295b0c800] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "    Last message repeated 14 times\n",
            "[swscaler @ 0x5822967fc1c0] deprecated pixel format used, make sure you did set range correctly\n",
            "[https @ 0x582294da25c0] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/chunklist.m3u8' for reading\n",
            "[hls @ 0x5822949e3280] Skip ('#EXT-X-VERSION:3')\n",
            "[hls @ 0x5822949e3280] Skip ('#EXT-X-DISCONTINUITY-SEQUENCE:0')\n",
            "[hls @ 0x5822949e3280] Skip ('#EXT-SERVER:DISPLAY-TIME=\"Sun Jul 06 19:25:52 EDT 2025\",TIME=1751844352687')\n",
            "[https @ 0x582294db9bc0] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/media_4883.ts' for reading\n",
            "Output #0, image2, to '/content/Angelgarcia_2_poster_ffmpeg.jpg':\n",
            "  Metadata:\n",
            "    encoder         : Lavf58.76.100\n",
            "  Stream #0:0: Video: mjpeg, yuvj420p(pc, bt709, progressive), 1920x1080 [SAR 1:1 DAR 16:9], q=2-31, 200 kb/s, 30 fps, 30 tbn\n",
            "    Metadata:\n",
            "      variant_bitrate : 3181191\n",
            "      encoder         : Lavc58.134.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: N/A\n",
            "frame=    1 fps=0.6 q=2.0 Lsize=N/A time=00:00:00.03 bitrate=N/A speed=0.0184x    \n",
            "video:151kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "Conversion failed!\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Angelgarcia_2.\n",
            "⏱️ [Tyler_price] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m — 📊 16.0% concluído\n",
            "🎬 Gerando poster com ffmpeg para david37216 no segundo 7...\n",
            "⏱️ [TylerBloom] Gravados: 40 min | Restantes: 173 min | Tempo total: 40m1s — 📊 18.8% concluído\n",
            "⏱️ [Drill_Boys] Gravados: 24 min | Restantes: 189 min | Tempo total: 24m1s — 📊 11.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/david37216_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: david37216\n",
            "[2025-07-06 23:26:03] [BUSCA] Nova transmissão encontrada: david37216\n",
            "[2025-07-06 23:26:03] [LOOP] Lançando nova gravação: david37216 | Vaga preenchida 20/50\n",
            "[2025-07-06 23:26:03] [WORKER] Iniciando gravação: david37216 | URL: https://cam4-hls.xcdnpro.com/316/cam4-origin-live/david37216-316-5a91759a-8b53-49bc-acad-b7f7ae3a8a2c_aac/playlist.m3u8 | Poster: /content/david37216_poster_ffmpeg.jpg\n",
            "\n",
            "🎬 Iniciando gravação de: david37216 (URL: https://cam4-hls.xcdnpro.com/316/cam4-origin-live/david37216-316-5a91759a-8b53-49bc-acad-b7f7ae3a8a2c_aac/playlist.m3u8) em /content/temp_recordings/david37216_20250706_232603_temp.mp4\n",
            "[2025-07-06 23:26:03] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [david37216] Gravados: 0 min | Restantes: 213 min | Tempo total: 0s — 📊 0.0% concluído\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Angelgarcia_2_poster_temp.jpg\n",
            "⏱️ [tentationdivine] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "🎯 Transmissão livre encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:26:06] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:26:06] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Angelgarcia_2 no segundo 7...\n",
            "⏱️ [ilkbir] Gravados: 41 min | Restantes: 172 min | Tempo total: 41m — 📊 19.2% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Angelgarcia_2_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:26:11] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:26:11] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Angelgarcia_2 no segundo 7...\n",
            "⏱️ [Mariokurt] Gravados: 39 min | Restantes: 174 min | Tempo total: 39m1s — 📊 18.3% concluído\n",
            "⏱️ [newboy69_hot] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m — 📊 13.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Angelgarcia_2_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:26:21] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:26:21] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Angelgarcia_2 no segundo 7...\n",
            "⏱️ [alerrandroo1] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m — 📊 11.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Angelgarcia_2_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:26:29] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:26:29] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Angelgarcia_2_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:26:31] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:26:31] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Angelgarcia_2 no segundo 7...\n",
            "⏱️ [coepretinxxx] Gravados: 1 min | Restantes: 212 min | Tempo total: 1m — 📊 0.5% concluído\n",
            "❌ ffmpeg não conseguiu gerar poster para Angelgarcia_2.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "[hls @ 0x5a8ae9aad280] Skip ('#EXT-X-VERSION:3')\n",
            "[hls @ 0x5a8ae9aad280] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/chunklist.m3u8' for reading\n",
            "[hls @ 0x5a8ae9aad280] Skip ('#EXT-X-VERSION:3')\n",
            "[hls @ 0x5a8ae9aad280] Skip ('#EXT-X-DISCONTINUITY-SEQUENCE:0')\n",
            "[hls @ 0x5a8ae9aad280] Skip ('#EXT-SERVER:DISPLAY-TIME=\"Sun Jul 06 19:26:31 EDT 2025\",TIME=1751844391215')\n",
            "[hls @ 0x5a8ae9aad280] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/media_4897.ts' for reading\n",
            "[hls @ 0x5a8ae9aad280] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/media_4898.ts' for reading\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[https @ 0x5a8ae9e83bc0] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/media_4899.ts' for reading\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea64f140] decode_slice_header error\n",
            "[h264 @ 0x5a8aea64f140] no frame!\n",
            "[hls @ 0x5a8ae9aad280] decoding for stream 1 failed\n",
            "[hls @ 0x5a8ae9aad280] Could not find codec parameters for stream 1 (Video: h264 ([27][0][0][0] / 0x001B), none): unspecified size\n",
            "Consider increasing the value for the 'analyzeduration' (0) and 'probesize' (5000000) options\n",
            "https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/playlist.m3u8: could not seek to position 12014.959\n",
            "Input #0, hls, from 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/playlist.m3u8':\n",
            "  Duration: N/A, start: 12007.959000, bitrate: N/A\n",
            "  Program 0 \n",
            "    Metadata:\n",
            "      variant_bitrate : 3117403\n",
            "  Stream #0:0: Data: timed_id3 (ID3  / 0x20334449)\n",
            "    Metadata:\n",
            "      variant_bitrate : 3117403\n",
            "  Stream #0:1: Video: h264 ([27][0][0][0] / 0x001B), none, 30 fps, 30 tbr, 90k tbn, 180k tbc\n",
            "    Metadata:\n",
            "      variant_bitrate : 3117403\n",
            "  Stream #0:2: Audio: aac (LC) ([15][0][0][0] / 0x000F), 48000 Hz, stereo, fltp\n",
            "    Metadata:\n",
            "      variant_bitrate : 3117403\n",
            "Stream mapping:\n",
            "  Stream #0:1 -> #0:0 (h264 (native) -> mjpeg (native))\n",
            "Press [q] to stop, [?] for help\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "    Last message repeated 1 times\n",
            "[h264 @ 0x5a8aeab79780] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab79780] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab79780] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab94640] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab94640] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab94640] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaba4140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaba4140] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaba4140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea636d80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea636d80] decode_slice_header error\n",
            "[h264 @ 0x5a8aea636d80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7aa40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7aa40] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaa7aa40] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab39840] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab39840] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab39840] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab3a100] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab3a100] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab3a100] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab17ec0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab17ec0] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab17ec0] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd8cc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd8cc0] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabd8cc0] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab45f80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab45f80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab45f80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaaaad80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaaaad80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaaaad80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaadd980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaadd980] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaadd980] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7da00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7da00] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaa7da00] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab48f40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab48f40] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab48f40] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd4e80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd4e80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabd4e80] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabfe940] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabfe940] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabfe940] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab79780] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab79780] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab79780] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab94640] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab94640] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab94640] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeaba4140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaba4140] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaba4140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea636d80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea636d80] decode_slice_header error\n",
            "[h264 @ 0x5a8aea636d80] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7aa40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7aa40] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaa7aa40] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab39840] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab39840] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab39840] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab3a100] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab3a100] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab3a100] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab17ec0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab17ec0] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab17ec0] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeabd8cc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd8cc0] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabd8cc0] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab45f80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab45f80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab45f80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeaaaad80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaaaad80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaaaad80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaadd980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaadd980] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaadd980] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeaa7da00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7da00] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaa7da00] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab48f40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab48f40] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab48f40] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeabd4e80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd4e80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabd4e80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeabfe940] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabfe940] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabfe940] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab79780] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab79780] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab79780] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab94640] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab94640] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab94640] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeaba4140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaba4140] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaba4140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aea636d80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea636d80] decode_slice_header error\n",
            "[h264 @ 0x5a8aea636d80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7aa40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7aa40] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaa7aa40] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab39840] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab39840] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab39840] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab3a100] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab3a100] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab3a100] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab17ec0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab17ec0] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab17ec0] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd8cc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd8cc0] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabd8cc0] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab45f80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab45f80] decode_slice_header error\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab45f80] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeaaaad80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaaaad80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaaaad80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeaadd980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaadd980] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaadd980] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7da00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7da00] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaa7da00] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab48f40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab48f40] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab48f40] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeabd4e80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd4e80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabd4e80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeabfe940] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabfe940] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabfe940] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab79780] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab79780] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab79780] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab94640] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab94640] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab94640] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaba4140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaba4140] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaba4140] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aea636d80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea636d80] decode_slice_header error\n",
            "[h264 @ 0x5a8aea636d80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7aa40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7aa40] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaa7aa40] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab39840] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab39840] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab39840] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab3a100] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab3a100] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab3a100] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab17ec0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab17ec0] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab17ec0] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd8cc0] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd8cc0] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabd8cc0] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeab45f80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab45f80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab45f80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeaaaad80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaaaad80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaaaad80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaadd980] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaadd980] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaadd980] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeaa7da00] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaa7da00] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaa7da00] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab48f40] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab48f40] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab48f40] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeabd4e80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabd4e80] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabd4e80] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeabfe940] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeabfe940] decode_slice_header error\n",
            "[h264 @ 0x5a8aeabfe940] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab79780] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab79780] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab79780] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab94640] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeab94640] decode_slice_header error\n",
            "[h264 @ 0x5a8aeab94640] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aeaba4140] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aeaba4140] decode_slice_header error\n",
            "[h264 @ 0x5a8aeaba4140] no frame!\n",
            "[NULL @ 0x5a8aea622700] non-existing PPS 0 referenced\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "[h264 @ 0x5a8aea636d80] non-existing PPS 0 referenced\n",
            "[h264 @ 0x5a8aea636d80] decode_slice_header error\n",
            "[h264 @ 0x5a8aea636d80] no frame!\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "    Last message repeated 3 times\n",
            "[https @ 0x5a8ae9e6c5c0] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/chunklist.m3u8' for reading\n",
            "[hls @ 0x5a8ae9aad280] Skip ('#EXT-X-VERSION:3')\n",
            "[hls @ 0x5a8ae9aad280] Skip ('#EXT-X-DISCONTINUITY-SEQUENCE:0')\n",
            "[hls @ 0x5a8ae9aad280] Skip ('#EXT-SERVER:DISPLAY-TIME=\"Sun Jul 06 19:26:33 EDT 2025\",TIME=1751844393657')\n",
            "[https @ 0x5a8ae9e83bc0] Opening 'https://cam4-hls.xcdnpro.com/319/cam4-origin-live/Angelgarcia_2-319-78191cde-8f8f-435e-aad2-06af68595e5d_aac/media_4900.ts' for reading\n",
            "Error while decoding stream #0:1: Invalid data found when processing input\n",
            "    Last message repeated 10 times\n",
            "[swscaler @ 0x5a8aeb8c5180] deprecated pixel format used, make sure you did set range correctly\n",
            "Output #0, image2, to '/content/Angelgarcia_2_poster_ffmpeg.jpg':\n",
            "  Metadata:\n",
            "    encoder         : Lavf58.76.100\n",
            "  Stream #0:0: Video: mjpeg, yuvj420p(pc, bt709, progressive), 1920x1080 [SAR 1:1 DAR 16:9], q=2-31, 200 kb/s, 30 fps, 30 tbn\n",
            "    Metadata:\n",
            "      variant_bitrate : 3117403\n",
            "      encoder         : Lavc58.134.100 mjpeg\n",
            "    Side data:\n",
            "      cpb: bitrate max/min/avg: 0/0/200000 buffer size: 0 vbv_delay: N/A\n",
            "frame=    1 fps=0.7 q=2.0 Lsize=N/A time=00:00:00.03 bitrate=N/A dup=1 drop=1 speed=0.0221x    \n",
            "video:163kB audio:0kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: unknown\n",
            "Conversion failed!\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Angelgarcia_2.\n",
            "🎬 Gerando poster com ffmpeg para LoboDN no segundo 7...\n",
            "⏱️ [BenBlaze] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m2s — 📊 16.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/LoboDN_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: LoboDN\n",
            "[2025-07-06 23:26:40] [BUSCA] Nova transmissão encontrada: LoboDN\n",
            "[2025-07-06 23:26:40] [LOOP] Lançando nova gravação: LoboDN | Vaga preenchida 21/50\n",
            "[2025-07-06 23:26:40] [WORKER] Iniciando gravação: LoboDN | URL: https://cam4-hls.xcdnpro.com/322/cam4-origin-live/LoboDN-322-aadd7aa7-716e-4c77-a62d-457d3ab2b27e_aac/playlist.m3u8 | Poster: /content/LoboDN_poster_ffmpeg.jpg\n",
            "\n",
            "🎬 Iniciando gravação de: LoboDN (URL: https://cam4-hls.xcdnpro.com/322/cam4-origin-live/LoboDN-322-aadd7aa7-716e-4c77-a62d-457d3ab2b27e_aac/playlist.m3u8) em /content/temp_recordings/LoboDN_20250706_232640_temp.mp4\n",
            "[2025-07-06 23:26:40] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mlkdotado200] Gravados: 0 min | Restantes: 213 min | Tempo total: 0m56s — 📊 0.4% concluído\n",
            "✅ Duração real do arquivo gravado: 18s (ffprobe)\n",
            "⏩ Duração gravada (18s) menor que o mínimo (660s). Arquivo descartado.\n",
            "🗑️ Arquivo de vídeo curto removido: /content/temp_recordings/Mlkdotado200_20250706_232544_temp.mp4\n",
            "🗑️ Poster temporário removido (vídeo curto): /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "⏱️ [LoboDN] Gravados: 0 min | Restantes: 213 min | Tempo total: 0s — 📊 0.0% concluído\n",
            "[2025-07-06 23:26:41] [WORKER] Finalizou gravação: Mlkdotado200 | Sucesso: False | Arquivo: None | Abyss: Gravação muito curta (descartada)\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "⏱️ [nainarevlis] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m3s — 📊 11.8% concluído\n",
            "⏱️ [classied3] Gravados: 37 min | Restantes: 176 min | Tempo total: 37m — 📊 17.4% concluído\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Angelgarcia_2_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:26:44] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:26:44] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ADAM_HYUGA] Gravados: 41 min | Restantes: 172 min | Tempo total: 41m3s — 📊 19.3% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m1s — 📊 15.0% concluído\n",
            "⏱️ [peterhun] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m1s — 📊 11.7% concluído\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "⏱️ [LCSCERQ] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [dimitri_coleman] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m3s — 📊 16.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:26:48] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:26:48] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Angelgarcia_2 no segundo 7...\n",
            "⏱️ [diego_lima69] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m1s — 📊 15.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Angelgarcia_2_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:26:54] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:26:54] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Angelgarcia_2 no segundo 7...\n",
            "⏱️ [TylerBloom] Gravados: 41 min | Restantes: 172 min | Tempo total: 41m1s — 📊 19.3% concluído\n",
            "⏱️ [Tyler_price] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m — 📊 16.4% concluído\n",
            "⏱️ [Drill_Boys] Gravados: 25 min | Restantes: 188 min | Tempo total: 25m2s — 📊 11.8% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Angelgarcia_2_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:27:02] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:02] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [david37216] Gravados: 1 min | Restantes: 212 min | Tempo total: 1m1s — 📊 0.5% concluído\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🎬 Gerando poster com ffmpeg para Angelgarcia_2 no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m1s — 📊 14.6% concluído\n",
            "⏱️ [ilkbir] Gravados: 42 min | Restantes: 171 min | Tempo total: 42m — 📊 19.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Angelgarcia_2_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Angelgarcia_2\n",
            "[2025-07-06 23:27:11] [BUSCA] Usuário Angelgarcia_2 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:11] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 40 min | Restantes: 173 min | Tempo total: 40m — 📊 18.8% concluído\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:27:16] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:16] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de DanteeRomeo não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:27:20] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:20] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "⏱️ [newboy69_hot] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m2s — 📊 14.1% concluído\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:27:26] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:26] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [alerrandroo1] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m — 📊 12.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:27:30] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:30] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:27:35] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:35] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:27:35] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:27:35] [STATUS] Transmissões ativas: 21 | Total processadas: 38 | Buffer de resultados: 18\n",
            "[2025-07-06 23:27:37] [LOOP] 1 gravações finalizaram. Vagas livres: 30\n",
            "[2025-07-06 23:27:37] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [coepretinxxx] Gravados: 2 min | Restantes: 211 min | Tempo total: 2m2s — 📊 1.0% concluído\n",
            "⏱️ [BenBlaze] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m2s — 📊 16.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:27:41] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:41] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [LoboDN] Gravados: 1 min | Restantes: 212 min | Tempo total: 1m1s — 📊 0.5% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 42 min | Restantes: 171 min | Tempo total: 42m1s — 📊 19.7% concluído\n",
            "⏱️ [LCSCERQ] Gravados: 29 min | Restantes: 184 min | Tempo total: 29m — 📊 13.6% concluído\n",
            "⏱️ [nainarevlis] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m5s — 📊 12.2% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m1s — 📊 15.5% concluído\n",
            "⏱️ [peterhun] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m1s — 📊 12.2% concluído\n",
            "⏱️ [classied3] Gravados: 38 min | Restantes: 175 min | Tempo total: 38m1s — 📊 17.8% concluído\n",
            "⏱️ [dimitri_coleman] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m1s — 📊 16.4% concluído\n",
            "⚠️ Erro de conexão ao acessar stream de Steven0807: HTTPSConnectionPool(host='stackvaults-hls.xcdnpro.com', port=443): Read timed out. (read timeout=5)\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Mlkdotado200_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Mlkdotado200\n",
            "[2025-07-06 23:27:48] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:48] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Mlkdotado200_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Mlkdotado200\n",
            "[2025-07-06 23:27:53] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:53] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [diego_lima69] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m — 📊 15.5% concluído\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [Tyler_price] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m — 📊 16.9% concluído\n",
            "⏱️ [TylerBloom] Gravados: 42 min | Restantes: 171 min | Tempo total: 42m1s — 📊 19.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:27:58] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:27:58] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Drill_Boys] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m2s — 📊 12.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Mlkdotado200_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:00] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:00] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [david37216] Gravados: 2 min | Restantes: 211 min | Tempo total: 2m1s — 📊 0.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:05] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:05] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m1s — 📊 15.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:09] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:09] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [ilkbir] Gravados: 43 min | Restantes: 170 min | Tempo total: 43m — 📊 20.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Mlkdotado200_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:11] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:11] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 41 min | Restantes: 172 min | Tempo total: 41m — 📊 19.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:15] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:15] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:19] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:19] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:28:19] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:28:19] [STATUS] Transmissões ativas: 20 | Total processadas: 38 | Buffer de resultados: 18\n",
            "⏱️ [newboy69_hot] Gravados: 31 min | Restantes: 182 min | Tempo total: 31m — 📊 14.6% concluído\n",
            "[2025-07-06 23:28:21] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:25] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:25] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [alerrandroo1] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m — 📊 12.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:29] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:29] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Mlkdotado200_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:32] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:32] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [coepretinxxx] Gravados: 3 min | Restantes: 210 min | Tempo total: 3m — 📊 1.4% concluído\n",
            "⏱️ [peterhun] Gravados: 26 min | Restantes: 187 min | Tempo total: 26m52s — 📊 12.6% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:37] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:37] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "✅ Duração real do arquivo gravado: 1602s (ffprobe)\n",
            "✅ Arquivo renomeado para: peterhun_06-07-2025_23-01_26m42s.mp4\n",
            "⬆️ Upload de: peterhun_06-07-2025_23-01_26m42s.mp4 para Abyss.to...\n",
            "⏱️ [LoboDN] Gravados: 2 min | Restantes: 211 min | Tempo total: 2m — 📊 0.9% concluído\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Mlkdotado200_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:39] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:39] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [BenBlaze] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m4s — 📊 16.9% concluído\n",
            "⏱️ [nainarevlis] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m1s — 📊 12.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [classied3] Gravados: 39 min | Restantes: 174 min | Tempo total: 39m — 📊 18.3% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:43] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:43] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m1s — 📊 16.0% concluído\n",
            "⏱️ [ADAM_HYUGA] Gravados: 43 min | Restantes: 170 min | Tempo total: 43m1s — 📊 20.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [dimitri_coleman] Gravados: 36 min | Restantes: 177 min | Tempo total: 36m1s — 📊 16.9% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:48] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:48] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [LCSCERQ] Gravados: 30 min | Restantes: 183 min | Tempo total: 30m1s — 📊 14.1% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:52] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:52] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [diego_lima69] Gravados: 34 min | Restantes: 179 min | Tempo total: 34m1s — 📊 16.0% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:28:56] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:28:56] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [TylerBloom] Gravados: 43 min | Restantes: 170 min | Tempo total: 43m1s — 📊 20.2% concluído\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [Tyler_price] Gravados: 37 min | Restantes: 176 min | Tempo total: 37m — 📊 17.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:01] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:01] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:29:01] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:29:01] [STATUS] Transmissões ativas: 20 | Total processadas: 38 | Buffer de resultados: 18\n",
            "⏱️ [Drill_Boys] Gravados: 27 min | Restantes: 186 min | Tempo total: 27m2s — 📊 12.7% concluído\n",
            "[2025-07-06 23:29:03] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [david37216] Gravados: 3 min | Restantes: 210 min | Tempo total: 3m1s — 📊 1.4% concluído\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [tentationdivine] Gravados: 33 min | Restantes: 180 min | Tempo total: 33m1s — 📊 15.5% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:07] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:07] [BUSCA] Buscando próxima transmissão livre: tentativa 2\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [ilkbir] Gravados: 44 min | Restantes: 169 min | Tempo total: 44m1s — 📊 20.7% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:11] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:11] [BUSCA] Buscando próxima transmissão livre: tentativa 3\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [Mariokurt] Gravados: 42 min | Restantes: 171 min | Tempo total: 42m — 📊 19.7% concluído\n",
            "🎬 Gerando poster com ffmpeg para Steven0807 no segundo 7...\n",
            "❌ ffmpeg não conseguiu gerar poster para Steven0807.\n",
            "STDOUT:\n",
            "\n",
            "STDERR:\n",
            "ffmpeg version 4.4.2-0ubuntu0.22.04.1 Copyright (c) 2000-2021 the FFmpeg developers\n",
            "  built with gcc 11 (Ubuntu 11.2.0-19ubuntu1)\n",
            "  configuration: --prefix=/usr --extra-version=0ubuntu0.22.04.1 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --arch=amd64 --enable-gpl --disable-stripping --enable-gnutls --enable-ladspa --enable-libaom --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libcodec2 --enable-libdav1d --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librabbitmq --enable-librubberband --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libsrt --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvidstab --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzimg --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-pocketsphinx --enable-librsvg --enable-libmfx --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libx264 --enable-shared\n",
            "  libavutil      56. 70.100 / 56. 70.100\n",
            "  libavcodec     58.134.100 / 58.134.100\n",
            "  libavformat    58. 76.100 / 58. 76.100\n",
            "  libavdevice    58. 13.100 / 58. 13.100\n",
            "  libavfilter     7.110.100 /  7.110.100\n",
            "  libswscale      5.  9.100 /  5.  9.100\n",
            "  libswresample   3.  9.100 /  3.  9.100\n",
            "  libpostproc    55.  9.100 / 55.  9.100\n",
            "https://stackvaults-hls.xcdnpro.com/42dec269-260e-4994-8b7e-95c929b834dd/hls/as+0b47ac28-a4fd-4158-86f7-49e8de1d8bda/index.m3u8: Invalid data found when processing input\n",
            "\n",
            "❌ Não foi possível gerar poster válido via liveInfo para Steven0807.\n",
            "🖼️ Poster baixado em: /content/Mlkdotado200_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:14] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:14] [BUSCA] Buscando próxima transmissão livre: tentativa 4\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:18] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:18] [BUSCA] Buscando próxima transmissão livre: tentativa 5\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [newboy69_hot] Gravados: 32 min | Restantes: 181 min | Tempo total: 32m — 📊 15.0% concluído\n",
            "📤 Upload bem-sucedido. URL: https://short.icu/P82kK18AE | SLUG: P82kK18AE\n",
            "🖼️ Poster movido para /content/XCam/xcam-db/user/peterhun/P82kK18AE.jpg\n",
            "🗂️ Poster também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/peterhun/P82kK18AE.jpg\n",
            "✅ rec.json para peterhun atualizado em /content/XCam/xcam-db/user/peterhun/rec.json\n",
            "🗂️ rec.json também salvo no Drive: /content/drive/MyDrive/XCam.Drive/XCam/xcam-db/user/peterhun/rec.json\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:22] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:22] [BUSCA] Buscando próxima transmissão livre: tentativa 6\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "🗑️ Arquivo de vídeo removido do Colab: /content/temp_recordings/peterhun_06-07-2025_23-01_26m42s.mp4\n",
            "[2025-07-06 23:29:23] [WORKER] Finalizou gravação: peterhun | Sucesso: True | Arquivo: peterhun_06-07-2025_23-01_26m42s.mp4 | Abyss: {'status': True, 'msg': 'Complete', 'slug': 'P82kK18AE', 'urlIframe': 'https://short.icu/P82kK18AE'}\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:27] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:27] [BUSCA] Buscando próxima transmissão livre: tentativa 7\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de peterhun não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "⏱️ [alerrandroo1] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:32] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:32] [BUSCA] Buscando próxima transmissão livre: tentativa 8\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de peterhun não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🖼️ Poster baixado em: /content/Mlkdotado200_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:34] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:34] [BUSCA] Buscando próxima transmissão livre: tentativa 9\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⚠️ liveInfo de peterhun não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🖼️ Poster baixado em: /content/Mlkdotado200_poster_temp.jpg\n",
            "🎯 Transmissão livre encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:36] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:36] [BUSCA] Buscando próxima transmissão livre: tentativa 10\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [BenBlaze] Gravados: 37 min | Restantes: 176 min | Tempo total: 37m — 📊 17.4% concluído\n",
            "⏱️ [coepretinxxx] Gravados: 4 min | Restantes: 209 min | Tempo total: 4m — 📊 1.9% concluído\n",
            "⚠️ liveInfo de peterhun não retornou cdnURL/edgeURL (usuário possivelmente offline).\n",
            "🎬 Gerando poster com ffmpeg para Mlkdotado200 no segundo 7...\n",
            "⏱️ [nainarevlis] Gravados: 28 min | Restantes: 185 min | Tempo total: 28m — 📊 13.1% concluído\n",
            "⏱️ [LoboDN] Gravados: 3 min | Restantes: 210 min | Tempo total: 3m1s — 📊 1.4% concluído\n",
            "🖼️ Poster gerado via ffmpeg: /content/Mlkdotado200_poster_ffmpeg.jpg\n",
            "🎯 Transmissão livre (pelo liveInfo) encontrada: Mlkdotado200\n",
            "[2025-07-06 23:29:43] [BUSCA] Usuário Mlkdotado200 já processado ou em blacklist, ignorando.\n",
            "[2025-07-06 23:29:43] [BUSCA] Nenhuma transmissão livre encontrada após tentativas (todos em blacklist/log ou offline).\n",
            "[2025-07-06 23:29:43] [LOOP] Não há mais transmissões para preencher as vagas livres.\n",
            "[2025-07-06 23:29:43] [STATUS] Transmissões ativas: 20 | Total processadas: 38 | Buffer de resultados: 19\n",
            "⏱️ [ADAM_HYUGA] Gravados: 44 min | Restantes: 169 min | Tempo total: 44m1s — 📊 20.7% concluído\n",
            "⏱️ [Sexe_Sauvage_AD] Gravados: 35 min | Restantes: 178 min | Tempo total: 35m1s — 📊 16.4% concluído\n",
            "[2025-07-06 23:29:45] [LOOP] 1 gravações finalizaram. Vagas livres: 31\n",
            "[2025-07-06 23:29:45] [BUSCA] Buscando próxima transmissão livre: tentativa 1\n",
            "🔎 Buscando próxima transmissão livre: https://api.xcam.gay/?limit=1500&page=1\n",
            "⏱️ [classied3] Gravados: 40 min | Restantes: 173 min | Tempo total: 40m1s — 📊 18.8% concluído\n",
            "⚠️ liveInfo de peterhun não retornou cdnURL/edgeURL (usuário possivelmente offline).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Célula extra: Commit final de pendências\n",
        "def commit_final_pendencias():\n",
        "    commit_buffer = getattr(upload_to_abyss_and_update_json, 'commit_buffer', [])\n",
        "    if commit_buffer:\n",
        "        print(f\"🔔 Realizando commit/push final de {len(commit_buffer)} pendências...\")\n",
        "        git_commit_and_push(commit_buffer, commit_message=\"Commit final de pendências\")\n",
        "        commit_buffer.clear()\n",
        "    else:\n",
        "        print(\"✅ Sem pendências para commit final.\")\n",
        "\n",
        "# Execute isto ao final do processamento\n",
        "# commit_final_pendencias()"
      ],
      "metadata": {
        "id": "eXVBhXjsAuAY"
      },
      "id": "eXVBhXjsAuAY",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "c9hve1ySGVAs"
      ],
      "cell_execution_strategy": "setup",
      "gpuType": "V28",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "TPU"
  },
  "nbformat": 4,
  "nbformat_minor": 5
}